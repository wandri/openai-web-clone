{
  "pipes": [],
  "interfaces": [
    {
      "name": "ChartBarTimelineProps",
      "id": "interface-ChartBarTimelineProps-ea8f92966de21b8759de06be6443fa0c25694c1079efd726977a6af2ef509df6b59c046482f3764c896aec2a17e8a621738875b05c0d80c93e7628ecede19bef",
      "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import React, {FunctionComponent} from \"react\";\nimport {Bar, BarChart, CartesianGrid, Rectangle, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\nimport {LineChartDatum} from \"./chart-bar-timeline.component\";\nimport {barColor, lightBarColor, models} from \"../../../../pages/usage/demo\";\nimport {sum} from \"d3\";\n\ninterface ChartBarTimelineProps {\n  data: LineChartDatum[],\n  isOvering: boolean,\n}\n\n\nexport const renderCustomYAxis = (data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.x} y={data.y} dy={5} fontSize={10} textAnchor={\"end\"}>\n      <tspan>${data.payload.value}</tspan>\n    </text>\n  );\n}\n\nexport const renderCustomXAxis = (data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.payload.coordinate} y={data.y} dy={6} fontSize={10} textAnchor={\"middle\"}>\n      {formatDate(data.payload.value)}\n    </text>\n  );\n}\n\nconst computeCost: (cost: number) => string = (cost: number) => {\n  if (!cost) {\n    return '-';\n  } else if (cost < 0.01) {\n    return `<$${Math.round(cost * 100) / 100}`\n  } else {\n    return `$${Math.round(cost * 100) / 100}`\n  }\n}\n\nconst formatDate = (date?: Date) => {\n  return date?.toLocaleDateString(\"en-US\", {\n    month: 'short',\n    day: 'numeric'\n  });\n}\n\nconst renderTooltip = (tooltip: any) => {\n  if (tooltip.active) {\n    const total = sum(tooltip.payload.map((pld: { value: any; }) => pld.value));\n    return <div className='shadow border p-2.5 bg-white rounded-lg text-xs flex flex-col'>\n      <div className='flex items-center justify-between font-semibold gap-2'>\n        <span className='min-w-[100px]'>{formatDate(tooltip.label)}</span>\n        <span>{computeCost(total)}</span>\n      </div>\n      {tooltip.payload.filter((pld: any) => pld.value > 0).map((pld: any) => <div key={pld.name}\n                                                                                  className='flex items-center justify-between gap-2 text-gray-500'>\n        <span className='flex items-center gap-2'>\n        <span className='h-2 w-2' style={{background: barColor[pld.name]}}></span>\n          {pld.name}\n        </span>\n        <span className='font-semibold'>{computeCost(pld.value)}</span>\n      </div>)}\n    </div>;\n  }\n  return null;\n};\nexport const ChartBarTimeline: FunctionComponent<ChartBarTimelineProps> = (props: ChartBarTimelineProps) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\n      <BarChart\n        data={props.data}\n        margin={{\n          top: 10,\n          right: 15,\n          left: -40,\n          bottom: 10,\n        }}\n      >\n        <Tooltip content={renderTooltip} cursor={false}/>\n        <CartesianGrid vertical={false}/>\n        <XAxis dataKey=\"date\" tick={renderCustomXAxis} axisLine={false} interval={5} domain={['dataMin', 'dataMax']}/>\n        <YAxis tick={renderCustomYAxis} axisLine={false} stroke={'none'} allowDataOverflow={true}/>\n        {models.map((model, i) => (\n          <Bar dataKey={model} key={i} stackId=\"a\" fill={props.isOvering ? lightBarColor[model] : barColor[model]}\n               activeBar={<Rectangle fill={barColor[model]}/>}/>))}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n",
      "properties": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "LineChartDatum[]",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "isOvering",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Menu",
      "id": "interface-Menu-1269ce27f92b8263da6fb730f8cebd227036e6033009d239618e199ece4141f6c7410d840ec6c4570779ed42ce0eb0c442c0419030c7770eada8ab36d58b1dc2",
      "file": "src/app/components/navigation/vertical-menu/vertical-menu.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {MenuButtonComponent} from \"./menu-button/menu-button.component\";\r\n\r\nexport interface Menu {\r\n  name: string,\r\n  path: string[],\r\n  children?: Menu[]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-vertical-menu',\r\n  standalone: true,\r\n  imports: [\r\n    MenuButtonComponent\r\n  ],\r\n  templateUrl: './vertical-menu.component.html',\r\n  styles: [':host {@apply flex flex-col h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VerticalMenuComponent {\r\n  @Input() navigations: { menu: Menu[], title: string }[] = []\r\n}\r\n",
      "properties": [
        {
          "name": "children",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Menu[]",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "path",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "MultiButton",
      "id": "interface-MultiButton-882b74d9b627af32ee8c0f4af739662999d444ab722dc34fc6b61337aab39e211061a35b9c42061738ba748e2357751b9140ef3e53b03d638ebda72337104eca",
      "file": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, signal} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\nexport interface OptionButton {\r\n  fontIcon?: string;\r\n  svgIcon?: string;\r\n  text?: string;\r\n}\r\n\r\nexport interface MultiButton extends OptionButton {\r\n  options?: OptionButton[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-button-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './button-toggle.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonToggleComponent {\r\n  @Input({required: true}) color: 'neutral' | \"primary\" = 'primary'\r\n  @Input() size: 'md' | 'sm' = 'sm';\r\n  @Input() buttons: MultiButton[] = [];\r\n\r\n  readonly activeIndex = signal(0);\r\n\r\n  changeIndex(index: number): void {\r\n    this.activeIndex.set(index);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OptionButton[]",
          "optional": true,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [
        "OptionButton"
      ]
    },
    {
      "name": "OptionButton",
      "id": "interface-OptionButton-882b74d9b627af32ee8c0f4af739662999d444ab722dc34fc6b61337aab39e211061a35b9c42061738ba748e2357751b9140ef3e53b03d638ebda72337104eca",
      "file": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, signal} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\nexport interface OptionButton {\r\n  fontIcon?: string;\r\n  svgIcon?: string;\r\n  text?: string;\r\n}\r\n\r\nexport interface MultiButton extends OptionButton {\r\n  options?: OptionButton[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-button-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './button-toggle.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonToggleComponent {\r\n  @Input({required: true}) color: 'neutral' | \"primary\" = 'primary'\r\n  @Input() size: 'md' | 'sm' = 'sm';\r\n  @Input() buttons: MultiButton[] = [];\r\n\r\n  readonly activeIndex = signal(0);\r\n\r\n  changeIndex(index: number): void {\r\n    this.activeIndex.set(index);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "fontIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "svgIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "text",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "PieChartProps",
      "id": "interface-PieChartProps-16b356af7e39599843210ec0a5c50ea8efcedf1d38bbf45dceef6dfb4bb313fc808ad57935324eca883bf9df5f747876e7001c815a16025e1d0166687d9a7be9",
      "file": "src/app/components/elements/chart/pie-chart/pie-chart.tsx",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import React, {FunctionComponent} from \"react\";\r\nimport {Cell, Pie, PieChart, ResponsiveContainer, Sector} from \"recharts\";\r\n\r\ninterface PieChartProps {\r\n  data: number,\r\n  size: number,\r\n}\r\n\r\n\r\nexport const ReactPieChart: FunctionComponent<PieChartProps> = (props: PieChartProps) => {\r\n  const value = props.data\r\n  const fullCircleColor = '#ECECF1';\r\n  const data = [\r\n    {value: 1 - value, color: fullCircleColor},\r\n    {value: value, color: '#15803D'}\r\n  ];\r\n  const textColor = '#727277';\r\n  const outerRadius = props.size / 2;\r\n  const innerRadius = outerRadius - 20;\r\n  const renderActiveShape = () => {\r\n    return <g>\r\n      <text x={outerRadius} y={outerRadius} dy={8} textAnchor=\"middle\" fill={textColor}>\r\n        {Math.round(value * 100)}%\r\n      </text>\r\n      <Sector cx={props.size / 2} cy={props.size / 2} innerRadius={innerRadius} outerRadius={outerRadius}\r\n              startAngle={90} endAngle={480} fill={fullCircleColor}/>\r\n    </g>\r\n  }\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\r\n      <PieChart width={props.size} height={props.size}>\r\n        <Pie activeIndex={0} paddingAngle={0} animationBegin={0} animationDuration={1000} startAngle={90}\r\n             endAngle={480}\r\n             activeShape={renderActiveShape}\r\n             data={data}\r\n             dataKey=\"value\" innerRadius={innerRadius} outerRadius={outerRadius}\r\n             fill=\"#ECECF1\">\r\n          {data.map((datum, i) => (\r\n            <Cell key={`cell-${i}`} fill={datum.color}/>\r\n          ))}\r\n        </Pie>\r\n\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n",
      "properties": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [
    {
      "name": "HighlightDirective",
      "id": "directive-HighlightDirective-9b8a1e80398197b086fd97198517e593957b6556996ee29ab9d2ab7789e2cbd9dab753f13a74c074db80a43517fa25491e81fe4cee10e1d16fc93393b718a1a1",
      "file": "src/app/components/directive/highlight/highlight.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  ComponentRef,\r\n  DestroyRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport {Overlay, OverlayPositionBuilder, OverlayRef} from '@angular/cdk/overlay';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {TooltipComponent} from './tooltip/tooltip.component';\r\nimport {delay, fromEvent, takeWhile, tap} from 'rxjs';\r\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[appHighlight]'\r\n})\r\nexport class HighlightDirective implements OnInit {\r\n  elementRef: ElementRef = inject(ElementRef);\r\n  destroyRef: DestroyRef = inject(DestroyRef);\r\n  renderer: Renderer2 = inject(Renderer2);\r\n  @Input() highlightLink?: string;\r\n  @Input() appHighlightTooltip?: string;\r\n  @Input() appHighlightDisabled: boolean = false;\r\n  private overlay: Overlay = inject(Overlay);\r\n  private overlayPositionBuilder: OverlayPositionBuilder = inject(OverlayPositionBuilder);\r\n  private overlayRef?: OverlayRef;\r\n\r\n  private isOpened = false;\r\n  private isAttached = false;\r\n\r\n  constructor() {\r\n    if (!this.appHighlightDisabled) {\r\n      const element = this.elementRef.nativeElement;\r\n      fromEvent(element, 'mouseenter').pipe(\r\n        tap(() => this.isOpened = true),\r\n        delay(250),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      ).subscribe(() => this.show());\r\n      fromEvent(element, 'mouseleave').pipe(\r\n        tap(() => this.isOpened = false),\r\n        delay(750),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      ).subscribe(() => this.hide());\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'position', 'relative');\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'pointer');\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'group');\r\n      this.drawLine();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    const positionStrategy = this.overlayPositionBuilder\r\n      .flexibleConnectedTo(this.elementRef)\r\n      .withPositions([{\r\n        originX: 'center',\r\n        originY: 'bottom',\r\n        overlayX: 'center',\r\n        overlayY: 'top',\r\n        offsetY: 10\r\n      }]);\r\n    this.overlayRef = this.overlay.create({positionStrategy});\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    if (this.highlightLink) {\r\n      window.open(this.highlightLink, '_blank');\r\n    }\r\n  }\r\n\r\n  private drawLine(): void {\r\n    const underlineDiv = this.renderer.createElement('div');\r\n\r\n    this.renderer.addClass(underlineDiv, 'group-hover:border-gray-500');\r\n    this.renderer.addClass(underlineDiv, 'absolute');\r\n    this.renderer.addClass(underlineDiv, 'bottom-0');\r\n    this.renderer.addClass(underlineDiv, 'left-0');\r\n    this.renderer.addClass(underlineDiv, 'border-b');\r\n    this.renderer.addClass(underlineDiv, 'border-dotted');\r\n    this.renderer.addClass(underlineDiv, 'border-gray-400');\r\n    this.renderer.addClass(underlineDiv, 'w-full');\r\n\r\n    this.renderer.appendChild(this.elementRef.nativeElement, underlineDiv);\r\n  }\r\n\r\n  private show() {\r\n    if (!!this.appHighlightTooltip && this.overlayRef && this.isOpened) {\r\n      this.isOpened = true;\r\n      const tooltipPortal = new ComponentPortal(TooltipComponent);\r\n\r\n      if (!this.isAttached) {\r\n        this.isAttached = true;\r\n        const tooltipRef: ComponentRef<TooltipComponent> = this.overlayRef.attach(tooltipPortal);\r\n        tooltipRef.instance.text = this.appHighlightTooltip;\r\n        fromEvent(tooltipRef.location.nativeElement, 'mouseenter').pipe(\r\n          tap(() => this.isOpened = true),\r\n          takeWhile(() => this.isAttached)\r\n        ).subscribe(() => this.show());\r\n        fromEvent(tooltipRef.location.nativeElement, 'mouseleave').pipe(\r\n          tap(() => this.isOpened = false),\r\n          delay(750),\r\n          takeWhile(() => this.isAttached)\r\n        ).subscribe(() => this.hide());\r\n      }\r\n    }\r\n  }\r\n\r\n  private hide() {\r\n    if (!!this.appHighlightTooltip && this.overlayRef && !this.isOpened) {\r\n      this.overlayRef.detach();\r\n      this.isAttached = false;\r\n    }\r\n  }\r\n}\r\n",
      "selector": "[appHighlight]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "appHighlightDisabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "appHighlightTooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "highlightLink",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70
        }
      ],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DestroyRef",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "elementRef",
          "defaultValue": "inject(ElementRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "isAttached",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "isOpened",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlay",
          "defaultValue": "inject(Overlay)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Overlay",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlayPositionBuilder",
          "defaultValue": "inject(OverlayPositionBuilder)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OverlayPositionBuilder",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlayRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OverlayRef",
          "optional": true,
          "description": "",
          "line": 31,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "renderer",
          "defaultValue": "inject(Renderer2)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Renderer2",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [
        {
          "name": "drawLine",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        },
        {
          "name": "hide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click'"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        }
      ],
      "extends": [],
      "implements": [
        "OnInit"
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 34
      }
    },
    {
      "name": "HighlightDirective",
      "id": "directive-HighlightDirective-b9c79fc314e687f6a823f00ecb3739fe78700ea4c413841386a70e62e2c0083b26b388ac78d91eaf14232b5125b6f272b182b12a513e60cdc92a6b6da9d490af-1",
      "file": "src/app/components/directive/menu/menu.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  ComponentRef,\r\n  DestroyRef,\r\n  Directive,\r\n  ElementRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {Overlay, OverlayPositionBuilder, OverlayRef} from '@angular/cdk/overlay';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {fromEvent, tap} from 'rxjs';\r\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\r\nimport {MenuComponent} from \"./menu.component\";\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[appMenu]'\r\n})\r\nexport class HighlightDirective implements OnInit {\r\n  @Input({required: true, alias: \"appMenuFor\"}) dropdownPanel!: TemplateRef<HTMLElement>;\r\n  @Input() appMenuDisabled: boolean = false;\r\n  private elementRef: ElementRef = inject(ElementRef);\r\n  private destroyRef: DestroyRef = inject(DestroyRef);\r\n  private renderer: Renderer2 = inject(Renderer2);\r\n  private overlay: Overlay = inject(Overlay);\r\n  private overlayPositionBuilder: OverlayPositionBuilder = inject(OverlayPositionBuilder);\r\n  private overlayRef?: OverlayRef;\r\n\r\n  private isOpened = false;\r\n  private isAttached = false;\r\n\r\n  constructor() {\r\n    if (!this.appMenuDisabled) {\r\n      const element = this.elementRef.nativeElement;\r\n      fromEvent<PointerEvent>(element, 'click').pipe(\r\n        tap(() => this.isOpened = !this.isOpened),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      ).subscribe((event) => {\r\n        event.stopPropagation();\r\n        this.show();\r\n      });\r\n      fromEvent<PointerEvent>(document, 'click').pipe(\r\n        tap(() => this.isOpened = false),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      ).subscribe((event) => this.hide());\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'position', 'relative');\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'pointer');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    const positionStrategy = this.overlayPositionBuilder\r\n      .flexibleConnectedTo(this.elementRef)\r\n      .withPositions([{\r\n        originX: 'center',\r\n        originY: 'top',\r\n        overlayX: 'center',\r\n        overlayY: 'bottom',\r\n        offsetY: -10\r\n      }]);\r\n    this.overlayRef = this.overlay.create({positionStrategy});\r\n  }\r\n\r\n  private show() {\r\n    if (this.overlayRef && this.isOpened && this.dropdownPanel) {\r\n      this.isOpened = true;\r\n      if (!this.isAttached) {\r\n        this.isAttached = true;\r\n        const componentPortal = new ComponentPortal(MenuComponent);\r\n        const ref: ComponentRef<MenuComponent> = this.overlayRef.attach(componentPortal);\r\n        ref.instance.content = this.dropdownPanel;\r\n        fromEvent<PointerEvent>(ref.location.nativeElement, 'click').pipe(\r\n          tap(() => this.isOpened = !this.isOpened),\r\n          takeUntilDestroyed(this.destroyRef)\r\n        ).subscribe((event) => {\r\n          event.stopPropagation();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private hide() {\r\n    if (this.overlayRef && !this.isOpened) {\r\n      this.overlayRef.detach();\r\n      this.isAttached = false;\r\n    }\r\n  }\r\n}\r\n",
      "selector": "[appMenu]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "appMenuDisabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "required": true,
          "name": "appMenuFor",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 23,
          "type": "TemplateRef<HTMLElement>",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DestroyRef",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "elementRef",
          "defaultValue": "inject(ElementRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "isAttached",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "isOpened",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlay",
          "defaultValue": "inject(Overlay)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Overlay",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlayPositionBuilder",
          "defaultValue": "inject(OverlayPositionBuilder)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OverlayPositionBuilder",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "overlayRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OverlayRef",
          "optional": true,
          "description": "",
          "line": 30,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "renderer",
          "defaultValue": "inject(Renderer2)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Renderer2",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "hide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        }
      ],
      "extends": [],
      "implements": [
        "OnInit"
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 33
      },
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HighlightDirective-1"
    }
  ],
  "components": [
    {
      "name": "AccountComponent",
      "id": "component-AccountComponent-fcfe3627bdb7a682d6fbb02ea5410111d29a807c418a5f1e0e80cf20121b727217d0a0990edfecf8107ddc5ab295165d049158b24ead21f9363447cf098dc1bb",
      "file": "src/app/pages/account/account.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-account",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./account.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterOutlet"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {RouterOutlet} from \"@angular/router\";\n\n@Component({\n  selector: 'app-account',\n  standalone: true,\n  imports: [\n    RouterOutlet\n  ],\n  templateUrl: './account.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccountComponent {\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<router-outlet/>\n"
    },
    {
      "name": "ApiKeysComponent",
      "id": "component-ApiKeysComponent-ef2b5a8ce5de0f1d34f4822daf6390a6343180c16c44a2df06494632c9cda9ea3ed733988631ddc9b653e37eb30ed25178c83564a5963bffe7b9e0b812e38eb7",
      "file": "src/app/pages/api-keys/api-keys.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-api-keys",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./api-keys.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "datasource",
          "defaultValue": "computed(() => {\n    if (this.isLoading()) {\n      return [];\n    } else {\n      return new MatTableDataSource<{\n        name: string,\n        key: string,\n        createdAt: Date,\n        lastUsedAt: Date\n      }>([\n        {\n          name: 'Personal key',\n          key: 'sk-...er5L',\n          createdAt: new Date('01/01/2022'),\n          lastUsedAt: new Date('05/05/2022'),\n        }\n      ])\n    }\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "displayedColumns",
          "defaultValue": "['name', 'key', 'createdAt', 'lastUsedAt', 'action']",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "CdkTableModule",
          "type": "module"
        },
        {
          "name": "DatePipe",
          "type": "pipe"
        },
        {
          "name": "ButtonIconComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "SelectDropdownComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed} from '@angular/core';\nimport {HeaderComponent} from \"../../components/elements/headers/header/header.component\";\nimport {CdkTableModule} from \"@angular/cdk/table\";\nimport {DatePipe} from \"@angular/common\";\nimport {ButtonIconComponent} from \"../../components/elements/buttons/button-icon/button-icon.component\";\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\nimport {SelectDropdownComponent} from \"../../components/elements/inputs/select-dropdown/select-dropdown.component\";\nimport {toSignal} from \"@angular/core/rxjs-interop\";\nimport {delay, of, startWith} from \"rxjs\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {SkeletonLoaderComponent} from \"../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\nimport {IconComponent} from \"../../components/elements/icon/icon.component\";\n\n@Component({\n  selector: 'app-api-keys',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    CdkTableModule,\n    DatePipe,\n    ButtonIconComponent,\n    ButtonComponent,\n    SelectDropdownComponent,\n    SkeletonLoaderComponent,\n    IconComponent\n  ],\n  templateUrl: './api-keys.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApiKeysComponent {\n  readonly isLoading = toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ));\n  readonly displayedColumns = ['name', 'key', 'createdAt', 'lastUsedAt', 'action'];\n  readonly datasource = computed(() => {\n    if (this.isLoading()) {\n      return [];\n    } else {\n      return new MatTableDataSource<{\n        name: string,\n        key: string,\n        createdAt: Date,\n        lastUsedAt: Date\n      }>([\n        {\n          name: 'Personal key',\n          key: 'sk-...er5L',\n          createdAt: new Date('01/01/2022'),\n          lastUsedAt: new Date('05/05/2022'),\n        }\n      ])\n    }\n  });\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header title=\"API keys\"/>\r\n<div class=\"flex flex-col max-w-screen-md p-6 gap-8\">\r\n  <div class=\"flex flex-col gap-4\">\r\n    <p>\r\n      Your secret API keys are listed below. Please note that we do not display your secret API keys again after you\r\n      generate them.\r\n    </p>\r\n    <p>\r\n      Do not share your API key with others, or expose it in the browser or other client-side code. In order to protect\r\n      the security of your account, OpenAI may also automatically disable any API key that we've found has leaked\r\n      publicly.\r\n    </p>\r\n    <table [dataSource]=\"datasource()\" cdk-table>\r\n      <ng-container cdkColumnDef=\"name\">\r\n        <th *cdkHeaderCellDef cdk-header-cell class=\"flex-1 pr-2 py-1.5  flex justify-start\"> NAME</th>\r\n        <td *cdkCellDef=\"let element\" cdk-cell class=\"flex-1 py-2 pr-2  flex justify-start\"> {{ element.name }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container cdkColumnDef=\"key\">\r\n        <th *cdkHeaderCellDef cdk-header-cell class=\"flex-1 px-2 py-1.5  flex justify-start\"> KEY</th>\r\n        <td *cdkCellDef=\"let element\" cdk-cell class=\"flex-1 p-2  flex justify-start\"> {{ element.key }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container cdkColumnDef=\"createdAt\">\r\n        <th *cdkHeaderCellDef cdk-header-cell class=\"flex-1 px-2 py-1.5  flex justify-start\"> CREATED</th>\r\n        <td *cdkCellDef=\"let element\" cdk-cell\r\n            class=\"flex-1 p-2  flex justify-start\"> {{ element.createdAt | date:'mediumDate' }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container cdkColumnDef=\"lastUsedAt\">\r\n        <th *cdkHeaderCellDef cdk-header-cell class=\"flex-1 px-2 py-1.5  flex justify-start\"> LAST USED</th>\r\n        <td *cdkCellDef=\"let element\" cdk-cell\r\n            class=\"flex-1 p-2  flex justify-start\"> {{ element.lastUsedAt | date:'mediumDate' }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container cdkColumnDef=\"action\">\r\n        <th *cdkHeaderCellDef cdk-header-cell class=\"flex-1 pl-2 py-1.5  flex justify-start\"></th>\r\n        <td *cdkCellDef=\"let element\" cdk-cell class=\"flex-1 py-2 pl-2 flex gap-2 justify-start\">\r\n          <app-button-icon svgIcon=\"edit-square\"/>\r\n          <app-button-icon disabled svgIcon=\"bin\"/>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr *cdkHeaderRowDef=\"displayedColumns\" cdk-header-row\r\n          class=\"flex text-xs whitespace-nowrap font-bold border-b\"></tr>\r\n      <tr *cdkRowDef=\"let row; columns: displayedColumns;\" cdk-row class=\"flex text-gray-600\"></tr>\r\n      <tr *cdkNoDataRow class=\"flex text-gray-600\">\r\n        @if (isLoading()) {\r\n          @for (column of displayedColumns;track column;let first = $first;let last=$last) {\r\n            @if (!last) {\r\n              <td class=\"flex-1 py-2\"\r\n                  [class.px-2]=\"!first\"\r\n                  [class.pr-2]=\"first\">\r\n                <app-skeleton-loader class=\"w-full h-6\"/>\r\n              </td>\r\n            } @else {\r\n              <td class=\"flex-1\"></td>\r\n            }\r\n          }\r\n        }\r\n      </tr>\r\n    </table>\r\n\r\n    <app-button color=\"neutral\" size=\"sm\">\r\n      <app-icon svgIcon=\"add\"/>\r\n      Create new secret key\r\n    </app-button>\r\n  </div>\r\n  <div class=\"flex flex-col gap-4\">\r\n    <h3 class=\"font-bold text-xl\">Default organization</h3>\r\n    <div>If you belong to multiple organizations, this setting controls which organization is used by default when\r\n      making requests with the API keys above.\r\n    </div>\r\n    <div>\r\n      <app-select-dropdown class=\"w-52\"/>\r\n    </div>\r\n    <div class=\"text-xs\">Note: You can also specify which organization to use for each API request. See\r\n      <a class=\"font-medium cursor-pointer text-green-600 hover:text-green-700\">\r\n        Authentication\r\n      </a>\r\n      to learn more.\r\n    </div>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-a35250fa8213ca0579095c556c90542b13295cf0eb935fbd61f54ded949be2ececa566e47c6ece5f68bd3b1425af9466a536c6c83f303b4a9c0aa391dd8e5bd6",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col h-full w-full;}"
      ],
      "templateUrl": [
        "./app.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "title",
          "defaultValue": "'openai-web-clone'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "RouterOutlet"
        },
        {
          "name": "SidenavComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {Component} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterOutlet} from '@angular/router';\nimport {SidenavComponent} from \"./components/navigation/sidenav/sidenav.component\";\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, SidenavComponent],\n  templateUrl: './app.component.html',\n  styles: [':host {@apply flex flex-col h-full w-full;}'],\n})\nexport class AppComponent {\n  title = 'openai-web-clone';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col h-full w-full;}\n",
      "extends": [],
      "templateData": "<div class=\"flex h-full w-full\">\n  <app-sidenav/>\n  <div class=\"w-full h-full pl-[57px] xl:pl-0 overflow-auto\">\n    <router-outlet/>\n  </div>\n</div>\n"
    },
    {
      "name": "AssistantsComponent",
      "id": "component-AssistantsComponent-2e873161ea383c4b7112d1b165a6066e13ecf9c91b074b1da768f5869c15f05d759aab21521d7a68404817ea6abb38988b1136895b580b0609eb77d151fb0cd5",
      "file": "src/app/pages/assistants/assistants.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-assistants",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./assistants.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {HeaderComponent} from \"../../components/elements/headers/header/header.component\";\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\nimport {toSignal} from \"@angular/core/rxjs-interop\";\nimport {delay, of, startWith} from \"rxjs\";\nimport {SkeletonLoaderComponent} from \"../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\nimport {IconComponent} from \"../../components/elements/icon/icon.component\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-assistants',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    ButtonComponent,\n    SkeletonLoaderComponent,\n    IconComponent,\n    MatIconModule\n  ],\n  templateUrl: './assistants.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AssistantsComponent {\n  readonly isLoading = toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header title=\"Assistants\">\n  <app-button color=\"primary\" size=\"sm\">\n    <app-icon svgIcon=\"add\"/>\n    Create\n  </app-button>\n</app-header>\n<div class=\"flex grow w-full\">\n  @if (isLoading()) {\n    <div class=\"w-full px-6 py-2 flex-col flex gap-2\">\n      <app-skeleton-loader class=\"w-full h-7\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n      <app-skeleton-loader class=\"w-full h-12\"/>\n    </div>\n  } @else {\n    <div class=\"flex w-full h-full items-center justify-center gap-4 flex-col\">\n      <div class=\"bg-gray-100 text-gray-600 h-10 w-10 flex items-center justify-center rounded-lg\">\n        <mat-icon svgIcon=\"robot\"/>\n      </div>\n      <div class=\"flex flex-col gap-1.5 items-center\">\n        <div class=\"h-5 font-medium\">Create an assistant</div>\n        <div class=\"text-sm h-5 flex items-start gap-1\">\n          <span>to get started with</span>\n          <a class=\"h-5 font-medium flex items-end cursor-pointer text-green-700 hover:text-green-800\">\n            the Assistants API\n            <mat-icon class=\"scale-[60%]\" svgIcon=\"link\"/>\n          </a>\n        </div>\n      </div>\n      <app-button color=\"primary\" size=\"md\">\n        <app-icon svgIcon=\"add\"/>\n        Create\n      </app-button>\n    </div>\n  }\n</div>\n"
    },
    {
      "name": "BadgeComponent",
      "id": "component-BadgeComponent-e04e05c5009f86416dd756becef84a6522915182004ab77c62f3f6b342de06afdb8dbeb9cb0e025502959abbe90b8139d3050f72297d7b63338b4571aac8fcbb",
      "file": "src/app/components/elements/tag/badge.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-badge",
      "styleUrls": [],
      "styles": [
        ":host {@apply inline-block}"
      ],
      "templateUrl": [
        "./badge.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 12,
          "type": "\"xs\" | \"sm\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  standalone: true,\n  imports: [],\n  styles: [':host {@apply inline-block}'],\n  templateUrl: './badge.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BadgeComponent {\n  @Input({required: true}) size: 'xs' | 'sm' = 'sm';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply inline-block}\n",
      "extends": [],
      "templateData": "<div\n  [class.text-sm]=\"size === 'sm'\"\n  [class.text-xs]=\"size === 'xs'\"\n  class=\"px-2 whitespace-nowrap pt-0.5 pb-x rounded-full text-green-700 bg-green-100 font-bold\">\n  <ng-content/>\n</div>\n"
    },
    {
      "name": "BillingsComponent",
      "id": "component-BillingsComponent-e3b8d47bc7b1faa6034a22925709164ae5908a0e54dcb90abf3234aa5c7a11e86be097017344cc38f97c7393df33b57c422ebfc88ef54fa9e28cf6425b8aef12",
      "file": "src/app/pages/account/billings/page/billings.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-billings",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./billings.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "tabs",
          "defaultValue": "[\r\n    {name: 'Overview', route: ['/', 'account', 'billings', 'overview']},\r\n    {name: 'Payment methods', route: ['/', 'account', 'billings', 'payment-methods']},\r\n    {name: 'Billing history', route: ['/', 'account', 'billings', 'history']},\r\n    {name: 'Preferences', route: ['/', 'account', 'billings', 'preferences']},\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "RouterOutlet"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {HeaderComponent} from \"../../../../components/elements/headers/header/header.component\";\r\nimport {RouterOutlet} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-billings',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    RouterOutlet\r\n  ],\r\n  templateUrl: './billings.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BillingsComponent {\r\n  readonly tabs: { name: string; route: string[] }[] = [\r\n    {name: 'Overview', route: ['/', 'account', 'billings', 'overview']},\r\n    {name: 'Payment methods', route: ['/', 'account', 'billings', 'payment-methods']},\r\n    {name: 'Billing history', route: ['/', 'account', 'billings', 'history']},\r\n    {name: 'Preferences', route: ['/', 'account', 'billings', 'preferences']},\r\n  ]\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header [tabs]=\"tabs\" title=\"Billing settings\">\r\n\r\n</app-header>\r\n<router-outlet/>\r\n"
    },
    {
      "name": "BillingsHistoryComponent",
      "id": "component-BillingsHistoryComponent-4ddfcf55fc6a936757ccdb00f197cfabea62f80dfdc1debb471e026ead790ced456b1661d894d58bea0aec5a108acc8dff9db484e5a39f5c2c19abbd6d745007",
      "file": "src/app/pages/account/billings/billings-history/billings-history.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-billings-history",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./billings-history.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "datasource",
          "defaultValue": "computed(() => {\r\n    if (this.isLoading()) {\r\n      return [];\r\n    } else {\r\n      return new MatTableDataSource<{\r\n        invoice: string,\r\n        status: 'Paid' | 'Unpaid',\r\n        createdAt: Date,\r\n        amount: number\r\n      }>([\r\n        {\r\n          invoice: 'C0A0TH45-0006',\r\n          status: 'Paid',\r\n          amount: 6.54,\r\n          createdAt: new Date('01/01/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0007',\r\n          status: 'Paid',\r\n          amount: 6.01,\r\n          createdAt: new Date('01/02/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0008',\r\n          status: 'Paid',\r\n          amount: 3.53,\r\n          createdAt: new Date('01/03/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0009',\r\n          status: 'Paid',\r\n          amount: 1.94,\r\n          createdAt: new Date('01/04/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0010',\r\n          status: 'Paid',\r\n          amount: 5.75,\r\n          createdAt: new Date('01/05/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0011',\r\n          status: 'Paid',\r\n          amount: 2.09,\r\n          createdAt: new Date('01/06/2022'),\r\n        }\r\n      ])\r\n    }\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "displayedColumns",
          "defaultValue": "['invoice', 'status', 'amount', 'createdAt', 'action']",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(true)\r\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonIconComponent",
          "type": "component"
        },
        {
          "name": "CdkTableModule",
          "type": "module"
        },
        {
          "name": "DatePipe",
          "type": "pipe"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "BadgeComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed} from '@angular/core';\r\nimport {ButtonIconComponent} from \"../../../../components/elements/buttons/button-icon/button-icon.component\";\r\nimport {CdkTableModule} from \"@angular/cdk/table\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {\r\n  SkeletonLoaderComponent\r\n} from \"../../../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\r\nimport {toSignal} from \"@angular/core/rxjs-interop\";\r\nimport {delay, of, startWith} from \"rxjs\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {ButtonTextComponent} from \"../../../../components/elements/buttons/button-text/button-text.component\";\r\nimport {BadgeComponent} from \"../../../../components/elements/tag/badge.component\";\r\nimport {ButtonComponent} from \"../../../../components/elements/buttons/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-billings-history',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonIconComponent,\r\n    CdkTableModule,\r\n    DatePipe,\r\n    SkeletonLoaderComponent,\r\n    ButtonTextComponent,\r\n    BadgeComponent,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './billings-history.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BillingsHistoryComponent {\r\n  readonly isLoading = toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(true)\r\n  ));\r\n  readonly displayedColumns = ['invoice', 'status', 'amount', 'createdAt', 'action'];\r\n  readonly datasource = computed(() => {\r\n    if (this.isLoading()) {\r\n      return [];\r\n    } else {\r\n      return new MatTableDataSource<{\r\n        invoice: string,\r\n        status: 'Paid' | 'Unpaid',\r\n        createdAt: Date,\r\n        amount: number\r\n      }>([\r\n        {\r\n          invoice: 'C0A0TH45-0006',\r\n          status: 'Paid',\r\n          amount: 6.54,\r\n          createdAt: new Date('01/01/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0007',\r\n          status: 'Paid',\r\n          amount: 6.01,\r\n          createdAt: new Date('01/02/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0008',\r\n          status: 'Paid',\r\n          amount: 3.53,\r\n          createdAt: new Date('01/03/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0009',\r\n          status: 'Paid',\r\n          amount: 1.94,\r\n          createdAt: new Date('01/04/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0010',\r\n          status: 'Paid',\r\n          amount: 5.75,\r\n          createdAt: new Date('01/05/2022'),\r\n        },\r\n        {\r\n          invoice: 'C0A0TH45-0011',\r\n          status: 'Paid',\r\n          amount: 2.09,\r\n          createdAt: new Date('01/06/2022'),\r\n        }\r\n      ])\r\n    }\r\n  });\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<div class=\"flex flex-col gap-4 p-6 max-w-screen-md\">\r\n  <p class=\"text-gray-600\">Showing invoices within the past 12 months</p>\r\n  <div>\r\n    @if (!isLoading()) {\r\n      <table [dataSource]=\"datasource()\" cdk-table>\r\n        <ng-container cdkColumnDef=\"invoice\">\r\n          <th *cdkHeaderCellDef cdk-header-cell class=\"pr-2 py-1.5 text-start tracking-widest\">INVOICE</th>\r\n          <td *cdkCellDef=\"let element\" cdk-cell class=\"py-2 pr-2 \"> {{ element.invoice }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container cdkColumnDef=\"status\">\r\n          <th *cdkHeaderCellDef cdk-header-cell class=\"px-2 py-1.5 text-start tracking-widest\">STATUS</th>\r\n          <td *cdkCellDef=\"let element\" cdk-cell class=\"p-2 \">\r\n            <div>\r\n              <app-badge size=\"xs\">{{ element.status }}</app-badge>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container cdkColumnDef=\"amount\">\r\n          <th *cdkHeaderCellDef cdk-header-cell class=\"px-2 py-1.5 text-start tracking-widest\">AMOUNT</th>\r\n          <td *cdkCellDef=\"let element\" cdk-cell\r\n              class=\"p-2 text-right\"> ${{ element.amount }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container cdkColumnDef=\"createdAt\">\r\n          <th *cdkHeaderCellDef cdk-header-cell class=\"px-2 py-1.5 text-start tracking-widest\">CREATED</th>\r\n          <td *cdkCellDef=\"let element\" cdk-cell\r\n              class=\"p-2 \"> {{ element.createdAt | date:'MMM d, y, h:mm a' }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container cdkColumnDef=\"action\">\r\n          <th *cdkHeaderCellDef cdk-header-cell class=\"pl-2 py-1.5 text-start tracking-widest\"></th>\r\n          <td *cdkCellDef=\"let element\" cdk-cell class=\"py-2 pl-2 flex gap-2 justify-start\">\r\n            <div>\r\n              <app-button color=\"primary\" variant=\"ghost\" size=\"xs\">View</app-button>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *cdkHeaderRowDef=\"displayedColumns\" cdk-header-row\r\n            class=\"text-xs whitespace-nowrap font-bold border-b\"></tr>\r\n        <tr *cdkRowDef=\"let row; columns: displayedColumns;\" cdk-row class=\"text-gray-600 border-t\"></tr>\r\n      </table>\r\n    } @else {\r\n      <div class=\"flex flex-col gap-2\">\r\n        <app-skeleton-loader class=\"w-full h-6\"/>\r\n        <app-skeleton-loader class=\"w-full h-6\"/>\r\n        <app-skeleton-loader class=\"w-full h-6\"/>\r\n        <app-skeleton-loader class=\"w-full h-6\"/>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "BillingsOverviewComponent",
      "id": "component-BillingsOverviewComponent-ba287399ef1668f69104bedceccd5d3e6b1e641e03b28aa036a15f6bfd7d6ce2029abd7c351b08456eaf45b1d006d57ccd606499816437735ae03ad12667de0b",
      "file": "src/app/pages/account/billings/billings-overview/billings-overview.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-billings-overview",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./billings-overview.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "linkButtons",
          "defaultValue": "[\r\n    {\r\n      svgIcon: 'credit-card',\r\n      background: 'from-green-500 to-emerald-500',\r\n      title: 'Payment methods',\r\n      description: 'Add or change payment methods',\r\n      link: ['..', 'payment-methods'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'document',\r\n      background: 'from-violet-500 to-purple-500',\r\n      title: 'Billing history',\r\n      description: 'View past and current invoices',\r\n      link: ['..', 'history'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'settings',\r\n      background: 'from-pink-500 to-fuchsia-500',\r\n      title: 'Preferences',\r\n      description: 'Manage billing information',\r\n      link: ['..', 'preferences'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'fine-tuning',\r\n      background: 'from-red-500 to-rose-500',\r\n      title: 'Usage limits',\r\n      description: 'Set monthly spend limits',\r\n      link: ['/', 'account', 'limits'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'usage',\r\n      background: 'from-yellow-500 to-amber-500',\r\n      title: 'Pricing',\r\n      description: 'View pricing and FAQs',\r\n      link: ['/', 'account', 'limits'],\r\n      isExternalLink: true,\r\n    },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NoticeComponent",
          "type": "component"
        },
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        },
        {
          "name": "NgClass"
        },
        {
          "name": "RouterLink"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {NoticeComponent} from \"../../../../components/elements/notice/notice.component\";\r\nimport {ButtonTextComponent} from \"../../../../components/elements/buttons/button-text/button-text.component\";\r\nimport {ButtonComponent} from \"../../../../components/elements/buttons/button/button.component\";\r\nimport {IconComponent} from \"../../../../components/elements/icon/icon.component\";\r\nimport {NgClass} from \"@angular/common\";\r\nimport {RouterLink} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-billings-overview',\r\n  standalone: true,\r\n  imports: [\r\n    NoticeComponent,\r\n    ButtonTextComponent,\r\n    ButtonComponent,\r\n    IconComponent,\r\n    NgClass,\r\n    RouterLink\r\n  ],\r\n  templateUrl: './billings-overview.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BillingsOverviewComponent {\r\n\r\n  readonly linkButtons: {\r\n    svgIcon: string,\r\n    background: string,\r\n    title: string,\r\n    description: string,\r\n    link: string[],\r\n    isExternalLink: boolean\r\n  }[] = [\r\n    {\r\n      svgIcon: 'credit-card',\r\n      background: 'from-green-500 to-emerald-500',\r\n      title: 'Payment methods',\r\n      description: 'Add or change payment methods',\r\n      link: ['..', 'payment-methods'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'document',\r\n      background: 'from-violet-500 to-purple-500',\r\n      title: 'Billing history',\r\n      description: 'View past and current invoices',\r\n      link: ['..', 'history'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'settings',\r\n      background: 'from-pink-500 to-fuchsia-500',\r\n      title: 'Preferences',\r\n      description: 'Manage billing information',\r\n      link: ['..', 'preferences'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'fine-tuning',\r\n      background: 'from-red-500 to-rose-500',\r\n      title: 'Usage limits',\r\n      description: 'Set monthly spend limits',\r\n      link: ['/', 'account', 'limits'],\r\n      isExternalLink: false,\r\n    },\r\n    {\r\n      svgIcon: 'usage',\r\n      background: 'from-yellow-500 to-amber-500',\r\n      title: 'Pricing',\r\n      description: 'View pricing and FAQs',\r\n      link: ['/', 'account', 'limits'],\r\n      isExternalLink: true,\r\n    },\r\n  ]\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<div class=\"flex flex-col gap-12 p-6 max-w-screen-md\">\r\n  <div class=\"flex flex-col gap-4\">\r\n    <h3 class=\"font-bold text-xl\">Pay as you go</h3>\r\n    <div class=\"flex flex-col gap-1\">\r\n      <div class=\"text-lg font-semibold\">Credit balance</div>\r\n      <div class=\"text-3xl\">$7.24</div>\r\n    </div>\r\n    <app-notice>\r\n      <div class=\"flex flex-col text-sm gap-1\">\r\n        <div class=\"font-bold\">Auto recharge is on</div>\r\n        <div>When your credit balance reaches $5.00, your payment method will be charged to bring the balance up to\r\n          $10.00.\r\n        </div>\r\n        <app-button-text size=\"sm\">Modify</app-button-text>\r\n      </div>\r\n    </app-notice>\r\n    <div class=\"flex gap-2\">\r\n      <app-button color=\"neutral\" size=\"sm\">Add to credit balance</app-button>\r\n      <app-button color=\"neutral\" size=\"sm\">Cancel plan</app-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"grid grid-cols-2 gap-8\">\r\n    @for (linkButton of linkButtons;track linkButton) {\r\n      <a class=\"flex gap-4 items-center group cursor-pointer\" [routerLink]=\"linkButton.link\"\r\n         [target]=\"linkButton.isExternalLink ? '_blank':'_self'\">\r\n        <div class=\"w-[54px] h-[54px] bg-gradient-to-tr flex items-center justify-center rounded-lg text-white\"\r\n             [ngClass]=\"linkButton.background\"\r\n        >\r\n          <app-icon size=\"base\" [svgIcon]=\"linkButton.svgIcon\" class=\"group-hover:scale-110 transition-transform\"/>\r\n        </div>\r\n        <div class=\"flex flex-col gap-0.5\">\r\n          <div class=\"font-bold\">{{ linkButton.title }}</div>\r\n          <div class=\"text-gray-600 text-sm\">{{ linkButton.description }}</div>\r\n        </div>\r\n      </a>\r\n    }\r\n\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "BillingsPaymentMethodsComponent",
      "id": "component-BillingsPaymentMethodsComponent-bdbcf1861d5e7364889b829816942484c5c943c0db98f938d1b0c7097f5a22797090089c9ca16047cc7c2af6eeecc7bb99f25f4e9b645651b7d1259197e51102",
      "file": "src/app/pages/account/billings/billings-payment-methods/billings-payment-methods.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-billings-payment-methods",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./billings-payment-methods.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cards",
          "defaultValue": "computed<{\r\n    id: string,\r\n    brand: string,\r\n    country: string,\r\n    expirationMonth: number,\r\n    expirationYear: number,\r\n    last4: string,\r\n    main: boolean,\r\n  }[]>(() => {\r\n    if (this.isLoading()) {\r\n      return []\r\n    } else {\r\n      return [\r\n        {\r\n          id: '1',\r\n          brand: \"mastercard\",\r\n          country: \"FR\",\r\n          expirationMonth: 11,\r\n          expirationYear: 2024,\r\n          last4: \"4764\",\r\n          main: false,\r\n        },\r\n        {\r\n          id: '2',\r\n          brand: \"visa\",\r\n          country: \"FR\",\r\n          expirationMonth: 1,\r\n          expirationYear: 2030,\r\n          last4: \"5094\",\r\n          main: true,\r\n        }\r\n      ]\r\n    }\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "changingCards",
          "defaultValue": "signal<string[]>([])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(true)\r\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "deleteCard",
          "args": [
            {
              "name": "cardId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "cardId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed, signal} from '@angular/core';\r\nimport {ButtonTextComponent} from \"../../../../components/elements/buttons/button-text/button-text.component\";\r\nimport {toSignal} from \"@angular/core/rxjs-interop\";\r\nimport {delay, of, startWith} from \"rxjs\";\r\nimport {\r\n  SkeletonLoaderComponent\r\n} from \"../../../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\r\nimport {ButtonComponent} from \"../../../../components/elements/buttons/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-billings-payment-methods',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonTextComponent,\r\n    SkeletonLoaderComponent,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './billings-payment-methods.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BillingsPaymentMethodsComponent {\r\n  readonly isLoading = toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(true)\r\n  ));\r\n\r\n  readonly changingCards = signal<string[]>([])\r\n  readonly cards = computed<{\r\n    id: string,\r\n    brand: string,\r\n    country: string,\r\n    expirationMonth: number,\r\n    expirationYear: number,\r\n    last4: string,\r\n    main: boolean,\r\n  }[]>(() => {\r\n    if (this.isLoading()) {\r\n      return []\r\n    } else {\r\n      return [\r\n        {\r\n          id: '1',\r\n          brand: \"mastercard\",\r\n          country: \"FR\",\r\n          expirationMonth: 11,\r\n          expirationYear: 2024,\r\n          last4: \"4764\",\r\n          main: false,\r\n        },\r\n        {\r\n          id: '2',\r\n          brand: \"visa\",\r\n          country: \"FR\",\r\n          expirationMonth: 1,\r\n          expirationYear: 2030,\r\n          last4: \"5094\",\r\n          main: true,\r\n        }\r\n      ]\r\n    }\r\n  })\r\n\r\n  deleteCard(cardId: string): void {\r\n    this.changingCards.update(cards => [...cards, cardId]);\r\n    setTimeout(() => {\r\n      this.changingCards.update(cards => cards.filter(id => id !== cardId));\r\n    }, 2_000)\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<div class=\"flex flex-col gap-4 p-6 max-w-screen-md\">\r\n  <div class=\"flex gap-2.5\">\r\n    @for (card of cards();track card) {\r\n      <div class=\"flex flex-col border rounded p-3 w-[220px] gap-1.5\">\r\n        <div class=\"flex gap-3 items-center\">\r\n          <img src=\"assets/img/master-card.svg\" alt=\"card_logo\" class=\"h-7 w-auto\">\r\n          <div class=\"flex flex-col gap-1\">\r\n            <div class=\"h-4 flex items-center\">••••{{ card.last4 }}</div>\r\n            <div class=\"text-gray-500 text-sm h-3.5 flex items-center\">Expires {{ card.expirationMonth }}\r\n              /{{ card.expirationYear }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex gap-2 -mb-1\">\r\n          <app-button-text [disabled]=\"card.main\"\r\n                           size=\"sm\">{{ card.main ? 'Default' : 'Set as default' }}\r\n          </app-button-text>\r\n          <app-button-text size=\"sm\" (click)=\"deleteCard(card.id)\"\r\n                           [isLoading]=\"changingCards().includes(card.id)\">Delete\r\n          </app-button-text>\r\n        </div>\r\n      </div>\r\n    } @empty {\r\n      @if (isLoading()) {\r\n        <div class=\"flex flex-col border rounded p-3 w-[220px] gap-1.5\">\r\n          <div class=\"flex gap-3 items-center\">\r\n            <app-skeleton-loader class=\"h-7 w-12\"/>\r\n            <div class=\"flex flex-col gap-1\">\r\n              <app-skeleton-loader class=\"h-4 w-20\"/>\r\n              <app-skeleton-loader class=\"h-3.5 w-24\"/>\r\n            </div>\r\n          </div>\r\n          <app-skeleton-loader class=\"h-4 w-36\"/>\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n  <app-button color=\"neutral\" size=\"sm\">Add payment method</app-button>\r\n</div>\r\n"
    },
    {
      "name": "BillingsPreferencesComponent",
      "id": "component-BillingsPreferencesComponent-bea077d850f6e0963a6f9cb91e5b5f42ef8c920f78055fbe38d86ebd0d3aa562a86b6ca3a0552f64ef89f4f0894381cbf0436c35b5bd41e3851df3a170f84849",
      "file": "src/app/pages/account/billings/billings-preferences/billings-preferences.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-billings-preferences",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./billings-preferences.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "companyNameForm",
          "defaultValue": "new FormControl('John Doe Corp.')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "BadgeComponent",
          "type": "component"
        },
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "CdkTableModule",
          "type": "module"
        },
        {
          "name": "DatePipe",
          "type": "pipe"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "InputTextComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BadgeComponent} from \"../../../../components/elements/tag/badge.component\";\r\nimport {ButtonTextComponent} from \"../../../../components/elements/buttons/button-text/button-text.component\";\r\nimport {CdkTableModule} from \"@angular/cdk/table\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {\r\n  SkeletonLoaderComponent\r\n} from \"../../../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\r\nimport {InputTextComponent} from \"../../../../components/elements/inputs/input-text/input-text.component\";\r\nimport {FormControl, ReactiveFormsModule} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-billings-preferences',\r\n  standalone: true,\r\n  imports: [\r\n    BadgeComponent,\r\n    ButtonTextComponent,\r\n    CdkTableModule,\r\n    DatePipe,\r\n    SkeletonLoaderComponent,\r\n    InputTextComponent,\r\n    ReactiveFormsModule\r\n  ],\r\n  templateUrl: './billings-preferences.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BillingsPreferencesComponent {\r\n  readonly companyNameForm = new FormControl('John Doe Corp.')\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<div class=\"flex flex-col gap-4 p-6 max-w-screen-md\">\r\n  <p class=\"text-gray-600\">Changes to these preferences will apply to future invoices only. If you need a past invoice\r\n    reissued, please contact {{ \"ar@openai.com\" }}.</p>\r\n  <div>\r\n    <app-input-text [formControl]=\"companyNameForm\"\r\n                    description=\"If specified, this name will appear on invoices instead of your organization name.\"\r\n                    label=\"Company name\"/>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-29fbb1b3ba58abede047c4b45bfaf5868f7aa5978d12b80063adb947ed66ee11f56dea5dbc1361b8f55d8562be1f9fdc586d42b54ef4539c9819d1a8b5fc6a6a",
      "file": "src/app/components/elements/buttons/button/button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./button.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "color",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "ButtonColor",
          "decorators": []
        },
        {
          "required": false,
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isLoading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "required": true,
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 27,
          "type": "Size",
          "decorators": []
        },
        {
          "name": "variant",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "ButtonVariant",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_color",
          "defaultValue": "signal<ButtonColor>('primary')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "_disabled",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "_size",
          "defaultValue": "signal<Size>('sm')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "_variant",
          "defaultValue": "signal<ButtonVariant>('default')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "clazz",
          "defaultValue": "computed<string>(() => {\r\n    const updatedClasses: string[] = [];\r\n    switch (this._size()) {\r\n      case 'xs':\r\n        updatedClasses.push('py-1 px-2');\r\n        break;\r\n      case 'sm':\r\n        updatedClasses.push('py-1.5 px-3');\r\n        break;\r\n      case 'md':\r\n        updatedClasses.push('py-1.5 px-3');\r\n        break;\r\n    }\r\n    if (this._variant() === 'default') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('bg-gray-50 text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('bg-green-700 hover:bg-green-800 active:bg-green-900 focus:shadow-green text-white')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('bg-gray-200 active:bg-gray-300 hover:bg-gray-400 focus:shadow-gray text-gray-900')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'outline') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('border text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('border border-green-700 active:bg-green-200 hover:bg-green-100 focus:shadow-green text-green-700')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('border active:bg-gray-200 hover:bg-gray-100 focus:shadow-gray text-gray-900')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'ghost') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('active:bg-green-200 hover:bg-green-100 focus:shadow-green text-green-700')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('active:bg-gray-200 hover:bg-gray-100 focus:shadow-gray text-gray-500')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'link') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('bg-gray-50 text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('text-green-700 hover:underline underline-offset-4')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('text-gray-900 hover:underline underline-offset-4')\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return updatedClasses.join(' ')\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "textProperties",
          "defaultValue": "computed<string>(() => {\r\n    switch (this._size()) {\r\n      case 'xs':\r\n        return 'h-5 text-sm';\r\n      case 'sm':\r\n        return 'h-5 text-sm';\r\n      case 'md':\r\n        return 'h-6 text-base';\r\n      default:\r\n        return 'h-6 text-base';\r\n    }\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgClass"
        },
        {
          "name": "SpinnerComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed, Input, signal, ViewEncapsulation} from '@angular/core';\r\nimport {toBoolean} from \"../../../../../shared/utils\";\r\nimport {NgClass} from \"@angular/common\";\r\nimport {SpinnerComponent} from \"../../loaders/spinner/spinner.component\";\r\n\r\nexport type ButtonVariant = 'default' | 'outline' | 'ghost' | 'link';\r\nexport type ButtonColor = 'primary' | 'neutral';\r\n\r\ntype Size = 'xs' | 'md' | 'sm';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    SpinnerComponent\r\n  ],\r\n  templateUrl: './button.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonComponent {\r\n  @Input() isLoading: boolean = false;\r\n\r\n  _size = signal<Size>('sm');\r\n\r\n  @Input({required: true}) set size(value: Size) {\r\n    this._size.set(value);\r\n  };\r\n\r\n  textProperties = computed<string>(() => {\r\n    switch (this._size()) {\r\n      case 'xs':\r\n        return 'h-5 text-sm';\r\n      case 'sm':\r\n        return 'h-5 text-sm';\r\n      case 'md':\r\n        return 'h-6 text-base';\r\n      default:\r\n        return 'h-6 text-base';\r\n    }\r\n  })\r\n\r\n  _color = signal<ButtonColor>('primary');\r\n\r\n  @Input() set color(value: ButtonColor) {\r\n    this._color.set(value);\r\n  }\r\n\r\n  _disabled = signal<boolean>(false);\r\n\r\n  @Input({transform: toBoolean}) set disabled(value: boolean) {\r\n    this._disabled.set(value);\r\n  };\r\n\r\n  _variant = signal<ButtonVariant>('default');\r\n\r\n  @Input() set variant(value: ButtonVariant) {\r\n    this._variant.set(value);\r\n  }\r\n\r\n  clazz = computed<string>(() => {\r\n    const updatedClasses: string[] = [];\r\n    switch (this._size()) {\r\n      case 'xs':\r\n        updatedClasses.push('py-1 px-2');\r\n        break;\r\n      case 'sm':\r\n        updatedClasses.push('py-1.5 px-3');\r\n        break;\r\n      case 'md':\r\n        updatedClasses.push('py-1.5 px-3');\r\n        break;\r\n    }\r\n    if (this._variant() === 'default') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('bg-gray-50 text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('bg-green-700 hover:bg-green-800 active:bg-green-900 focus:shadow-green text-white')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('bg-gray-200 active:bg-gray-300 hover:bg-gray-400 focus:shadow-gray text-gray-900')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'outline') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('border text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('border border-green-700 active:bg-green-200 hover:bg-green-100 focus:shadow-green text-green-700')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('border active:bg-gray-200 hover:bg-gray-100 focus:shadow-gray text-gray-900')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'ghost') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('active:bg-green-200 hover:bg-green-100 focus:shadow-green text-green-700')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('active:bg-gray-200 hover:bg-gray-100 focus:shadow-gray text-gray-500')\r\n            break;\r\n        }\r\n      }\r\n    } else if (this._variant() === 'link') {\r\n      if (this._disabled()) {\r\n        updatedClasses.push('bg-gray-50 text-gray-400');\r\n      } else {\r\n        switch (this._color()) {\r\n          case 'primary':\r\n            updatedClasses.push('text-green-700 hover:underline underline-offset-4')\r\n            break;\r\n          case 'neutral':\r\n            updatedClasses.push('text-gray-900 hover:underline underline-offset-4')\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return updatedClasses.join(' ')\r\n  })\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "accessors": {
        "size": {
          "name": "size",
          "setSignature": {
            "name": "size",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "Size",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "value",
                "type": "Size",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "color": {
          "name": "color",
          "setSignature": {
            "name": "color",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "ButtonColor",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 46,
            "jsdoctags": [
              {
                "name": "value",
                "type": "ButtonColor",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 52,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "variant": {
          "name": "variant",
          "setSignature": {
            "name": "variant",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "ButtonVariant",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 58,
            "jsdoctags": [
              {
                "name": "value",
                "type": "ButtonVariant",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<button\r\n  [disabled]=\"_disabled()\"\r\n  [ngClass]=\"clazz()\"\r\n  class=\"rounded-lg font-medium transition-colors relative\">\r\n  <div\r\n    [class.opacity-0]=\"isLoading\"\r\n    [ngClass]=\"textProperties()\"\r\n    class=\"flex items-center whitespace-nowrap w-100 gap-1\">\r\n    <ng-content/>\r\n  </div>\r\n  @if (isLoading) {\r\n    <span class=\"absolute left-0 top-0 w-full h-full flex justify-center items-center\">\r\n      <app-spinner size=\"sm\"/>\r\n    </span>\r\n  }\r\n</button>\r\n"
    },
    {
      "name": "ButtonIconComponent",
      "id": "component-ButtonIconComponent-368f808c904857be3c9e5f364fba8b8b954e805f0afedf4db975e2667b2d36bfc094427799b4d4ee315743a17fe317acdbe5b985b890b3dff5e8bc778942e470",
      "file": "src/app/components/elements/buttons/button-icon/button-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button-icon",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./button-icon.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": false,
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "fontIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "svgIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {IconComponent} from \"../../icon/icon.component\";\nimport {toBoolean} from \"../../../../../shared/utils\";\n\n@Component({\n  selector: 'app-button-icon',\n  standalone: true,\n  imports: [\n    IconComponent,\n  ],\n  templateUrl: './button-icon.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonIconComponent {\n  @Input({transform: toBoolean}) disabled: boolean = false;\n  @Input() svgIcon?: string;\n  @Input() fontIcon?: string;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<button\n  [class.active:bg-gray-200]=\"!disabled\"\n  [class.hover:bg-gray-100]=\"!disabled\"\n  [class.text-gray-400]=\"disabled\"\n  [class.text-gray-900]=\"!disabled\"\n  [disabled]=\"disabled\"\n  class=\"rounded-lg font-medium transition-colors h-6 w-8 flex items-center justify-center\">\n  @if (svgIcon) {\n    <app-icon [svgIcon]=\"svgIcon\"/>\n  } @else if (fontIcon) {\n    <app-icon [fontIcon]=\"fontIcon\"/>\n  }\n</button>\n"
    },
    {
      "name": "ButtonNavigationComponent",
      "id": "component-ButtonNavigationComponent-76a1a928ae573f2bd597c02c7d0ebdd3c4d4823c3129582c0e6435a0ab25548dcceb0660a5d07e710196bd18837cfd3570ea685e0b16d65d2192727021e633be",
      "file": "src/app/components/elements/buttons/button-navigation/button-navigation.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button-navigation",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./button-navigation.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "chosenIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "number",
          "decorators": []
        },
        {
          "required": false,
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "list",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string[]",
          "decorators": []
        },
        {
          "required": true,
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 16,
          "type": "\"md\" | \"sm\"",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onChangeIndex",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "changeIndex",
          "args": [
            {
              "name": "number",
              "type": "\"1\" | ",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "number",
              "type": "\"1\" | ",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {toBoolean} from \"../../../../../shared/utils\";\n\n@Component({\n  selector: 'app-button-navigation',\n  standalone: true,\n  imports: [\n    MatIconModule\n  ],\n  templateUrl: './button-navigation.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonNavigationComponent {\n  @Input({required: true}) size: 'md' | 'sm' = 'sm';\n  @Input({transform: toBoolean}) disabled: boolean = false;\n  @Input() list: string[] = [];\n  @Input() chosenIndex: number = 0;\n  @Output() onChangeIndex = new EventEmitter<number>();\n\n  changeIndex(number: 1 | -1): void {\n    this.onChangeIndex.emit(this.chosenIndex + number);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<div\n  [class.text-base]=\"size === 'md'\"\n  [class.text-gray-400]=\"disabled\"\n  [class.text-gray-900]=\"!disabled\"\n  [class.text-sm]=\"size === 'sm'\"\n  class=\"p-1.5 rounded-lg transition-colors flex items-center border\">\n  <button (click)=\"changeIndex(-1)\"\n          [class.text-gray-400]=\"chosenIndex==0\"\n          [disabled]=\"disabled || chosenIndex==0\"\n          class=\"h-5 flex items-center justify-center\">\n    <mat-icon class=\"scale-[80%]\" svgIcon=\"chevron-left\"/>\n  </button>\n  <div\n    [class.h-5]=\"size === 'sm'\"\n    [class.h-6]=\"size === 'md'\"\n    class=\"flex items-center whitespace-nowrap w-100 mb-px gap-1\">\n    <span>{{ list[chosenIndex] }}</span></div>\n  <button (click)=\"changeIndex(+1)\"\n          [class.text-gray-400]=\"chosenIndex==list.length-1\"\n          [disabled]=\"disabled || chosenIndex==list.length-1\"\n          class=\"h-5 flex items-center justify-center\">\n    <mat-icon class=\"scale-[80%]\" svgIcon=\"chevron-right\"/>\n  </button>\n</div>\n"
    },
    {
      "name": "ButtonTextComponent",
      "id": "component-ButtonTextComponent-14baad4ba1ca4a2c62d31e7e3379a2ed1303de932a62e223c4967ddd547533617d07e8b246e59db85530717de097d563bbed98778db88f0d41bc727a5716ca7a",
      "file": "src/app/components/elements/buttons/button-text/button-text.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button-text",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./button-text.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": false,
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean",
          "decorators": []
        },
        {
          "required": false,
          "name": "isLoading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean",
          "decorators": []
        },
        {
          "required": true,
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 16,
          "type": "\"md\" | \"sm\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "SpinnerComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {toBoolean} from \"../../../../../shared/utils\";\nimport {SpinnerComponent} from \"../../loaders/spinner/spinner.component\";\n\n@Component({\n  selector: 'app-button-text',\n  standalone: true,\n  imports: [\n    SpinnerComponent\n  ],\n  templateUrl: './button-text.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonTextComponent {\n  @Input({required: true}) size: 'md' | 'sm' = 'sm';\n  @Input({transform: toBoolean}) disabled: boolean = false;\n  @Input({transform: toBoolean}) isLoading: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<button\n  [class.active:bg-green-200]=\"!disabled\"\n  [class.active:shadow-green]=\"!disabled\"\n  [class.bg-gray-50]=\"disabled\"\n  [class.hover:bg-green-100]=\"!disabled\"\n  [class.text-gray-400]=\"disabled\"\n  [class.text-green-700]=\"!disabled\"\n  [disabled]=\"disabled\"\n  class=\"py-[3px] px-[5px] -ml-[5px] -my-[3px] rounded-lg font-medium transition-colors relative text-sm\">\n  <span\n    [class.h-5]=\"size === 'sm'\"\n    [class.h-7]=\"size === 'md'\"\n    [class.opacity-0]=\"isLoading\"\n    class=\"flex items-center whitespace-nowrap w-100 mb-px gap-1\"><ng-content/></span>\n  @if (isLoading) {\n    <span class=\"absolute left-0 top-0 w-full h-full flex justify-center items-center\">\n      <app-spinner size=\"sm\"/>\n    </span>\n  }\n</button>\n"
    },
    {
      "name": "ButtonToggleComponent",
      "id": "component-ButtonToggleComponent-882b74d9b627af32ee8c0f4af739662999d444ab722dc34fc6b61337aab39e211061a35b9c42061738ba748e2357751b9140ef3e53b03d638ebda72337104eca",
      "file": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button-toggle",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./button-toggle.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "buttons",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "MultiButton[]",
          "decorators": []
        },
        {
          "required": true,
          "name": "color",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 23,
          "type": "\"neutral\" | \"primary\"",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "\"md\" | \"sm\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "activeIndex",
          "defaultValue": "signal(0)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "changeIndex",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, signal} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\nexport interface OptionButton {\r\n  fontIcon?: string;\r\n  svgIcon?: string;\r\n  text?: string;\r\n}\r\n\r\nexport interface MultiButton extends OptionButton {\r\n  options?: OptionButton[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-button-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './button-toggle.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonToggleComponent {\r\n  @Input({required: true}) color: 'neutral' | \"primary\" = 'primary'\r\n  @Input() size: 'md' | 'sm' = 'sm';\r\n  @Input() buttons: MultiButton[] = [];\r\n\r\n  readonly activeIndex = signal(0);\r\n\r\n  changeIndex(index: number): void {\r\n    this.activeIndex.set(index);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class='h-9 flex items-center'>\r\n  @for (button of buttons;track button;let last=$last;let first=$first;let index=$index) {\r\n    <button\r\n      [class.text-base]=\"size === 'md'\"\r\n      [class.text-sm]=\"size === 'sm'\"\r\n      [class.text-green-700]=\"color === 'primary' && button !== buttons[activeIndex()]\"\r\n      [class.text-white]=\"color === 'primary' && button == buttons[activeIndex()]\"\r\n      [class.bg-green-700]=\"color === 'primary' && button == buttons[activeIndex()]\"\r\n      [class.hover:bg-green-800]=\"color === 'primary' && button == buttons[activeIndex()]\"\r\n      [class.active:bg-green-900]=\"color === 'primary' && button == buttons[activeIndex()]\"\r\n      [class.hover:bg-green-100]=\"color === 'primary' && button !== buttons[activeIndex()]\"\r\n      [class.active:bg-green-200]=\"color === 'primary' && button !== buttons[activeIndex()]\"\r\n      [class.border-green-700]=\"color === 'primary'\"\r\n      [class.text-gray-700]=\"color === 'neutral' && button !== buttons[activeIndex()]\"\r\n      [class.bg-gray-200]=\"color === 'neutral' && button == buttons[activeIndex()]\"\r\n      [class.hover:bg-gray-300]=\"color === 'neutral' && button !== buttons[activeIndex()]\"\r\n      [class.active:bg-gray-400]=\"color === 'neutral' && button !== buttons[activeIndex()]\"\r\n      [class.border-gray-200]=\"color === 'neutral'\"\r\n      [class.border-l]=\"first\"\r\n      [class.rounded-l-lg]=\"first\"\r\n      [class.rounded-r-lg]=\"last\"\r\n      (click)=\"changeIndex(index)\"\r\n      class=\"py-1.5 px-3 font-medium transition-colors border-t border-r border-b\">\r\n  <span\r\n    [class.h-5]=\"size === 'sm'\"\r\n    [class.h-6]=\"size === 'md'\"\r\n    class=\"flex items-center whitespace-nowrap w-100 mb-px gap-1\">\r\n     @if (button.svgIcon) {\r\n       <mat-icon [svgIcon]='button.svgIcon' class='scale-75'/>\r\n     }\r\n    @if (button.fontIcon) {\r\n      <mat-icon [fontIcon]='button.fontIcon' class='scale-75'/>\r\n    }\r\n    @if (button.text) {\r\n      <div class='flex justify-between items-center'>\r\n            {{ button.text }}\r\n          </div>\r\n    }</span>\r\n    </button>\r\n  }\r\n</div>\r\n"
    },
    {
      "name": "ChartBarTimelineComponent",
      "id": "component-ChartBarTimelineComponent-bdd59c3ebd29425f9719869ff0a0546d1af6f537c8002840305a70e05ba92b94308e3e2054ff87a2fe9fc19506a48ac79340640529c4232759c84643ef8f04fb",
      "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-chart-bar-timeline",
      "styleUrls": [],
      "styles": [
        ":host {@apply h-full w-full}"
      ],
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "data",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "LineChartDatum[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "containerRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "containerElementRef, {static: true}"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "isHovering",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "root",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Root",
          "optional": true,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "render",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  signal,\n  ViewChild\n} from '@angular/core';\nimport {createRoot, Root} from \"react-dom/client\";\nimport React from \"react\";\nimport {ChartBarTimeline} from \"./chart-bar-timeline\";\nimport {unmountComponentAtNode} from \"react-dom\";\n\nexport type LineChartDatum = { date: Date } & Record<string, number | Date>\n\nconst containerElementRef = \"reactComponentContainer\"\n\n@Component({\n  selector: 'app-chart-bar-timeline',\n  standalone: true,\n  styles: [':host {@apply h-full w-full}'],\n  template: `\n      <div #${containerElementRef} id=\"graph\" class=\"w-full h-full\"\n           (mouseenter)=\"isHovering.set(true)\"\n           (mouseleave)=\"isHovering.set(false)\"></div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartBarTimelineComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() data: LineChartDatum[] = []\n  @ViewChild(containerElementRef, {static: true}) containerRef!: ElementRef;\n  root?: Root;\n\n  isHovering = signal<boolean>(false)\n\n  constructor() {\n    effect(() => {\n      this.render();\n    })\n  }\n\n  ngOnChanges(): void {\n    this.render();\n  }\n\n  ngAfterViewInit() {\n    this.root = createRoot(this.containerRef.nativeElement);\n    this.render();\n  }\n\n  ngOnDestroy() {\n    unmountComponentAtNode(this.containerRef.nativeElement);\n  }\n\n  private render() {\n    if (this.root) {\n      const {data} = this;\n      const isHovering = this.isHovering();\n      this.root.render(\n        <React.StrictMode>\n          <ChartBarTimeline\n            data={data}\n            isOvering={isHovering}\n          />\n        </React.StrictMode>\n      )\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply h-full w-full}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 37
      },
      "extends": [],
      "implements": [
        "AfterViewInit",
        "OnDestroy",
        "OnChanges"
      ]
    },
    {
      "name": "DocsApiReferenceComponent",
      "id": "component-DocsApiReferenceComponent-3dd708f7e0874a4265f35fe59e4a08d9de27c4113c5064fc7f670165751b02f6cdf3588ecbb626869d4664444c2445dfa3ab502caa6eb456d0d43339cf1ae6a9",
      "file": "src/app/pages/docs/docs-api-reference/docs-api-reference.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-docs-api-reference",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./docs-api-reference.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n  selector: 'app-docs-api-reference',\n  standalone: true,\n  imports: [],\n  templateUrl: './docs-api-reference.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocsApiReferenceComponent {\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "API references\n"
    },
    {
      "name": "DocsComponent",
      "id": "component-DocsComponent-b52f8d7ec28bc00bfe1ce2b7789ae729bcc8b6b4443511c4aad36a764b0874921c54a719eaca77a1c0a781a2ba6c4e85187509026c97779e01176ab967e00e10",
      "file": "src/app/pages/docs/page/docs.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-docs",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./docs.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "tabs",
          "defaultValue": "[\n    {name: 'Documentation', route: ['/', 'docs', 'overview']},\n    {name: 'API reference', route: ['/', 'docs', 'api-reference']},\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "HeaderTabComponent",
          "type": "component"
        },
        {
          "name": "RouterOutlet"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {HeaderComponent} from \"../../../components/elements/headers/header/header.component\";\nimport {HeaderTabComponent} from \"../../../components/elements/headers/header-tab/header-tab.component\";\nimport {RouterOutlet} from \"@angular/router\";\nimport {ButtonComponent} from \"../../../components/elements/buttons/button/button.component\";\nimport {ButtonTextComponent} from \"../../../components/elements/buttons/button-text/button-text.component\";\nimport {IconComponent} from \"../../../components/elements/icon/icon.component\";\n\n@Component({\n  selector: 'app-docs',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    HeaderTabComponent,\n    RouterOutlet,\n    ButtonComponent,\n    ButtonTextComponent,\n    IconComponent\n  ],\n  templateUrl: './docs.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DocsComponent {\n  readonly tabs: { name: string; route: string[] }[] = [\n    {name: 'Documentation', route: ['/', 'docs', 'overview']},\n    {name: 'API reference', route: ['/', 'docs', 'api-reference']},\n  ]\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header-tab [tabs]=\"tabs\">\n  <app-button color=\"neutral\" size=\"sm\" variant=\"ghost\">\n    <app-icon size=\"xs\" svgIcon=\"discussion\"/>\n    Forum\n  </app-button>\n  <app-button color=\"neutral\" size=\"sm\" variant=\"ghost\">\n    <app-icon size=\"xs\" svgIcon=\"question\"/>\n    Help\n  </app-button>\n</app-header-tab>\n<div class=\"w-full h-[calc(100%-3.5rem)]\">\n  <router-outlet/>\n</div>\n"
    },
    {
      "name": "DocsOverviewComponent",
      "id": "component-DocsOverviewComponent-43c75379e9a91754598874636f698efdcf4329ff2e2526802124edc2fb2e044f865ceb532158a7626443d22f6d7469bd53e3b88548fa02544522132036dee988",
      "file": "src/app/pages/docs/docs-overview/docs-overview.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-docs-overview",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./docs-overview.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "navigations",
          "defaultValue": "[{\r\n    title: 'Get started', menu: [\r\n      {name: 'Overview', path: ['/', 'docs', 'overview']},\r\n      {name: 'Introduction', path: ['/', 'docs', 'introduction']},\r\n      {name: 'Quickstart', path: ['/', 'docs', 'quickstart']},\r\n      {\r\n        name: 'Models', path: ['/', 'docs', 'models'], children: [\r\n          {name: 'overview', path: ['/', 'docs', 'models', 'overview']},\r\n          {name: 'Model updates', path: ['/', 'docs', 'models', 'continuous-model-upgrades']},\r\n          {name: 'GPT-4', path: ['/', 'docs', 'models', 'gpt-4-and-gpt-4-turbo']},\r\n          {name: 'GPT-3.5', path: ['/', 'docs', 'models', 'gpt-3-5']},\r\n          {name: 'DALL·E', path: ['/', 'docs', 'models', 'dall-e']},\r\n          {name: 'TTS', path: ['/', 'docs', 'models', 'tts']},\r\n          {name: 'Whisper', path: ['/', 'docs', 'models', 'whisper']},\r\n          {name: 'Embeddings', path: ['/', 'docs', 'models', 'embeddings']},\r\n          {name: 'Moderation', path: ['/', 'docs', 'models', 'moderation']},\r\n          {name: 'GPT-3', path: ['/', 'docs', 'models', 'gpt-3']},\r\n          {name: 'How we use your data', path: ['/', 'docs', 'models', 'how-we-use-your-data']},\r\n          {name: 'Endpoint compatibility', path: ['/', 'docs', 'models', 'model-endpoint-compatibility']},\r\n        ]\r\n      },\r\n      {name: 'Tutorials', path: ['/', 'docs', 'tutorials']},\r\n      {name: 'Changelog', path: ['/', 'docs', 'changelog']},\r\n    ]\r\n  },\r\n    {\r\n      title: 'Capabilities', menu: [\r\n        {name: 'Text generation', path: ['/', 'docs', 'guides', 'text-generation']},\r\n        {name: 'Function calling', path: ['/', 'docs', 'guides', 'function-calling']},\r\n        {name: 'Embedding', path: ['/', 'docs', 'guides', 'embeddings']},\r\n        {name: 'Fine-tuning', path: ['/', 'docs', 'guides', 'fine-tuning']},\r\n        {name: 'Image generation', path: ['/', 'docs', 'guides', 'images']},\r\n        {name: 'Vision', path: ['/', 'docs', 'guides', 'vision']},\r\n        {name: 'Text-to-speech', path: ['/', 'docs', 'guides', 'text-to-speech']},\r\n        {name: 'Speech-to-text', path: ['/', 'docs', 'guides', 'speech-to-text']},\r\n        {name: 'Moderation', path: ['/', 'docs', 'guides', 'moderation']},\r\n      ]\r\n    },\r\n    {\r\n      title: 'assistants', menu: [\r\n        {name: 'Overview', path: ['/', 'docs', 'assistants', 'overview']},\r\n        {name: 'How Assistants work', path: ['/', 'docs', 'guides', 'how-it-works']},\r\n        {name: 'Tools', path: ['/', 'docs', 'guides', 'tools']},\r\n      ]\r\n    },\r\n    {\r\n      title: 'Guides', menu: [\r\n        {name: 'Prompt engineering', path: ['/', 'docs', 'guides', 'prompt-engineering']},\r\n        {name: 'Production best practices', path: ['/', 'docs', 'guides', 'production-best-practices']},\r\n        {name: 'Safety best practices', path: ['/', 'docs', 'guides', 'safety-best-practices']},\r\n      ]\r\n    },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "VerticalMenuComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {Menu, VerticalMenuComponent} from \"../../../components/navigation/vertical-menu/vertical-menu.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-docs-overview',\r\n  standalone: true,\r\n  imports: [\r\n    VerticalMenuComponent\r\n  ],\r\n  templateUrl: './docs-overview.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DocsOverviewComponent {\r\n  readonly navigations: { menu: Menu[], title: string }[] = [{\r\n    title: 'Get started', menu: [\r\n      {name: 'Overview', path: ['/', 'docs', 'overview']},\r\n      {name: 'Introduction', path: ['/', 'docs', 'introduction']},\r\n      {name: 'Quickstart', path: ['/', 'docs', 'quickstart']},\r\n      {\r\n        name: 'Models', path: ['/', 'docs', 'models'], children: [\r\n          {name: 'overview', path: ['/', 'docs', 'models', 'overview']},\r\n          {name: 'Model updates', path: ['/', 'docs', 'models', 'continuous-model-upgrades']},\r\n          {name: 'GPT-4', path: ['/', 'docs', 'models', 'gpt-4-and-gpt-4-turbo']},\r\n          {name: 'GPT-3.5', path: ['/', 'docs', 'models', 'gpt-3-5']},\r\n          {name: 'DALL·E', path: ['/', 'docs', 'models', 'dall-e']},\r\n          {name: 'TTS', path: ['/', 'docs', 'models', 'tts']},\r\n          {name: 'Whisper', path: ['/', 'docs', 'models', 'whisper']},\r\n          {name: 'Embeddings', path: ['/', 'docs', 'models', 'embeddings']},\r\n          {name: 'Moderation', path: ['/', 'docs', 'models', 'moderation']},\r\n          {name: 'GPT-3', path: ['/', 'docs', 'models', 'gpt-3']},\r\n          {name: 'How we use your data', path: ['/', 'docs', 'models', 'how-we-use-your-data']},\r\n          {name: 'Endpoint compatibility', path: ['/', 'docs', 'models', 'model-endpoint-compatibility']},\r\n        ]\r\n      },\r\n      {name: 'Tutorials', path: ['/', 'docs', 'tutorials']},\r\n      {name: 'Changelog', path: ['/', 'docs', 'changelog']},\r\n    ]\r\n  },\r\n    {\r\n      title: 'Capabilities', menu: [\r\n        {name: 'Text generation', path: ['/', 'docs', 'guides', 'text-generation']},\r\n        {name: 'Function calling', path: ['/', 'docs', 'guides', 'function-calling']},\r\n        {name: 'Embedding', path: ['/', 'docs', 'guides', 'embeddings']},\r\n        {name: 'Fine-tuning', path: ['/', 'docs', 'guides', 'fine-tuning']},\r\n        {name: 'Image generation', path: ['/', 'docs', 'guides', 'images']},\r\n        {name: 'Vision', path: ['/', 'docs', 'guides', 'vision']},\r\n        {name: 'Text-to-speech', path: ['/', 'docs', 'guides', 'text-to-speech']},\r\n        {name: 'Speech-to-text', path: ['/', 'docs', 'guides', 'speech-to-text']},\r\n        {name: 'Moderation', path: ['/', 'docs', 'guides', 'moderation']},\r\n      ]\r\n    },\r\n    {\r\n      title: 'assistants', menu: [\r\n        {name: 'Overview', path: ['/', 'docs', 'assistants', 'overview']},\r\n        {name: 'How Assistants work', path: ['/', 'docs', 'guides', 'how-it-works']},\r\n        {name: 'Tools', path: ['/', 'docs', 'guides', 'tools']},\r\n      ]\r\n    },\r\n    {\r\n      title: 'Guides', menu: [\r\n        {name: 'Prompt engineering', path: ['/', 'docs', 'guides', 'prompt-engineering']},\r\n        {name: 'Production best practices', path: ['/', 'docs', 'guides', 'production-best-practices']},\r\n        {name: 'Safety best practices', path: ['/', 'docs', 'guides', 'safety-best-practices']},\r\n      ]\r\n    },\r\n  ]\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<div class=\"flex h-full\">\r\n  <app-vertical-menu [navigations]=\"navigations\"/>\r\n  <div class=\"grow flex flex-col h-full px-14 py-[42px]\">\r\n    <h1 class=\"text-[32px]/[40px] pb-10 font-bold\">Welcome to the OpenAI developer platform</h1>\r\n    <div class=\"flex flex-col gap-12\">\r\n      <h2 class=\"text-2xl font-bold pb-6\">Start with the basics</h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "FilesComponent",
      "id": "component-FilesComponent-38515c82c086529865ec154a45a5b1860021c9f3f0d877aa243796447d0ce111f3b5292462476e5df7591e94f9fd2ef9d39fbe3433b463e1200c831318f15200",
      "file": "src/app/pages/files/files.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-files",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./files.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "directionSortOptions",
          "defaultValue": "[\n    {text: 'Desc'},\n    {text: 'Asc'},\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "fileSortOptions",
          "defaultValue": "[\n    {text: 'Date'},\n    {text: 'Name'},\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderWithSubHeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonToggleComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {\n  HeaderWithSubHeaderComponent\n} from \"../../components/elements/headers/header-with-sub-header/header-with-sub-header.component\";\nimport {ButtonToggleComponent} from \"../../components/elements/buttons/button-toggle/button-toggle.component\";\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-files',\n  standalone: true,\n  imports: [\n    HeaderWithSubHeaderComponent,\n    ButtonToggleComponent,\n    ButtonComponent,\n    MatIconModule\n  ],\n  templateUrl: './files.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesComponent {\n  readonly fileSortOptions = [\n    {text: 'Date'},\n    {text: 'Name'},\n  ]\n  readonly directionSortOptions = [\n    {text: 'Desc'},\n    {text: 'Asc'},\n  ]\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header-with-sub-header title=\"Files\">\n  <div class=\"flex items-center justify-between w-full\">\n    <div class=\"flex items-center gap-2\">\n      <app-button-toggle [buttons]=\"fileSortOptions\" color=\"primary\"/>\n      <app-button-toggle [buttons]=\"directionSortOptions\" color=\"neutral\"/>\n    </div>\n    <div class=\"flex items-center gap-2\">\n      <app-button color=\"neutral\" size=\"sm\">\n        Learn more\n      </app-button>\n      <app-button color=\"primary\" size=\"sm\">\n        Upload\n      </app-button>\n    </div>\n  </div>\n</app-header-with-sub-header>\n<div class=\"flex flex-col items-center justify-center grow gap-4\">\n  <div class=\"flex flex-col gap-1.5 items-center italic text-gray-400\">\n    <div class=\"h-5\">No files found.</div>\n    <div>Create a file with the OpenAI API.</div>\n  </div>\n  <app-button color=\"neutral\" size=\"md\">Learn more</app-button>\n</div>\n"
    },
    {
      "name": "FinetuneComponent",
      "id": "component-FinetuneComponent-d760c5489fda310c78e6723f6d6d1bd8f1832a5d92ac2957ee95fe81f8cbeda5810363991fa55a54df240324817b95649e1be9ef1cd566d6955024198580788e",
      "file": "src/app/pages/finetune/finetune.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-finetune",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./finetune.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "buttons",
          "defaultValue": "[{text: 'All'}, {text: 'Successful'}, {text: 'Failed'}]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ButtonToggleComponent",
          "type": "component"
        },
        {
          "name": "HeaderWithSubHeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "SpinnerComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {ButtonToggleComponent} from \"../../components/elements/buttons/button-toggle/button-toggle.component\";\nimport {\n  HeaderWithSubHeaderComponent\n} from \"../../components/elements/headers/header-with-sub-header/header-with-sub-header.component\";\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\nimport {toSignal} from \"@angular/core/rxjs-interop\";\nimport {delay, of, startWith} from \"rxjs\";\nimport {SpinnerComponent} from \"../../components/elements/loaders/spinner/spinner.component\";\nimport {IconComponent} from \"../../components/elements/icon/icon.component\";\n\n@Component({\n  selector: 'app-finetune',\n  standalone: true,\n  imports: [\n    ButtonToggleComponent,\n    HeaderWithSubHeaderComponent,\n    ButtonComponent,\n    SpinnerComponent,\n    IconComponent\n  ],\n  templateUrl: './finetune.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FinetuneComponent {\n  readonly isLoading = toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))\n\n  readonly buttons = [{text: 'All'}, {text: 'Successful'}, {text: 'Failed'}];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header-with-sub-header title=\"Fine-tuning\">\n  <div class=\"flex justify-between items-center w-full\">\n    <app-button-toggle [buttons]=\"buttons\" color=\"primary\"/>\n    <div class=\"flex items-center gap-2\">\n      <app-button color=\"neutral\" size=\"sm\">\n        Learn more\n      </app-button>\n      <app-button color=\"primary\" size=\"sm\">\n        <app-icon svgIcon=\"add\"/>\n        Create\n      </app-button>\n    </div>\n  </div>\n</app-header-with-sub-header>\n<div class=\"flex flex-col gap-2 w-full grow\">\n  @if (isLoading()) {\n    <div class=\"flex flex-col gap-4 w-full h-full text-gray-400 justify-center items-center\">\n      <app-spinner/>\n      <div class=\"italic\">Loading...</div>\n    </div>\n  } @else {\n    <div class=\"flex flex-col gap-4 w-full h-full text-gray-400 justify-center items-center\">\n      <div class=\"italic\">\n        <div class=\"text-center\">No fine-tuning jobs found.</div>\n        <div class=\"text-center\">You can create a fine-tuning job below or using the OpenAI API.</div>\n      </div>\n      <div class=\"flex items-center gap-2 justify-center\">\n        <app-button color=\"neutral\" size=\"md\">\n          Learn more\n        </app-button>\n        <app-button color=\"neutral\" size=\"md\">\n          Create new\n        </app-button>\n      </div>\n    </div>\n  }\n</div>\n"
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-551fff3f99aab14423e3b09984fef6b3e5358344e087f621f5f5d679cf9431cc1d0ab1e6a88758af0ce3f1850b74b42ba1e3c376a5b2f5b9bcbabab877bc1567",
      "file": "src/app/components/elements/headers/header/header.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-header",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./header.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "tabs",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "literal type[]",
          "decorators": []
        },
        {
          "required": true,
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 17,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "TabRouteComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {TabRouteComponent} from \"../../../navigation/tabs/tab-route/tab-route.component\";\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    MatIconModule,\n    TabRouteComponent\n  ],\n  templateUrl: './header.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  @Input({required: true}) title?: string;\n  @Input() tabs?: { name: string; route: string[] }[];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<div [class.border-b]=\"!tabs\"\n     [class.pt-3]=\"tabs\"\n     [class.py-3]=\"!tabs\"\n     class=\"flex items-center justify-between px-6 border-gray-200\"\n>\n  <div class=\"flex items-center gap-2\">\n    <h1 class=\"text-2xl font-bold\">{{ title }}</h1>\n  </div>\n  <div class=\"flex items-center gap-2\">\n    <ng-content/>\n  </div>\n</div>\n@if (tabs) {\n  <app-tab-route [selections]=\"tabs\"/>\n}\n"
    },
    {
      "name": "HeaderTabComponent",
      "id": "component-HeaderTabComponent-c3e7d54891c1e4998b1678eb921a469581644c0497d19078d78df45f05e007138be1ff298225d446e3254ac518302eb3484e854202fa39c512d76658e10ccd27",
      "file": "src/app/components/elements/headers/header-tab/header-tab.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-header-tab",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./header-tab.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "tabs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 20,
          "type": "literal type[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "TabRouteComponent",
          "type": "component"
        },
        {
          "name": "RouterLinkActive"
        },
        {
          "name": "RouterLink"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {TabRouteComponent} from \"../../../navigation/tabs/tab-route/tab-route.component\";\nimport {RouterLink, RouterLinkActive} from \"@angular/router\";\n\n@Component({\n  selector: 'app-header-tab',\n  standalone: true,\n  imports: [\n    MatIconModule,\n    TabRouteComponent,\n    RouterLinkActive,\n    RouterLink\n  ],\n  templateUrl: './header-tab.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderTabComponent {\n  @Input({required: true}) tabs: { name: string; route: string[] }[] = [];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<div class=\"flex items-center justify-between border-gray-200 h-14 border-b px-6\"\n>\n  <div class='flex gap-5 w-full h-full text-sm text-gray-600'>\n    @for (selection of tabs;track selection) {\n      <div\n        class='pt-2 pb-3 hover:border-b hover:border-gray-400 cursor-pointer transition-colors flex items-center h-full'\n        [routerLink]='selection.route'\n        routerLinkActive\n        #rla='routerLinkActive'\n        [class.border-b]='rla.isActive'\n        [class.text-gray-900]='rla.isActive'\n        [class.border-gray-900]='rla.isActive'\n        [class.font-bold]='rla.isActive'\n      >{{ selection.name }}\n      </div>\n    }\n  </div>\n  <div class=\"h-full items-center justify-end flex gap-2\">\n    <ng-content/>\n  </div>\n</div>\n\n"
    },
    {
      "name": "HeaderWithSubHeaderComponent",
      "id": "component-HeaderWithSubHeaderComponent-cb97b537c4608af18e5585b3d4ada50c37cdd82a95f904f7a68a2b47376f307d0cd525e544bfbd4b8fcc68240480f8a11bf5b34c43848f07c2d7d5ff96014cfb",
      "file": "src/app/components/elements/headers/header-with-sub-header/header-with-sub-header.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-header-with-sub-header",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./header-with-sub-header.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 17,
          "type": "string",
          "decorators": []
        },
        {
          "name": "titleTooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "HighlightDirective",
          "type": "directive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {HighlightDirective} from \"../../../directive/highlight/highlight.directive\";\n\n@Component({\n  selector: 'app-header-with-sub-header',\n  standalone: true,\n  imports: [\n    MatIconModule,\n    HighlightDirective\n  ],\n  templateUrl: './header-with-sub-header.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderWithSubHeaderComponent {\n  @Input({required: true}) title?: string;\n  @Input() titleTooltip?: string;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<div class=\"flex flex-col px-6 py-3 border-b border-gray-200 gap-2\">\n  <div class=\"flex items-center gap-2\">\n    <h1 [appHighlightDisabled]=\"!titleTooltip\" [appHighlightTooltip]=\"titleTooltip\" appHighlight\n        class=\"text-2xl font-bold\">{{ title }}</h1>\n  </div>\n  <div class=\"flex items-center w-full pb-3\">\n    <ng-content/>\n  </div>\n</div>\n"
    },
    {
      "name": "IconComponent",
      "id": "component-IconComponent-6decce591764f8ffa15be6e035d09334ae74c6a4ab8bc6ab5be4b7a96a707b79740acc0e46a21172f6786922a4d0f5e4f1538bbee489302e9f536415f9bf5c83",
      "file": "src/app/components/elements/icon/icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-icon",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex items-center}",
        "mat-icon.icon-sm {@apply h-5 w-5 text-sm;}",
        "mat-icon.icon-xs {@apply h-4 w-4 text-xs;}"
      ],
      "templateUrl": [
        "./icon.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "fontIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "\"xs\" | \"sm\" | \"base\"",
          "decorators": []
        },
        {
          "name": "svgIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-icon',\n  standalone: true,\n  imports: [\n    MatIconModule\n  ],\n  styles: [':host {@apply flex items-center}',\n    'mat-icon.icon-sm {@apply h-5 w-5 text-sm;}',\n    'mat-icon.icon-xs {@apply h-4 w-4 text-xs;}'],\n  templateUrl: './icon.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent {\n  @Input() svgIcon?: string;\n  @Input() fontIcon?: string;\n  @Input() size?: 'xs' | 'sm' | 'base' = 'sm';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex items-center}\nmat-icon.icon-sm {@apply h-5 w-5 text-sm;}\nmat-icon.icon-xs {@apply h-4 w-4 text-xs;}\n",
      "extends": [],
      "templateData": "<div class=\"flex items-center\">\n  @if (svgIcon) {\n    <mat-icon [svgIcon]=\"svgIcon\" [class.icon-sm]=\"size === 'sm'\" [class.icon-xs]=\"size === 'xs'\" class=\"text-inherit\"/>\n  } @else if (fontIcon) {\n    <mat-icon [fontIcon]=\"fontIcon\" [class.icon-sm]=\"size === 'sm'\" [class.icon-xs]=\"size === 'xs'\"\n              class=\"text-inherit\"/>\n  }\n</div>\n"
    },
    {
      "name": "InputCheckboxComponent",
      "id": "component-InputCheckboxComponent-efa223d6c4affc238653ff7e083f54463cfada9e95323ef469f9b0a616b4447346a16cb39d5aa66325fa64be9cebf988f9a32c29e6806627687956c963628c9c",
      "file": "src/app/components/elements/inputs/input-checkbox/input-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputCheckboxComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "app-input-checkbox",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative; }"
      ],
      "templateUrl": [
        "./input-checkbox.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<boolean | null>(\r\n    false\r\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<boolean | null>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "LabelComponent",
          "type": "component"
        },
        {
          "name": "MatCheckboxModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, DestroyRef, forwardRef, inject, OnInit} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\r\nimport {noop, tap} from 'rxjs';\r\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {LabelComponent} from \"../label/label.component\";\r\n\r\n@Component({\r\n  selector: 'app-input-checkbox',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    LabelComponent,\r\n    MatCheckboxModule\r\n  ],\r\n  templateUrl: './input-checkbox.component.html',\r\n  styles: [':host {@apply flex text-inherit relative; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputCheckboxComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputCheckboxComponent implements ControlValueAccessor, OnInit {\r\n  readonly form: FormControl<boolean | null> = new FormControl<boolean | null>(\r\n    false\r\n  );\r\n  private destroyRef = inject(DestroyRef);\r\n  private onTouched: (value: boolean) => void = noop;\r\n  private onChange: (value: boolean | null) => void = noop;\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges\r\n      .pipe(\r\n        tap((value) => this.onChange(value)),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    if (disabled) {\r\n      this.form.disable({emitEvent: false});\r\n    } else {\r\n      this.form.enable({emitEvent: false});\r\n    }\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.form.setValue(value, {emitEvent: false});\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit"
      ],
      "templateData": "<mat-checkbox [formControl]=\"form\" class=\"overflow-hidden\" color=\"primary\">\r\n  <ng-content></ng-content>\r\n</mat-checkbox>\r\n"
    },
    {
      "name": "InputDateComponent",
      "id": "component-InputDateComponent-417c66cfd3acc10740068742778f531064d25b2e9c6059b62445f766e5e7ce5a4d81f54e70fff91ed61d1987602219cd0910fc8a3c86bf24e3deaa1456fe8eab",
      "file": "src/app/components/elements/inputs/input-date/input-date.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputDateComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "app-input-date",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative; }"
      ],
      "templateUrl": [
        "./input-date.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "disabled",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<string | null>(\r\n    ''\r\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatDatepickerModule",
          "type": "module"
        },
        {
          "name": "LabelComponent",
          "type": "component"
        },
        {
          "name": "ButtonIconComponent",
          "type": "component"
        },
        {
          "name": "MatNativeDateModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, DestroyRef, forwardRef, inject, Input, OnInit, signal} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\r\nimport {noop, tap} from 'rxjs';\r\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {ButtonIconComponent} from \"../../buttons/button-icon/button-icon.component\";\r\nimport {LabelComponent} from \"../label/label.component\";\r\nimport {MatNativeDateModule} from \"@angular/material/core\";\r\n\r\n@Component({\r\n  selector: 'app-input-date',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    LabelComponent,\r\n    ButtonIconComponent,\r\n    MatNativeDateModule\r\n  ],\r\n  templateUrl: './input-date.component.html',\r\n  styles: [':host {@apply flex text-inherit relative; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputDateComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputDateComponent implements ControlValueAccessor, OnInit {\r\n  @Input() label: string | undefined | null = '';\r\n  @Input() placeholder: string = '';\r\n  @Input() description: string | undefined | null = '';\r\n  @Input() required = false;\r\n  readonly form: FormControl<string | null> = new FormControl<string | null>(\r\n    ''\r\n  );\r\n  readonly disabled = signal<boolean>(false)\r\n  private destroyRef = inject(DestroyRef);\r\n  private onTouched: (value: string) => void = noop;\r\n  private onChange: (value: string | null) => void = noop;\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges\r\n      .pipe(\r\n        tap((value) => this.onChange(value)),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    if (disabled) {\r\n      this.form.disable({emitEvent: false});\r\n      this.disabled.set(true);\r\n    } else {\r\n      this.form.enable({emitEvent: false});\r\n      this.disabled.set(false);\r\n    }\r\n  }\r\n\r\n  writeValue(value: string | undefined): void {\r\n    this.form.setValue(value ?? '', {emitEvent: false});\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit"
      ],
      "templateData": "<app-label\r\n  [description]=\"description\"\r\n  [label]=\"label\"\r\n  [required]=\"required\"\r\n>\r\n  <div class=\"inline-block\">\r\n    <div class=\"relative inline-block\">\r\n      <input\r\n        (click)=\"picker.open()\"\r\n        [class.border-gray-400]=\"disabled()\"\r\n        [class.text-gray-400]=\"disabled()\"\r\n        [formControl]=\"form\"\r\n        [matDatepicker]=\"picker\"\r\n        [placeholder]=\"placeholder\"\r\n        class=\"w-44 outline-0 placeholder:text-gray-500 border border-gray-500 rounded p-2 pl-4 pr-9 hover:border-gray-600 placeholder:text-ellipsis focus:border-blue-500 focus:bg-gray-100\"\r\n        readonly\r\n      />\r\n      <app-button-icon\r\n        (click)=\"picker.open()\"\r\n        [disabled]=\"disabled()\"\r\n        class=\"absolute right-1 top-2\"\r\n        svgIcon=\"calendar\"\r\n      ></app-button-icon>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </div>\r\n  </div>\r\n</app-label>\r\n"
    },
    {
      "name": "InputTextComponent",
      "id": "component-InputTextComponent-01d47ab9edbd8506e5586d6fd0b5fe662de08cea4fcfb3cc2cf47571ea3565fedb950055c43a37f59dded67b369951cb80f3ef266f76687aa1309174a838f501",
      "file": "src/app/components/elements/inputs/input-text/input-text.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputTextComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "app-input-text",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative; }"
      ],
      "templateUrl": [
        "./input-text.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isLoading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "type",
          "defaultValue": "'text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "\"text\" | \"email\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "disabled",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<string | null>(\r\n    ''\r\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 87,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "LabelComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  DestroyRef,\r\n  forwardRef,\r\n  inject,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  signal,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\r\nimport {noop, tap} from 'rxjs';\r\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\r\nimport {LabelComponent} from \"../label/label.component\";\r\nimport {SkeletonLoaderComponent} from \"../../loaders/skeleton-loader/skeleton-loader.component\";\r\nimport {IconComponent} from \"../../icon/icon.component\";\r\n\r\n@Component({\r\n  selector: 'app-input-text',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, LabelComponent, SkeletonLoaderComponent, IconComponent],\r\n  templateUrl: './input-text.component.html',\r\n  styles: [':host {@apply flex text-inherit relative; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputTextComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputTextComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n  @Input() label: string | undefined | null = '';\r\n  @Input() isLoading: boolean = false;\r\n  @Input() type: 'text' | 'email' = 'text';\r\n  @Input() placeholder: string = '';\r\n  @Input() description: string | undefined | null = '';\r\n  @Input() required = false;\r\n  @Input() icon ?: string;\r\n  readonly form: FormControl<string | null> = new FormControl<string | null>(\r\n    ''\r\n  );\r\n  disabled = signal<boolean>(false);\r\n  private destroyRef = inject(DestroyRef);\r\n  private onChange: (value: string | null) => void = noop;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const disabled = changes['disabled'];\r\n    if (disabled) {\r\n      if (disabled.currentValue) {\r\n        this.form.enable({emitEvent: false});\r\n      } else {\r\n        this.form.disable({emitEvent: false});\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouched = (_: string | Event) => {\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges\r\n      .pipe(\r\n        tap((value) => this.onChange(value)),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  writeValue(value: string | undefined): void {\r\n    this.form.setValue(value ?? '', {emitEvent: false});\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.form.disable();\r\n      this.disabled.set(true);\r\n    } else {\r\n      this.form.enable();\r\n      this.disabled.set(false);\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit",
        "OnChanges"
      ],
      "templateData": "<app-label\r\n  [description]='description'\r\n  [label]='label'\r\n  [required]='required'\r\n>\r\n  <div class='w-full relative'>\r\n    <input\r\n      (blur)='onTouched($event)'\r\n      [class.bg-gray-50]=\"disabled()\"\r\n      [class.hidden]='isLoading'\r\n      [class.pl-10]='icon'\r\n      [class.text-gray-400]=\"disabled()\"\r\n      [formControl]='form'\r\n      [placeholder]='placeholder'\r\n      [type]='type'\r\n      class='w-[340px] text-sm py-1.5 px-3 outline-0 placeholder:text-gray-500 border border-gray-300 rounded-lg p-2 focus:shadow-input focus:border-green-700'\r\n    />\r\n    @if (icon) {\r\n      <div class='absolute top-0 left-2 h-full flex items-center'\r\n           [class.hidden]='isLoading'>\r\n        <app-icon [fontIcon]='icon'/>\r\n      </div>\r\n    }\r\n    @if (isLoading) {\r\n      <app-skeleton-loader class=\"h-8 w-full\"/>\r\n    }\r\n  </div>\r\n</app-label>\r\n"
    },
    {
      "name": "LabelComponent",
      "id": "component-LabelComponent-711cf1f5777ff27343642baf2071063498d0223a68bd2beb7b39d1f44b1a4b1776d0a3d338159ec8d4e523c9fe54bda86cb361a56702e713a7634540d343e5ad",
      "file": "src/app/components/elements/inputs/label/label.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LabelComponent), multi: true,\n}",
          "type": "component"
        }
      ],
      "selector": "app-label",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative w-full; }"
      ],
      "templateUrl": [
        "./label.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string | undefined | null",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        },
        {
          "name": "MatDatepickerModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, forwardRef, Input,} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\n@Component({\r\n  selector: 'app-label',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n  ],\r\n  templateUrl: './label.component.html',\r\n  styles: [':host {@apply flex text-inherit relative w-full; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LabelComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class LabelComponent {\r\n  @Input() label: string | undefined | null = '';\r\n  @Input() description: string | undefined | null = '';\r\n  @Input() required = false;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative w-full; }\n",
      "extends": [],
      "templateData": "<div class='flex flex-col gap-2 w-full'>\r\n  <label class=\"flex gap-1 flex-col\">\r\n    @if (label) {\r\n      <div class='text-sm'>\r\n        <span class='font-semibold'>{{ label }}</span>\r\n        @if (required) {\r\n          <span class='text-red-500 pl-0.5'>*</span>\r\n        }\r\n      </div>\r\n    }\r\n    @if (description) {\r\n      <div class='text-gray-700 text-xs'>\r\n        {{ description }}\r\n      </div>\r\n    }\r\n  </label>\r\n  <div class='relative grow flex flex-col'>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "LimitsComponent",
      "id": "component-LimitsComponent-57a180f1ac55ce27d18bebbb48d9d91db18395bd0c9e6bba51d9f4144640e4e5ff918aa09a9060178e9e8bdfc67fe1af1a4f39d1c559070ae784ba7ca93556c5",
      "file": "src/app/pages/account/limits/limits.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-limits",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./limits.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "NoticeComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {HeaderComponent} from \"../../../components/elements/headers/header/header.component\";\r\nimport {NoticeComponent} from \"../../../components/elements/notice/notice.component\";\r\n\r\n@Component({\r\n  selector: 'app-limits',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    NoticeComponent\r\n  ],\r\n  templateUrl: './limits.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LimitsComponent {\r\n\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header title=\"Limits\">\r\n\r\n</app-header>\r\n<div class=\"flex flex-col gap-4 p-6 max-w-screen-md\">\r\n  <h3 class=\"font-bold text-xl\">Rate limits</h3>\r\n  <div class=\"flex flex-col gap-2\">\r\n    <div>\r\n      API usage is subject to rate limits applied on tokens per minute (TPM), requests per minute or day (RPM/RPD), and\r\n      other model-specific limits. Your organization's rate limits are listed below.\r\n    </div>\r\n    <div>\r\n      Visit our <a class=\"text-green-600 font-medium cursor-pointer\">rate limits guide</a> to learn more about how rate\r\n      limits work.\r\n    </div>\r\n    <app-notice class=\"pt-1\">\r\n      <span class=\"font-bold pr-1\">Note:</span> Limits for specific model versions may vary, expand the table to see\r\n      all models.\r\n    </app-notice>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "MenuButtonComponent",
      "id": "component-MenuButtonComponent-4d9c43d1cc80fec7a41234eae122a3d8b67e4319f0f246cbbf0e3d98aa59dd17548e9491d002e8a5e20670c41121c6f4e1d182c4b0e3401557c2ccc54d4ed501",
      "file": "src/app/components/navigation/vertical-menu/menu-button/menu-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-menu-button",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex w-full}",
        ":host .active{@apply bg-green-100 text-green-700 font-bold}"
      ],
      "templateUrl": [
        "./menu-button.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "menu",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 20,
          "type": "Menu",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterLink"
        },
        {
          "name": "RouterLinkActive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {RouterLink, RouterLinkActive} from \"@angular/router\";\nimport {Menu} from \"../vertical-menu.component\";\n\n@Component({\n  selector: 'app-menu-button',\n  standalone: true,\n  imports: [\n    RouterLink,\n    RouterLinkActive\n  ],\n  templateUrl: './menu-button.component.html',\n  styles: [\n    ':host {@apply flex w-full}',\n    ':host .active{@apply bg-green-100 text-green-700 font-bold}',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuButtonComponent {\n  @Input({required: true}) menu?: Menu;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex w-full}\n:host .active{@apply bg-green-100 text-green-700 font-bold}\n",
      "extends": [],
      "templateData": "@if (menu) {\n  <a [routerLink]=\"menu.path\"\n     routerLinkActive\n     #rla=\"routerLinkActive\"\n     [class.active]=\"rla.isActive\"\n\n     class=\"w-full text-sm py-1.5 rounded-lg px-3 text-gray-600 hover:bg-gray-50 hover:text-gray-800 cursor-pointer\">\n    {{ menu.name }}\n  </a>\n}\n"
    },
    {
      "name": "MenuComponent",
      "id": "component-MenuComponent-4609b99ced39bdc05aa77ad39d7c0f899df74d810ccd2314c63bd1e27307160d26326afb828cc8d15a0ed5565b62888733cc5d32b17416cf481e13420cda5c32",
      "file": "src/app/components/directive/menu/menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-menu",
      "styleUrls": [],
      "styles": [
        ":host {@apply inline-block}"
      ],
      "templateUrl": [
        "./menu.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "content",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 15,
          "type": "TemplateRef<HTMLElement>",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgTemplateOutlet"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, TemplateRef} from '@angular/core';\nimport {NgTemplateOutlet} from \"@angular/common\";\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [\n    NgTemplateOutlet\n  ],\n  styles: [':host {@apply inline-block}'],\n  templateUrl: './menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuComponent {\n  @Input({required: true}) content!: TemplateRef<HTMLElement>;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply inline-block}\n",
      "extends": [],
      "templateData": "<div\n  class='flex bg-white text-sm text-gray-600 rounded-lg shadow-tooltip min-w-[200px] border border-gray-200 mx-2'>\n  <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n</div>\n"
    },
    {
      "name": "MultiInputSelectComponent",
      "id": "component-MultiInputSelectComponent-a8ca3706f13592b26d6a6fcbc83879efd22464938c57956fbbf66c5269daf07f58e5f9b78db5d2ce2699c8e5ab105544ac89379a339c8fd2e7607c74d3604a06",
      "file": "src/app/components/elements/inputs/multi-input-select/multi-input-select.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MultiInputSelectComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "app-input-multi-select",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex relative px-2 ; }"
      ],
      "templateUrl": [
        "./multi-input-select.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 56,
          "type": "literal type[]",
          "decorators": []
        },
        {
          "required": true,
          "name": "type",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 35,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_options",
          "defaultValue": "signal<{ value: string; displayValue: string }[]>([])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<\r\n    string[] | null\r\n  >([])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<[] | null>",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "formattedName",
          "defaultValue": "computed<string>(() => {\r\n    const value: string[] | unknown = this.formValue();\r\n    if (!value) return '';\r\n    const selections = (value as string[])\r\n      .map((selection) =>\r\n        this._options().find((option) => option.value === selection)\r\n      )\r\n      .filter((selection) => !!selection)\r\n      .map((selection) => selection?.displayValue ?? '');\r\n    return selections.join(', ');\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "formValue",
          "defaultValue": "toSignal<string[] | unknown>(this.form.valueChanges)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 74,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 78,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string[] | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string[] | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "MatSelectModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  computed,\r\n  DestroyRef,\r\n  forwardRef,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n  signal\r\n} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\r\nimport {noop, tap} from 'rxjs';\r\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {IconComponent} from \"../../icon/icon.component\";\r\n\r\n@Component({\r\n  selector: 'app-input-multi-select',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, MatSelectModule, IconComponent],\r\n  templateUrl: './multi-input-select.component.html',\r\n  styles: [':host {@apply flex relative px-2 ; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiInputSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class MultiInputSelectComponent implements ControlValueAccessor, OnInit {\r\n  @Input({required: true}) type: string = '';\r\n  readonly _options = signal<{ value: string; displayValue: string }[]>([]);\r\n  readonly form: FormControl<string[] | null> = new FormControl<\r\n    string[] | null\r\n  >([]);\r\n  readonly formValue = toSignal<string[] | unknown>(this.form.valueChanges);\r\n  readonly formattedName = computed<string>(() => {\r\n    const value: string[] | unknown = this.formValue();\r\n    if (!value) return '';\r\n    const selections = (value as string[])\r\n      .map((selection) =>\r\n        this._options().find((option) => option.value === selection)\r\n      )\r\n      .filter((selection) => !!selection)\r\n      .map((selection) => selection?.displayValue ?? '');\r\n    return selections.join(', ');\r\n  });\r\n  private destroyRef = inject(DestroyRef);\r\n  private onTouched: (value: string) => void = noop;\r\n  private onChange: (value: string[] | null) => void = noop;\r\n\r\n  @Input({required: true}) set options(\r\n    value: {\r\n      value: string;\r\n      displayValue: string;\r\n    }[]\r\n  ) {\r\n    this._options.set(value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges\r\n      .pipe(\r\n        tap((value) => this.onChange(value)),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    if (disabled) {\r\n      this.form.disable({emitEvent: false});\r\n    } else {\r\n      this.form.enable({emitEvent: false});\r\n    }\r\n  }\r\n\r\n  writeValue(value: string[] | undefined): void {\r\n    this.form.setValue(value ?? [], {emitEvent: true});\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex relative px-2 ; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit"
      ],
      "accessors": {
        "options": {
          "name": "options",
          "setSignature": {
            "name": "options",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "literal type[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 56,
            "jsdoctags": [
              {
                "name": "value",
                "type": "literal type[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\r\n  (click)=\"select.open()\"\r\n  [class.text-gray-400]=\"form.disabled\"\r\n  class=\"flex overflow-hidden h-6 gap-2 cursor-pointer items-center relative max-w-[9rem]\"\r\n>\r\n  @if (!form.value || form.value.length === 0) {\r\n    <span>{{ type }}: All</span>\r\n  }\r\n  @if (form.value && form.value.length > 0) {\r\n    <span class=\"grow overflow-ellipsis overflow-hidden whitespace-nowrap\">{{\r\n        formattedName()\r\n      }}</span>\r\n  }\r\n  <div class=\"w-6 flex items-center\">\r\n    <app-icon fontIcon=\"arrow_drop_down\"/>\r\n  </div>\r\n  <div class=\"w-96 absolute left-0 top-0 opacity-0\">\r\n    <mat-select #select [formControl]=\"form\" [multiple]=\"true\" class=\"w-full\">\r\n      @for (option of _options();track option) {\r\n        <mat-option [value]=\"option.value\"\r\n        >{{ option.displayValue }}\r\n        </mat-option>\r\n      }\r\n    </mat-select>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "NoticeComponent",
      "id": "component-NoticeComponent-5322221f63c48ebc26d5b103dfe4eca15ec729d4b78bd9c1f6d2dcc39931c1ff2b20ba285b3c00d089ab56e896b70afe48c910886d661c35723e3f2758b411a4",
      "file": "src/app/components/elements/notice/notice.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-notice",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./notice.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "svgIcon",
          "defaultValue": "\"information\"",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {IconComponent} from \"../icon/icon.component\";\n\n@Component({\n  selector: 'app-notice',\n  standalone: true,\n  imports: [\n    MatIconModule,\n    IconComponent\n  ],\n  templateUrl: './notice.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoticeComponent {\n  @Input() svgIcon: string = \"information\";\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"px-[18px] py-4 border rounded-lg flex gap-3.5 text-sm\">\n  <app-icon [svgIcon]=\"svgIcon\" class=\"text-green-700\"/>\n  <div class=\"flex items-center\">\n    <ng-content/>\n  </div>\n</div>\n"
    },
    {
      "name": "OrganizationComponent",
      "id": "component-OrganizationComponent-8d70aa50f216979a6a0b782c4f881961847d44ed3f66385077bac856782ad3a947c562c73848e68524a64df7003417844df689b1ec989713821b6deab128505a",
      "file": "src/app/pages/account/organization/organization.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-organization",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./organization.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "organizationIdForm",
          "defaultValue": "new FormControl<string>('org-ZNKJCgRMFeW81TwlKivhopdn')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "organizationNameForm",
          "defaultValue": "new FormControl<string>('Personal')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "InputTextComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {HeaderComponent} from \"../../../components/elements/headers/header/header.component\";\r\nimport {InputTextComponent} from \"../../../components/elements/inputs/input-text/input-text.component\";\r\nimport {FormControl, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ButtonComponent} from \"../../../components/elements/buttons/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-organization',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    InputTextComponent,\r\n    ReactiveFormsModule,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './organization.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OrganizationComponent {\r\n  readonly organizationNameForm = new FormControl<string>('Personal');\r\n  readonly organizationIdForm = new FormControl<string>('org-ZNKJCgRMFeW81TwlKivhopdn');\r\n\r\n  constructor() {\r\n    this.organizationIdForm.disable();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 22
      },
      "extends": [],
      "templateData": "<app-header title=\"Organization\">\r\n</app-header>\r\n<div class=\"flex flex-col gap-6 p-6 max-w-screen-md\">\r\n  <div class=\"flex flex-col gap-4\">\r\n    <app-input-text [formControl]=\"organizationNameForm\"\r\n                    description=\"Human-friendly label for your organization, shown in user interfaces\"\r\n                    label=\"Organization name\"/>\r\n    <app-input-text [formControl]=\"organizationIdForm\"\r\n                    description=\"Identifier for this organization sometimes used in API requests\"\r\n                    label=\"Organization ID\"/>\r\n  </div>\r\n  <app-button color=\"primary\" size=\"sm\">Save</app-button>\r\n</div>\r\n"
    },
    {
      "name": "PieChartComponent",
      "id": "component-PieChartComponent-26a31a9990e50426c0c1c14130965941db5b4a4a4a75d7ea0b5af36a12f87d4a6ddead967964db32fb6c01f89739bfb05e448644b8efce11d1105b7b0ca425ac",
      "file": "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-pie-chart",
      "styleUrls": [],
      "styles": [
        ":host {@apply h-full w-full}"
      ],
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "data",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "containerRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "containerElementRef, {static: true}"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "root",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Root",
          "optional": true,
          "description": "",
          "line": 30
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "render",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  effect,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {createRoot, Root} from \"react-dom/client\";\r\nimport React from \"react\";\r\nimport {ReactPieChart} from \"./pie-chart\";\r\nimport {unmountComponentAtNode} from \"react-dom\";\r\n\r\nconst containerElementRef = \"reactComponentContainer\"\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  standalone: true,\r\n  styles: [':host {@apply h-full w-full}'],\r\n  template: `\r\n      <div #${containerElementRef} id=\"graph\" class=\"w-full h-full\"></div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PieChartComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n  @Input() data: number = 0\r\n  @ViewChild(containerElementRef, {static: true}) containerRef!: ElementRef;\r\n  root?: Root;\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      this.render();\r\n    })\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.render();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.root = createRoot(this.containerRef.nativeElement);\r\n    this.render();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    unmountComponentAtNode(this.containerRef.nativeElement);\r\n  }\r\n\r\n  private render() {\r\n    if (this.root) {\r\n      const {data} = this;\r\n      this.root.render(\r\n        <React.StrictMode>\r\n          <ReactPieChart\r\n            data={data}\r\n            size={this.containerRef.nativeElement.offsetWidth}\r\n          />\r\n        </React.StrictMode>\r\n      )\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply h-full w-full}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 30
      },
      "extends": [],
      "implements": [
        "AfterViewInit",
        "OnDestroy",
        "OnChanges"
      ]
    },
    {
      "name": "PlaygroundComponent",
      "id": "component-PlaygroundComponent-1a1f24fe0aa00f337ca98b5f268f4ff250dd339b0b6848484bbd6652c892424ce9c718bdc56a735ca26c2ff103374a15f0cc32c3dee74ea9b35e641c9e470c15",
      "file": "src/app/pages/playground/playground.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-playground",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./playground.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isResizing",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "leftContainerSize",
          "defaultValue": "signal<number>(36)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "rightContainerSize",
          "defaultValue": "computed(() => 100 - this.leftContainerSize())",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "threadElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 31,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'thread'"
            }
          ],
          "modifierKind": [
            170
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "finishResizing",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "initResizing",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "resize",
          "args": [
            {
              "name": "$event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "$event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "NgClass"
        },
        {
          "name": "CdkDrag"
        },
        {
          "name": "TextAreaComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed, ElementRef, signal, ViewChild} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\nimport {NgClass} from \"@angular/common\";\nimport {CdkDrag} from \"@angular/cdk/drag-drop\";\nimport {TextAreaComponent} from \"../../components/elements/inputs/text-area/text-area.component\";\nimport {toSignal} from \"@angular/core/rxjs-interop\";\nimport {delay, of, startWith} from \"rxjs\";\nimport {SkeletonLoaderComponent} from \"../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\nimport {HeaderComponent} from \"../../components/elements/headers/header/header.component\";\nimport {IconComponent} from \"../../components/elements/icon/icon.component\";\n\n@Component({\n  selector: 'app-playground',\n  standalone: true,\n  imports: [\n    MatIconModule,\n    ButtonComponent,\n    NgClass,\n    CdkDrag,\n    TextAreaComponent,\n    SkeletonLoaderComponent,\n    HeaderComponent,\n    IconComponent\n  ],\n  templateUrl: './playground.component.html',\n  styles: [':host {@apply flex flex-col w-full h-full}'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaygroundComponent {\n  @ViewChild('thread') threadElement!: ElementRef;\n\n  isResizing = signal<boolean>(false);\n  leftContainerSize = signal<number>(36);\n  rightContainerSize = computed(() => 100 - this.leftContainerSize())\n\n  readonly isLoading = toSignal(of(false).pipe(\n    delay(1_000),\n    startWith(true)\n  ))\n\n  resize($event: MouseEvent): void {\n    if (this.isResizing()) {\n      const offsetWidth = this.threadElement.nativeElement.offsetWidth;\n      const offsetLeft = this.threadElement.nativeElement.offsetLeft;\n      const pointerPosition = $event.x;\n\n      const diff = pointerPosition - offsetLeft;\n      let size = Math.round(diff / offsetWidth * 10_000) / 100;\n      if (size < 36) {\n        size = 36;\n      } else if (size > 50) {\n        size = 50;\n      }\n      this.leftContainerSize.set(size);\n    }\n  }\n\n  initResizing(): void {\n    this.isResizing.set(true)\n  }\n\n  finishResizing(): void {\n    this.isResizing.set(false)\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header title=\"Playground\">\n  <a class=\"text-sm font-medium flex items-center leading-6 cursor-pointer text-green-700 hover:text-green-800\">\n    Learn about the Assistants API\n    <mat-icon class=\"scale-[60%]\" svgIcon=\"link\"/>\n  </a>\n</app-header>\n<div #thread (mousemove)=\"resize($event)\" (mouseup)=\"finishResizing()\" [class.cursor-ew-resize]=\"this.isResizing()\"\n     class=\"grow w-full text-gray-900 flex\">\n  <div [style.flex-grow]=\"leftContainerSize()\"\n       class=\"hidden min-[800px]:flex flex-col h-full items-center justify-center shrink gap-4 overflow-hidden basis-0\"\n  >\n    @if (isLoading()) {\n      <div class=\"flex flex-col gap-5 w-full h-full py-2.5 px-6\">\n        <app-skeleton-loader class=\"w-full h-8\"/>\n        <app-skeleton-loader class=\"w-full grow\"/>\n        <app-skeleton-loader class=\"w-full h-8\"/>\n        <app-skeleton-loader class=\"w-full grow\"/>\n      </div>\n    } @else {\n      <div class=\"bg-gray-100 text-gray-600 h-10 w-10 flex items-center justify-center rounded-lg\">\n        <mat-icon svgIcon=\"robot\"/>\n      </div>\n      <div class=\"flex flex-col gap-1.5 items-center\">\n        <div class=\"h-5 font-medium\">Create an assistant</div>\n        <div class=\"text-sm h-5 flex items-start gap-1\">\n          <span>to get started with</span>\n          <a class=\"h-5 font-medium flex items-end cursor-pointer text-green-700 hover:text-green-800\">\n            the Assistants API\n            <mat-icon class=\"scale-[60%]\" svgIcon=\"link\"/>\n          </a>\n        </div>\n      </div>\n      <app-button color=\"primary\" size=\"md\">\n        <app-icon svgIcon=\"add\"/>\n        Create\n      </app-button>\n    }\n  </div>\n  <div (mousedown)=\"initResizing()\"\n       class=\"flex cursor-ew-resize w-5 h-full overflow-hidden touch-none select-none z-10 group\"\n  >\n    <div class=\"w-[0.5px] h-full bg-gray-200 group-hover:bg-gray-300\"></div>\n  </div>\n  <div [style.flex-grow]=\"rightContainerSize()\"\n       class=\"flex flex-col shrink gap-4 basis-0 -ml-5 h-full\">\n    <div class=\"px-6 flex justify-between items-center py-3.5 w-full\">\n      <span class=\"text-xs font-medium\">THREAD</span>\n      <div class=\"flex justify-end items-center gap-2\">\n        <app-button color=\"neutral\" size=\"sm\">\n          <app-icon svgIcon=\"clean\"/>\n          <span>Clear</span>\n        </app-button>\n        <app-button color=\"neutral\" size=\"sm\">\n          <span>Logs</span>\n          <app-icon svgIcon=\"logs\"/>\n        </app-button>\n      </div>\n    </div>\n    <div class=\"flex items-center grow px-6 pt-1.5 pb-5 w-full\">\n    </div>\n    <div class=\"flex flex-col gap-3 px-6 pb-3 w-full\">\n      <div class=\"border p-6 rounded-lg bg-white transition-all flex flex-col gap-4\">\n        <app-text-area placeholder=\"Enter your message...\"></app-text-area>\n        <div class=\"flex items-center justify-between\">\n          <app-button color=\"neutral\" size=\"sm\">\n            <app-icon svgIcon=\"attach-file\"/>\n          </app-button>\n          <div class=\"flex gap-2 items-center\">\n            <app-button color=\"neutral\" disabled size=\"sm\">\n              <app-icon svgIcon=\"add\"/>\n            </app-button>\n            <app-button color=\"neutral\" disabled size=\"sm\">\n              <app-icon svgIcon=\"run\"/>\n              <span>Run</span>\n            </app-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"text-sm flex justify-center items-center w-full text-gray-500\">Playground messages can be viewed by\n        anyone at your organization using the API.\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "ProfileComponent",
      "id": "component-ProfileComponent-e35d01856d6e085f27fefece721699d562d4680eaf53763199d83e6d0aa4810e239f9678272af2924d7751140928dc6bef79861b24e2f801aafd783155467060",
      "file": "src/app/pages/account/profile/profile.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-profile",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./profile.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "emailForm",
          "defaultValue": "new FormControl<string>('john.doe@company.com')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "nameForm",
          "defaultValue": "new FormControl<string>('John Doe')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "phoneForm",
          "defaultValue": "new FormControl<string>('+33689403381')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonTextComponent",
          "type": "component"
        },
        {
          "name": "InputTextComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {HeaderComponent} from \"../../../components/elements/headers/header/header.component\";\r\nimport {ButtonTextComponent} from \"../../../components/elements/buttons/button-text/button-text.component\";\r\nimport {InputTextComponent} from \"../../../components/elements/inputs/input-text/input-text.component\";\r\nimport {FormControl, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ButtonComponent} from \"../../../components/elements/buttons/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    ButtonTextComponent,\r\n    InputTextComponent,\r\n    ReactiveFormsModule,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './profile.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProfileComponent {\r\n  readonly nameForm = new FormControl<string>('John Doe');\r\n  readonly emailForm = new FormControl<string>('john.doe@company.com');\r\n  readonly phoneForm = new FormControl<string>('+33689403381');\r\n\r\n  constructor() {\r\n    this.emailForm.disable();\r\n    this.phoneForm.disable();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 25
      },
      "extends": [],
      "templateData": "<app-header title=\"Profile\">\r\n\r\n</app-header>\r\n<div class=\"flex flex-col gap-6 p-6 max-w-screen-md\">\r\n  <div class=\"flex flex-col gap-4\">\r\n    <app-input-text [formControl]=\"nameForm\" description=\"The name associated with this account\" label=\"Name\"/>\r\n    <app-input-text [formControl]=\"emailForm\" description=\"The email address associated with this account\"\r\n                    label=\"Email address\"/>\r\n    <app-input-text [formControl]=\"phoneForm\" description=\"The phone number associated with this account\"\r\n                    label=\"Phone number\"/>\r\n  </div>\r\n  <app-button color=\"primary\" size=\"sm\">Save</app-button>\r\n</div>\r\n"
    },
    {
      "name": "ProfilePictureComponent",
      "id": "component-ProfilePictureComponent-40368f2b335d9299f5b9c747d484f47e5a804b4cd4973b1894877ffa420fe8ffab1e91d9d48ae911ef9ce92d676cd2512d998aeb7723f083c3d671136e2c2425",
      "file": "src/app/components/elements/user/profil-picture/profile-picture.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-profile-picture",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./profile-picture.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgOptimizedImage"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {NgOptimizedImage} from \"@angular/common\";\n\n@Component({\n  selector: 'app-profile-picture',\n  standalone: true,\n  imports: [\n    NgOptimizedImage\n  ],\n  templateUrl: './profile-picture.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfilePictureComponent {\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "templateData": "<img alt=\"default_user\" class=\"w-full h-full\" src=\"assets/img/default-user.png\">\n"
    },
    {
      "name": "RouterButtonComponent",
      "id": "component-RouterButtonComponent-4d17d9f4fdfe592114a87e9538178db82d42eb7cfe77f7a4ab36c20e75bbdbcb0e927a7603133e9a7452dad0af511b7275f2a79edd97e73b130db561274b6122",
      "file": "src/app/components/navigation/sidenav/router-button/router-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-router-button",
      "styleUrls": [],
      "styles": [
        ":host .active {@apply bg-green-100 text-green-700 hover:bg-green-100 hover:text-green-700 font-semibold; }"
      ],
      "templateUrl": [
        "./router-button.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "isActive",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 21,
          "type": "boolean",
          "decorators": []
        },
        {
          "required": true,
          "name": "navigation",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 20,
          "type": "Navigation",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterLink"
        },
        {
          "name": "RouterLinkActive"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {RouterLink, RouterLinkActive} from \"@angular/router\";\r\n\r\nimport {Navigation} from \"../navigation.type\";\r\nimport {IconComponent} from \"../../../elements/icon/icon.component\";\r\n\r\n@Component({\r\n  selector: 'app-router-button',\r\n  standalone: true,\r\n  imports: [\r\n    RouterLink,\r\n    RouterLinkActive,\r\n    IconComponent\r\n  ],\r\n  templateUrl: './router-button.component.html',\r\n  styles: [':host .active {@apply bg-green-100 text-green-700 hover:bg-green-100 hover:text-green-700 font-semibold; }'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RouterButtonComponent {\r\n  @Input({required: true}) navigation!: Navigation;\r\n  @Input({required: true}) isActive: boolean = false\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host .active {@apply bg-green-100 text-green-700 hover:bg-green-100 hover:text-green-700 font-semibold; }\n",
      "extends": [],
      "templateData": "@if (navigation.route) {\r\n  <a #rla=\"routerLinkActive\"\r\n     [class.active]=\"rla.isActive && isActive\"\r\n     [routerLink]=\"navigation.route\"\r\n     class=\"transition-colors flex items-center overflow-hidden w-full gap-4 cursor-pointer text-gray-500 h-8 p-1.5 hover:bg-gray-100 hover:text-gray-800 rounded-lg whitespace-nowrap\"\r\n     routerLinkActive\r\n  >\r\n    @if (navigation.icon) {\r\n      <app-icon [svgIcon]=\"navigation.icon\"/>\r\n    } @else {\r\n      <div class=\"w-5 min-w-[1.25rem]\"></div>\r\n    }\r\n    {{ navigation.name }}\r\n  </a>\r\n} @else if (navigation.run) {\r\n  <div (click)=\"navigation.run()\"\r\n       class=\"transition-colors flex items-center overflow-hidden w-full gap-4 cursor-pointer text-gray-500 h-8 p-1.5 hover:bg-gray-100 hover:text-gray-800 rounded-lg whitespace-nowrap\"\r\n  >\r\n    @if (navigation.icon) {\r\n      <app-icon [svgIcon]=\"navigation.icon\"/>\r\n    } @else {\r\n      <div class=\"w-5 min-w-[1.25rem]\"></div>\r\n    }\r\n    {{ navigation.name }}\r\n  </div>\r\n}\r\n"
    },
    {
      "name": "SelectDropdownComponent",
      "id": "component-SelectDropdownComponent-3452d05d5cbc9cb3a2e6764a9efe2804e60f06a16ee355d4fb40dd5585c7f3b57a131b10fb0df686c7f80f0c0f796b462b482a8bf5e75e7e951f4840bb36163e",
      "file": "src/app/components/elements/inputs/select-dropdown/select-dropdown.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-select-dropdown",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative; }"
      ],
      "templateUrl": [
        "./select-dropdown.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "options",
          "defaultValue": "['Personal', 'Pro']",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string[]",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'md'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "\"sm\" | \"md\"",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "'Personal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string | null",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onValueChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<string | null>(\n    ''\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "height",
          "defaultValue": "signal<number>(24)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isInputEnabled",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 47,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "clickInside",
          "args": [
            {
              "name": "$event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click', ['$event']"
            }
          ],
          "modifierKind": [
            170
          ],
          "jsdoctags": [
            {
              "name": "$event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "clickOutside",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'document:click'"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 74,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 78,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [
            {
              "name": "$event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": [
            "$event"
          ],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51
        },
        {
          "name": "document:click",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "CdkMenu"
        },
        {
          "name": "CdkMenuItem"
        },
        {
          "name": "CdkMenuTrigger"
        },
        {
          "name": "MatAutocompleteModule",
          "type": "module"
        },
        {
          "name": "IconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, ReactiveFormsModule} from \"@angular/forms\";\nimport {noop, tap} from \"rxjs\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {CdkMenu, CdkMenuItem, CdkMenuTrigger} from \"@angular/cdk/menu\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {IconComponent} from \"../../icon/icon.component\";\n\n@Component({\n  selector: 'app-select-dropdown',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    CdkMenu,\n    CdkMenuItem,\n    CdkMenuTrigger,\n    MatAutocompleteModule,\n    IconComponent\n  ],\n  templateUrl: './select-dropdown.component.html',\n  styles: [':host {@apply flex text-inherit relative; }'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectDropdownComponent implements ControlValueAccessor, OnInit {\n  @Input() placeholder: string = '';\n  @Input() value: string | null = 'Personal';\n  @Input() options: string[] = ['Personal', 'Pro'];\n  @Input() size: 'sm' | 'md' = 'md';\n  @Output() onValueChange = new EventEmitter();\n  readonly form: FormControl<string | null> = new FormControl<string | null>(\n    ''\n  );\n  readonly isInputEnabled = signal<boolean>(false);\n  readonly height = signal<number>(24)\n  private destroyRef = inject(DestroyRef);\n  private onTouched: (value: string) => void = noop;\n  private onChange: (value: string | null) => void = noop;\n\n  @HostListener('click', ['$event'])\n  clickInside($event: Event): void {\n    this.isInputEnabled.set(true);\n    $event.stopPropagation();\n  }\n\n  @HostListener('document:click')\n  clickOutside(): void {\n    this.isInputEnabled.set(false)\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        tap((value) => this.onChange(value)),\n        takeUntilDestroyed(this.destroyRef)\n      )\n      .subscribe();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.form.disable({emitEvent: false});\n    } else {\n      this.form.enable({emitEvent: false});\n    }\n  }\n\n  writeValue(value: string | undefined): void {\n    this.form.setValue(value ?? '', {emitEvent: false});\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit"
      ],
      "templateData": "<div [class.border-gray-400]=\"!isInputEnabled()\"\n     [class.border-green-700]=\"isInputEnabled()\"\n     [class.h-8]=\"size === 'sm'\"\n     [class.h-9]=\"size === 'md'\"\n     class=\"flex items-center pl-3 pr-1 group justify-between group border rounded-lg w-full relative\"\n>\n  <div class=\"grid text-sm relative grow\">\n    <div class=\"flex overflow-hidden overflow-ellipsis\">{{ value }}</div>\n  </div>\n  <input [class.opacity-0]=\"!isInputEnabled()\"\n         [formControl]='form'\n         [matAutocomplete]=\"auto\"\n         class=\"w-full pl-3 absolute rounded-lg h-full top-0 left-0 outline-0 group-focus:opacity-0 pr-12\"\n  >\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    @for (option of options;track option) {\n      <mat-option [value]=\"option\">{{ option }}</mat-option>\n    }\n  </mat-autocomplete>\n  <app-icon class=\"group-hover:text-gray-500 text-gray-400\" svgIcon=\"dropdown\"/>\n</div>\n\n"
    },
    {
      "name": "SidenavComponent",
      "id": "component-SidenavComponent-3b9c339a5a563676af7fc4deefa36913538dfb7c56751ecc2f9678b646549de8ff97e4010b027f736b86649db6a26e5e12c1f6db06d3f3297525fe683c037a80",
      "file": "src/app/components/navigation/sidenav/sidenav.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-sidenav",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col h-full}"
      ],
      "templateUrl": [
        "./sidenav.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isHovering",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isRouterButtonClicked",
          "defaultValue": "signal<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isSidenavFullyDisplayed",
          "defaultValue": "computed(() => (this.isHovering() && !this.isRouterButtonClicked()) || (this.size() === SIZE.XL || this.size() === SIZE.XXL))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 108,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "mainNavigations",
          "defaultValue": "[\r\n    {\r\n      icon: 'playground',\r\n      name: 'Playground',\r\n      route: ['/', 'playground'],\r\n    },\r\n    {\r\n      icon: 'assistants',\r\n      name: 'Assistants',\r\n      route: ['/', 'assistants',]\r\n    },\r\n    {\r\n      icon: 'fine-tuning',\r\n      name: 'Fine-tuning',\r\n      route: ['/', 'finetune',]\r\n    },\r\n    {\r\n      icon: 'api-keys',\r\n      name: 'API keys',\r\n      route: ['/', 'api-keys']\r\n    },\r\n    {\r\n      icon: 'files',\r\n      name: 'Files',\r\n      route: ['/', 'files',]\r\n    },\r\n    {\r\n      icon: 'usage',\r\n      name: 'Usage',\r\n      route: ['/', 'usage']\r\n    },\r\n    {\r\n      icon: 'settings',\r\n      name: 'Settings',\r\n      route: ['/', 'account'],\r\n      children: [\r\n        {\r\n          name: 'Organization',\r\n          route: ['/', 'account', 'organization'],\r\n        },\r\n        {\r\n          name: 'Team',\r\n          route: ['/', 'account', 'team'],\r\n        },\r\n        {\r\n          name: 'Limits',\r\n          route: ['/', 'account', 'limits'],\r\n        },\r\n        {\r\n          name: 'Billings',\r\n          route: ['/', 'account', 'billings'],\r\n        },\r\n        {\r\n          name: 'Profile',\r\n          route: ['/', 'account', 'profile'],\r\n        },\r\n      ],\r\n    },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Navigation[]",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "secondNavigations",
          "defaultValue": "[\r\n    {\r\n      icon: 'documentation',\r\n      name: 'Documentation',\r\n      route: ['/', 'docs'],\r\n    },\r\n    {\r\n      icon: 'help',\r\n      name: 'Help',\r\n    },\r\n    {\r\n      icon: 'all-products',\r\n      name: 'All products',\r\n      run: () => {\r\n      },\r\n    },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Navigation[]",
          "optional": false,
          "description": "",
          "line": 90,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "size",
          "defaultValue": "signal<SIZE | undefined>(undefined)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 107,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "clickOnRouterButton",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 134,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "mouseEnter",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "mouseLeave",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 128,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 117,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "RouterLink"
        },
        {
          "name": "NgOptimizedImage"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "RouterLinkActive"
        },
        {
          "name": "RouterButtonComponent",
          "type": "component"
        },
        {
          "name": "ProfilePictureComponent",
          "type": "component"
        },
        {
          "name": "HighlightDirective",
          "type": "directive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {AfterViewInit, ChangeDetectionStrategy, Component, computed, signal} from '@angular/core';\r\nimport {RouterLink, RouterLinkActive} from \"@angular/router\";\r\nimport {NgOptimizedImage} from \"@angular/common\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {RouterButtonComponent} from \"./router-button/router-button.component\";\r\nimport {Navigation} from \"./navigation.type\";\r\nimport {ProfilePictureComponent} from \"../../elements/user/profil-picture/profile-picture.component\";\r\nimport {HighlightDirective} from \"../../directive/menu/menu.directive\";\r\nimport {fromEvent, map} from \"rxjs\";\r\nimport {getDeviceDimension, SIZE} from \"./size\";\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  standalone: true,\r\n  imports: [\r\n    RouterLink,\r\n    NgOptimizedImage,\r\n    MatIconModule,\r\n    RouterLinkActive,\r\n    RouterButtonComponent,\r\n    ProfilePictureComponent,\r\n    HighlightDirective\r\n  ],\r\n  templateUrl: './sidenav.component.html',\r\n  styles: [':host {@apply flex flex-col h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SidenavComponent implements AfterViewInit {\r\n  readonly isHovering = signal<boolean>(false);\r\n  readonly isRouterButtonClicked = signal<boolean>(false);\r\n  readonly mainNavigations: Navigation[] = [\r\n    {\r\n      icon: 'playground',\r\n      name: 'Playground',\r\n      route: ['/', 'playground'],\r\n    },\r\n    {\r\n      icon: 'assistants',\r\n      name: 'Assistants',\r\n      route: ['/', 'assistants',]\r\n    },\r\n    {\r\n      icon: 'fine-tuning',\r\n      name: 'Fine-tuning',\r\n      route: ['/', 'finetune',]\r\n    },\r\n    {\r\n      icon: 'api-keys',\r\n      name: 'API keys',\r\n      route: ['/', 'api-keys']\r\n    },\r\n    {\r\n      icon: 'files',\r\n      name: 'Files',\r\n      route: ['/', 'files',]\r\n    },\r\n    {\r\n      icon: 'usage',\r\n      name: 'Usage',\r\n      route: ['/', 'usage']\r\n    },\r\n    {\r\n      icon: 'settings',\r\n      name: 'Settings',\r\n      route: ['/', 'account'],\r\n      children: [\r\n        {\r\n          name: 'Organization',\r\n          route: ['/', 'account', 'organization'],\r\n        },\r\n        {\r\n          name: 'Team',\r\n          route: ['/', 'account', 'team'],\r\n        },\r\n        {\r\n          name: 'Limits',\r\n          route: ['/', 'account', 'limits'],\r\n        },\r\n        {\r\n          name: 'Billings',\r\n          route: ['/', 'account', 'billings'],\r\n        },\r\n        {\r\n          name: 'Profile',\r\n          route: ['/', 'account', 'profile'],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  readonly secondNavigations: Navigation[] = [\r\n    {\r\n      icon: 'documentation',\r\n      name: 'Documentation',\r\n      route: ['/', 'docs'],\r\n    },\r\n    {\r\n      icon: 'help',\r\n      name: 'Help',\r\n    },\r\n    {\r\n      icon: 'all-products',\r\n      name: 'All products',\r\n      run: () => {\r\n      },\r\n    },\r\n  ]\r\n  private size = signal<SIZE | undefined>(undefined);\r\n  readonly isSidenavFullyDisplayed = computed(() => (this.isHovering() && !this.isRouterButtonClicked()) || (this.size() === SIZE.XL || this.size() === SIZE.XXL))\r\n\r\n  constructor() {\r\n    fromEvent(window, 'resize').pipe(\r\n      map(() => getDeviceDimension(window.innerWidth))\r\n    )\r\n      .subscribe(dimension => this.size.set(dimension));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.size.set(getDeviceDimension(window.innerWidth))\r\n  }\r\n\r\n  mouseEnter(): void {\r\n    setTimeout(() => {\r\n      this.isRouterButtonClicked.set(false);\r\n      this.isHovering.set(true);\r\n    })\r\n  }\r\n\r\n  mouseLeave(): void {\r\n    setTimeout(() => {\r\n      this.isHovering.set(false);\r\n    })\r\n  }\r\n\r\n  clickOnRouterButton(): void {\r\n    this.isRouterButtonClicked.set(true)\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col h-full}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 108
      },
      "extends": [],
      "implements": [
        "AfterViewInit"
      ],
      "templateData": "<div\r\n  (mouseenter)=\"mouseEnter()\"\r\n  (mouseleave)=\"mouseLeave()\"\r\n  [class.hover:w-52]=\"!isRouterButtonClicked()\"\r\n  class=\"z-10 w-[calc(3.5rem+1px)] xl:w-52 bg-white hover:shadow-xl hover:xl:shadow-none transition-all h-full border-r border-gray-200 fixed xl:relative left-0 top-0 px-3 py-4 flex group flex-col justify-between text-sm\">\r\n  <div class=\"flex flex-col gap-6\">\r\n    <a class=\"w-8 flex items-center justify-center\" routerLink=\"/\">\r\n      <img alt=\"logo\" height=\"24\" ngSrc=\"assets/img/logo.svg\" priority=\"1\" width=\"24\">\r\n    </a>\r\n    <div class=\"flex flex-col gap-1 w-full\">\r\n      @for (navigation of mainNavigations;track navigation) {\r\n        <app-router-button [navigation]=\"navigation\" [isActive]=\"!navigation.children || !isSidenavFullyDisplayed()\"\r\n                           (click)=\"clickOnRouterButton()\"/>\r\n        @for (child of (navigation.children ?? []);track child) {\r\n          <app-router-button [navigation]=\"child\" [isActive]=\"isSidenavFullyDisplayed()\"\r\n                             (click)=\"clickOnRouterButton()\"/>\r\n        }\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"flex flex-col\">\r\n    <div class=\"flex flex-col gap-1 w-full\">\r\n      @for (navigation of secondNavigations;track navigation) {\r\n        <app-router-button [navigation]=\"navigation\" [isActive]=\"!navigation.children || !isSidenavFullyDisplayed()\"/>\r\n        @for (child of (navigation.children ?? []);track child) {\r\n          <app-router-button [navigation]=\"child\" [isActive]=\"isSidenavFullyDisplayed()\"\r\n                             (click)=\"clickOnRouterButton()\"/>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"flex flex-col pt-4 mt-1 border-t\">\r\n      <div class=\"px-1.5 w-full cursor-pointer flex\">\r\n        <app-profile-picture [appMenuFor]=\"userMenu\" appMenu class=\"w-[18px] h-[18px]\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #userMenu>\r\n  <div class=\"flex flex-col pt-2.5 pb-1 w-full text-sm\">\r\n    <div class=\"flex flex-col gap-0.5 py-1 px-4 w-full\">\r\n      <div class=\"text-sm font-bold\">John Doe</div>\r\n      <div class=\"text-gray-700 text-xs\">{{ 'john.doe@corp.com' }}</div>\r\n    </div>\r\n    <div class=\"border-t my-1 w-full\"></div>\r\n    <div class=\"text-gray-600 flex items-center px-4 py-1.5\">\r\n      <div>Personal</div>\r\n    </div>\r\n    <div class=\"border-t my-1 w-full\"></div>\r\n    <div class=\"flex flex-col\">\r\n      <div class=\"text-gray-900 flex items-center px-4 py-1.5 hover:bg-emerald-50 cursor-pointer\">Manage\r\n        cookies\r\n      </div>\r\n      <a class=\"text-gray-900 flex items-center px-4 py-1.5 hover:bg-emerald-50 cursor-pointer\">Terms &amp;\r\n        policies</a>\r\n      <div class=\"text-gray-900 flex items-center px-4 py-1.5 hover:bg-emerald-50 cursor-pointer\">Log out</div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n"
    },
    {
      "name": "SkeletonLoaderComponent",
      "id": "component-SkeletonLoaderComponent-8cd213bd959c589d92cf00ce6f1cf16f36f92c8f4e39db23e0503b088746138af7be4ea57cb6320243e439bb07de758ef7e48abcfc86ebde465d60c0cf33ab5d",
      "file": "src/app/components/elements/loaders/skeleton-loader/skeleton-loader.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-skeleton-loader",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./skeleton-loader.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n  selector: 'app-skeleton-loader',\n  standalone: true,\n  imports: [],\n  templateUrl: './skeleton-loader.component.html',\n  styleUrl: './skeleton-loader.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SkeletonLoaderComponent {\n\n}\n",
      "styleUrl": "./skeleton-loader.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div\n  aria-busy=\"true\"\n  aria-label=\"loading\"\n  aria-valuemax=\"100\"\n  aria-valuemin=\"0\"\n  aria-valuetext=\"Loading...\"\n  class=\"skeleton-loader progress\"\n  role=\"progressbar\"\n  tabindex=\"-1\"\n>\n</div>\n"
    },
    {
      "name": "SpinnerComponent",
      "id": "component-SpinnerComponent-fbee11994f4c1079ee71c47a0adb28463e9dd238d2b12bc4f5cfd8653440560ac70aa43c63aed1486699a35f3677630ff49ab6087bab22fb44cf44e9fdff9c68",
      "file": "src/app/components/elements/loaders/spinner/spinner.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-spinner",
      "styleUrls": [],
      "styles": [
        ""
      ],
      "templateUrl": [
        "./spinner.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "\"sm\" | \"md\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "height",
          "defaultValue": "signal<number>(2)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, signal} from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  standalone: true,\n  imports: [],\n  templateUrl: './spinner.component.html',\n  styles: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerComponent {\n  height = signal<number>(2)\n\n  @Input() set size(value: 'sm' | 'md') {\n    if (value === 'sm') {\n      this.height.set(1);\n    } else {\n      this.height.set(2);\n    }\n  };\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": [],
      "accessors": {
        "size": {
          "name": "size",
          "setSignature": {
            "name": "size",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "\"sm\" | \"md\"",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 14,
            "jsdoctags": [
              {
                "name": "value",
                "type": "\"sm\" | \"md\"",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<svg [attr.height]=\"height()+'em'\" class=\"animate-spin\"\n     fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\"\n     viewBox=\"0 0 1024 1024\" width=\"2em\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\"></path>\n</svg>\n"
    },
    {
      "name": "TabComponent",
      "id": "component-TabComponent-b8d69d36d748943c51006c6971233b7469f4a5970a499d6ce4a6e762a9ac3e8bae0f88642515fc3f1950992d2b0e4ff350ac3e89d72cbc7c1dd9ae34b9dc3bab",
      "file": "src/app/components/navigation/tabs/tab/tab.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tab.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "selectedSelection",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string",
          "decorators": []
        },
        {
          "name": "selections",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "changeSelection",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './tab.component.html',\r\n  styles: [],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TabComponent {\r\n  @Input() selections: string[] = [];\r\n  @Output() changeSelection = new EventEmitter<string>();\r\n  @Input() selectedSelection?: string;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class='flex border-b border-gray-500 text-gray-700 w-full font-semibold px-8'>\r\n  @for (selection of selections;track selection) {\r\n    <div class='hover:text-gray-900 py-2 px-4  cursor-pointer hover:border-b-2 border-gray-900 transition-colors'\r\n         (click)='changeSelection.emit(selection)'\r\n         [class.border-b-2]='selectedSelection === selection'\r\n         [class.text-gray-900]='selectedSelection === selection'\r\n    >{{ selection }}\r\n    </div>\r\n  }\r\n</div>\r\n"
    },
    {
      "name": "TabRouteComponent",
      "id": "component-TabRouteComponent-df14ee6ca4b31abbda23ca63a8fbec7f9de7a25734b327169c572ef39afacfbe15fba205787bd6d4a2cb28591b610a363ee71a5c836c416bc03ada9e78b2e4f0",
      "file": "src/app/components/navigation/tabs/tab-route/tab-route.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tab-route",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tab-route.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "selections",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "literal type[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "RouterLink"
        },
        {
          "name": "RouterLinkActive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterLink, RouterLinkActive} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tab-route',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink, RouterLinkActive],\r\n  templateUrl: './tab-route.component.html',\r\n  styles: [],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TabRouteComponent {\r\n  @Input() selections: { name: string; route: string[] }[] = [];\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class='flex border-b border-gray-200 gap-5 w-full text-sm px-6 text-gray-600'>\r\n  @for (selection of selections;track selection) {\r\n    <div class='pt-2 pb-3 hover:border-b hover:border-gray-400 cursor-pointer transition-colors'\r\n         [routerLink]='selection.route'\r\n         routerLinkActive\r\n         #rla='routerLinkActive'\r\n         [class.border-b]='rla.isActive'\r\n         [class.text-gray-900]='rla.isActive'\r\n         [class.border-gray-900]='rla.isActive'\r\n         [class.font-bold]='rla.isActive'\r\n    >{{ selection.name }}\r\n    </div>\r\n  }\r\n</div>\r\n"
    },
    {
      "name": "TagComponent",
      "id": "component-TagComponent-8a42f1b3937044ae1e536e55efa20d0031d12d5515d7e9dc3fff8c6e3e26e33dcd7b354b5cd26d9ed5b10f06bf12a32a86f45d8fab44b9eb071a9c33633bf746",
      "file": "src/app/components/elements/badge/tag.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tag",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tag.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "required": true,
          "name": "size",
          "defaultValue": "'sm'",
          "deprecated": false,
          "deprecationMessage": "",
          "optional": false,
          "line": 12,
          "type": "\"xs\" | \"sm\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'app-tag',\n  standalone: true,\n  imports: [],\n  templateUrl: './tag.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagComponent {\n  @Input({required: true}) size: 'xs' | 'sm' = 'sm';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div\n  [class.text-sm]=\"size === 'sm'\"\n  [class.text-xs]=\"size === 'xs'\"\n  class=\"px-1 whitespace-nowrap pt-0.5 pb-x rounded text-green-700 bg-green-100 font-bold\">\n  <ng-content/>\n</div>\n"
    },
    {
      "name": "TeamComponent",
      "id": "component-TeamComponent-682d2a9204778a61cdf3f89a332598e7d5084cd2fdd504e479a3c4811ff30365b29ae8ec688daca89a4c794069b4407b706027aa17e33e11d674ead4b69b939e",
      "file": "src/app/pages/account/team/team.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-team",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}"
      ],
      "templateUrl": [
        "./team.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "value",
          "defaultValue": "signal<string>('Owner')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "changeValue",
          "args": [
            {
              "name": "$event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "$event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "InputTextComponent",
          "type": "component"
        },
        {
          "name": "SelectDropdownComponent",
          "type": "component"
        },
        {
          "name": "ProfilePictureComponent",
          "type": "component"
        },
        {
          "name": "TagComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, signal} from '@angular/core';\r\nimport {HeaderComponent} from \"../../../components/elements/headers/header/header.component\";\r\nimport {ButtonComponent} from \"../../../components/elements/buttons/button/button.component\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {InputTextComponent} from \"../../../components/elements/inputs/input-text/input-text.component\";\r\nimport {SelectDropdownComponent} from \"../../../components/elements/inputs/select-dropdown/select-dropdown.component\";\r\nimport {ProfilePictureComponent} from \"../../../components/elements/user/profil-picture/profile-picture.component\";\r\nimport {TagComponent} from \"../../../components/elements/badge/tag.component\";\r\n\r\n@Component({\r\n  selector: 'app-team',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    ButtonComponent,\r\n    MatIconModule,\r\n    InputTextComponent,\r\n    SelectDropdownComponent,\r\n    ProfilePictureComponent,\r\n    TagComponent\r\n  ],\r\n  templateUrl: './team.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TeamComponent {\r\n  readonly value = signal<string>('Owner');\r\n\r\n  changeValue($event: string): void {\r\n    this.value.set($event)\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n",
      "extends": [],
      "templateData": "<app-header title=\"Team\">\r\n  <app-button color=\"primary\" size=\"sm\">\r\n    Invite members\r\n  </app-button>\r\n</app-header>\r\n<div class=\"flex flex-col gap-6 p-6\">\r\n  <div class=\"flex lg:flex-row flex-col justify-between gap-4\">\r\n    <div class=\"flex gap-4\">\r\n      <app-profile-picture class=\"w-8 h-8\"/>\r\n      <div>\r\n        <div class=\"text-sm flex items-center gap-2\">John Doe\r\n          <app-tag size=\"xs\">You</app-tag>\r\n        </div>\r\n        <div class=\"text-xs text-gray-600\">{{ 'john.doe@greate_company.com' }}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-between items-center gap-8\">\r\n      <app-select-dropdown [value]=\"value()\" [options]=\"[]\" (onValueChange)=\"changeValue($event)\" class=\"w-[150px]\" size=\"sm\"/>\r\n      <app-button color=\"neutral\" size=\"sm\">Leave</app-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "TextAreaComponent",
      "id": "component-TextAreaComponent-73d3f1dc425c3f00f57af03d859c4658504c8e8ead24c915a466f53c4cbad1f50127c31457c34894a0e6e0fdd75b46ba471949de3684e15fb69bfa12b6d896d0",
      "file": "src/app/components/elements/inputs/text-area/text-area.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextAreaComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "app-text-area",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex text-inherit relative; }"
      ],
      "templateUrl": [
        "./text-area.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroyRef",
          "defaultValue": "inject(DestroyRef)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "form",
          "defaultValue": "new FormControl<string | null>(\n    ''\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl<string | null>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "height",
          "defaultValue": "signal<number>(24)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "noop",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "LabelComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, DestroyRef, forwardRef, inject, Input, OnInit, signal} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from \"@angular/forms\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {noop, tap} from \"rxjs\";\nimport {LabelComponent} from \"../label/label.component\";\n\n@Component({\n  selector: 'app-text-area',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    LabelComponent\n  ],\n  templateUrl: './text-area.component.html',\n  styles: [':host {@apply flex text-inherit relative; }'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextAreaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextAreaComponent implements ControlValueAccessor, OnInit {\n  @Input() label?: string = '';\n  @Input() placeholder: string = '';\n  @Input() description?: string = '';\n  @Input() required = false;\n  readonly form: FormControl<string | null> = new FormControl<string | null>(\n    ''\n  );\n  readonly height = signal<number>(24)\n  private destroyRef = inject(DestroyRef);\n  private onTouched: (value: string) => void = noop;\n  private onChange: (value: string | null) => void = noop;\n\n  ngOnInit(): void {\n    this.form.valueChanges\n      .pipe(\n        tap((value) => this.onChange(value)),\n        takeUntilDestroyed(this.destroyRef)\n      )\n      .subscribe();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.form.disable({emitEvent: false});\n    } else {\n      this.form.enable({emitEvent: false});\n    }\n  }\n\n  writeValue(value: string | undefined): void {\n    this.form.setValue(value ?? '', {emitEvent: false});\n  }\n\n  handleChange(event: Event): void {\n    setTimeout(() => {\n      const textarea: HTMLTextAreaElement = event.target as HTMLTextAreaElement;\n      textarea.style.height = 'auto'; // Reset the height\n      const value = Math.min(textarea.scrollHeight, 200);\n      textarea.style.height = `${value}px`;\n      this.height.set(value);\n    })\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex text-inherit relative; }\n",
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "OnInit"
      ],
      "templateData": "<app-label\n  [description]='description'\n  [label]='label'\n  [required]='required'\n>\n<textarea (input)=\"handleChange($event)\"\n          [class.overflow-hidden]=\"this.height() < 200\"\n          [formControl]='form'\n          [placeholder]=\"placeholder\"\n          class=\"w-full outline-0 resize-none h-6\"\n          rows=\"1\"></textarea>\n</app-label>\n"
    },
    {
      "name": "TooltipComponent",
      "id": "component-TooltipComponent-1bd57ce2e8f1d50b18f4c3da4967d9acceb1764a84fc9e66ee85fad1a1a8a12206117698d341b8905a2b4bfc9e8188cc31acd618a45eb39be27ac3844f832673",
      "file": "src/app/components/directive/highlight/tooltip/tooltip.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-tooltip",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tooltip.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "text",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './tooltip.component.html',\r\n  styles: [],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TooltipComponent {\r\n  @Input() text?: string;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div\r\n  class='flex bg-white text-sm text-gray-600 rounded-lg shadow-tooltip max-w-[300px] border border-gray-200 p-4 mx-2'>{{ text }}\r\n</div>\r\n"
    },
    {
      "name": "UsageComponent",
      "id": "component-UsageComponent-875b01ea61ceacb949c4b501d7b631300c15b611c15152dce6efa8a336d3b44e5551728f979f9deebec5611c1c6be0639c769e3eb313b3979505dc8132d678c4",
      "file": "src/app/pages/usage/usage.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-usage",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col w-full h-full}",
        ":host {scrollbar-gutter: stable}"
      ],
      "templateUrl": [
        "./usage.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "chosenMonthIndex",
          "defaultValue": "signal<number>(this.months.length - 1)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "costActivityButtons",
          "defaultValue": "[{text: 'Cost'}, {text: 'Activity'}]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "dailyCostData",
          "defaultValue": "computed<LineChartDatum[]>(() => {\r\n    if (this.chosenMonthIndex() > -1) {\r\n      return getUsageDemo()\r\n    }\r\n    return [];\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "isLoading",
          "defaultValue": "toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(false)\r\n  ))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "monthlyBillLimit",
          "defaultValue": "computed<number>(() => {\r\n    if (this.chosenMonthIndex() > -1) {\r\n      return Math.random();\r\n    }\r\n    return 0;\r\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "months",
          "defaultValue": "['August', 'September', 'October', 'November', 'December']",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "changeMonthIndex",
          "args": [
            {
              "name": "$event",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "$event",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "HeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonComponent",
          "type": "component"
        },
        {
          "name": "HeaderWithSubHeaderComponent",
          "type": "component"
        },
        {
          "name": "ButtonToggleComponent",
          "type": "component"
        },
        {
          "name": "ButtonNavigationComponent",
          "type": "component"
        },
        {
          "name": "SkeletonLoaderComponent",
          "type": "component"
        },
        {
          "name": "ChartBarTimelineComponent",
          "type": "component"
        },
        {
          "name": "PieChartComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, computed, signal} from '@angular/core';\r\nimport {HeaderComponent} from \"../../components/elements/headers/header/header.component\";\r\nimport {ButtonComponent} from \"../../components/elements/buttons/button/button.component\";\r\nimport {\r\n  HeaderWithSubHeaderComponent\r\n} from \"../../components/elements/headers/header-with-sub-header/header-with-sub-header.component\";\r\nimport {ButtonToggleComponent} from \"../../components/elements/buttons/button-toggle/button-toggle.component\";\r\nimport {\r\n  ButtonNavigationComponent\r\n} from \"../../components/elements/buttons/button-navigation/button-navigation.component\";\r\nimport {SkeletonLoaderComponent} from \"../../components/elements/loaders/skeleton-loader/skeleton-loader.component\";\r\nimport {toSignal} from \"@angular/core/rxjs-interop\";\r\nimport {delay, of, startWith} from \"rxjs\";\r\nimport {\r\n  ChartBarTimelineComponent,\r\n  LineChartDatum,\r\n} from \"../../components/elements/chart/chart-bar-timeline/chart-bar-timeline.component\";\r\nimport {getUsageDemo} from \"./demo\";\r\nimport {PieChartComponent} from \"../../components/elements/chart/pie-chart/pie-chart.component\";\r\n\r\n@Component({\r\n  selector: 'app-usage',\r\n  standalone: true,\r\n  imports: [\r\n    HeaderComponent,\r\n    ButtonComponent,\r\n    HeaderWithSubHeaderComponent,\r\n    ButtonToggleComponent,\r\n    ButtonNavigationComponent,\r\n    SkeletonLoaderComponent,\r\n    ChartBarTimelineComponent,\r\n    PieChartComponent\r\n  ],\r\n  templateUrl: './usage.component.html',\r\n  styles: [':host {@apply flex flex-col w-full h-full}', ':host {scrollbar-gutter: stable}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UsageComponent {\r\n  readonly isLoading = toSignal(of(false).pipe(\r\n    delay(1_000),\r\n    startWith(false)\r\n  ))\r\n  readonly costActivityButtons = [{text: 'Cost'}, {text: 'Activity'}];\r\n  readonly months = ['August', 'September', 'October', 'November', 'December'];\r\n  readonly chosenMonthIndex = signal<number>(this.months.length - 1);\r\n  readonly dailyCostData = computed<LineChartDatum[]>(() => {\r\n    if (this.chosenMonthIndex() > -1) {\r\n      return getUsageDemo()\r\n    }\r\n    return [];\r\n  });\r\n  monthlyBillLimit = computed<number>(() => {\r\n    if (this.chosenMonthIndex() > -1) {\r\n      return Math.random();\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  changeMonthIndex($event: number): void {\r\n    this.chosenMonthIndex.set($event);\r\n  }\r\n}\r\n\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col w-full h-full}\n:host {scrollbar-gutter: stable}\n",
      "extends": [],
      "templateData": "<app-header-with-sub-header title=\"Usage\"\r\n                            titleTooltip=\"Below you'll find a summary of API usage for your organization. All dates and times are UTC-based, and data may be delayed up to 5 minutes.\">\r\n  <div class=\"flex items-center justify-between w-full\">\r\n    <div class=\"flex items-center gap-2\">\r\n      <app-button-toggle [buttons]=\"costActivityButtons\" color=\"primary\"/>\r\n    </div>\r\n    <div class=\"flex items-center gap-2\">\r\n      <app-button-navigation (onChangeIndex)=\"changeMonthIndex($event)\" [chosenIndex]=\"chosenMonthIndex()\"\r\n                             [list]=\"months\" size=\"sm\"/>\r\n      <app-button color=\"primary\" size=\"sm\">\r\n        Export\r\n      </app-button>\r\n    </div>\r\n  </div>\r\n</app-header-with-sub-header>\r\n<div class=\"flex gap-14 px-6\">\r\n  <div class=\"w-[calc(70%-3.5rem)] pt-6 flex flex-col gap-14\">\r\n    @if (!isLoading()) {\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex gap-2 text-xl\">\r\n          <div class=\"font-bold\">Daily Costs</div>\r\n          <div class=\"text-gray-600\">$0.00</div>\r\n        </div>\r\n        <div class=\"h-[275px] w-full\">\r\n          <app-chart-bar-timeline [data]=\"dailyCostData()\"></app-chart-bar-timeline>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class=\"flex gap-2 text-sm\">\r\n          <div class=\"font-bold\">GPT-4 Turbo</div>\r\n          <div class=\"text-gray-600\">$1.02</div>\r\n        </div>\r\n        <app-skeleton-loader class=\"w-full h-[275px]\"/>\r\n      </div>\r\n    } @else {\r\n      <app-skeleton-loader class=\"w-full h-[275px]\"/>\r\n    }\r\n  </div>\r\n  <div class=\"min-w-[350px] w-1/3 pt-8 gap-14 flex flex-col\">\r\n    <div class=\"h-[180px] flex gap-5 items-center\">\r\n      @if (isLoading()) {\r\n        <app-skeleton-loader class=\"w-[200px] h-[100px]\"/>\r\n      } @else {\r\n        <div class=\"flex flex-col gap-4\">\r\n          <div class=\"flex gap-1.5 text-sm\">\r\n            <span class=\"font-bold\">Monthly Bill</span>\r\n            <span>Dec 1 - 31</span>\r\n          </div>\r\n          <div class=\"w-[130px] h-[130px]\">\r\n            <app-pie-chart [data]=\"monthlyBillLimit()\"></app-pie-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"pt-6 flex flex-col gap-4\">\r\n          <div class=\"text-xl\">$1.02</div>\r\n          <div class=\"text-sm\">/ $120.00 limit</div>\r\n          <app-button size=\"sm\" color=\"primary\">Increase limit</app-button>\r\n        </div>\r\n      }\r\n    </div>\r\n    <div class=\"flex flex-col gap-4 text-sm\">\r\n      @if (isLoading()) {\r\n        <app-skeleton-loader class=\"w-full\"/>\r\n      } @else {\r\n        <div><span class=\"font-medium\">Credit Grants</span> USD</div>\r\n        <div>No credit grants found.</div>\r\n      }\r\n    </div>\r\n  </div>\r\n</div>\r\n"
    },
    {
      "name": "VerticalMenuComponent",
      "id": "component-VerticalMenuComponent-1269ce27f92b8263da6fb730f8cebd227036e6033009d239618e199ece4141f6c7410d840ec6c4570779ed42ce0eb0c442c0419030c7770eada8ab36d58b1dc2",
      "file": "src/app/components/navigation/vertical-menu/vertical-menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-vertical-menu",
      "styleUrls": [],
      "styles": [
        ":host {@apply flex flex-col h-full}"
      ],
      "templateUrl": [
        "./vertical-menu.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "navigations",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "literal type[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MenuButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {MenuButtonComponent} from \"./menu-button/menu-button.component\";\r\n\r\nexport interface Menu {\r\n  name: string,\r\n  path: string[],\r\n  children?: Menu[]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-vertical-menu',\r\n  standalone: true,\r\n  imports: [\r\n    MenuButtonComponent\r\n  ],\r\n  templateUrl: './vertical-menu.component.html',\r\n  styles: [':host {@apply flex flex-col h-full}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VerticalMenuComponent {\r\n  @Input() navigations: { menu: Menu[], title: string }[] = []\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ":host {@apply flex flex-col h-full}\n",
      "extends": [],
      "templateData": "<div class=\"w-[250px] h-full py-5 px-2.5 overflow-y-scroll flex flex-col gap-5\">\r\n  @for (navigation of navigations;track navigation) {\r\n    <div class=\"flex-col flex\">\r\n      <div class=\"text-xs py-2.5 font-bold uppercase tracking-widest px-3\">{{ navigation.title }}</div>\r\n      @for (menu of navigation.menu;track menu) {\r\n        <app-menu-button [menu]=\"menu\"/>\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n"
    }
  ],
  "modules": [
    {
      "name": "SvgIconModule",
      "id": "module-SvgIconModule-d967f3c8e72be5f77aded13967aaa89a522e049fd1b23c9945efa7eb06ca2a6c1f6b98306bf1b914b19d66de2c30d6eaa6d88c51e5e4443c9455c562e9a47283",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/shared/svg-icon.module.ts",
      "methods": [
        {
          "name": "registerIcon",
          "args": [
            {
              "name": "iconName",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [
            123
          ],
          "jsdoctags": [
            {
              "name": "iconName",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatIconRegistry} from '@angular/material/icon';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, HttpClientModule],\r\n})\r\nexport class SvgIconModule {\r\n  constructor(\r\n    private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n    this.registerIcon('discussion');\r\n    this.registerIcon('calendar');\r\n    this.registerIcon('question');\r\n    this.registerIcon('api-keys');\r\n    this.registerIcon('assistants');\r\n    this.registerIcon('information');\r\n    this.registerIcon('files');\r\n    this.registerIcon('fine-tuning');\r\n    this.registerIcon('playground');\r\n    this.registerIcon('settings');\r\n    this.registerIcon('usage');\r\n    this.registerIcon('add');\r\n    this.registerIcon('documentation');\r\n    this.registerIcon('help');\r\n    this.registerIcon('run');\r\n    this.registerIcon('link');\r\n    this.registerIcon('document');\r\n    this.registerIcon('credit-card');\r\n    this.registerIcon('all-products');\r\n    this.registerIcon('robot');\r\n    this.registerIcon('clean');\r\n    this.registerIcon('logs');\r\n    this.registerIcon('edit-square');\r\n    this.registerIcon('dropdown');\r\n    this.registerIcon('bin');\r\n    this.registerIcon('attach-file');\r\n    this.registerIcon('chevron-right');\r\n    this.registerIcon('chevron-left');\r\n    this.registerIcon('loader');\r\n\r\n  }\r\n\r\n  private registerIcon(iconName: string) {\r\n    const formattedName = iconName.trim();\r\n    const path = `./assets/img/svg/${formattedName}.svg`;\r\n    this.iconRegistry.addSvgIcon(\r\n      formattedName,\r\n      this.sanitizer.bypassSecurityTrustResourceUrl(path)\r\n    );\r\n  }\r\n}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "appConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ApplicationConfig",
        "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideAnimations(),\n    importProvidersFrom(\n      SvgIconModule,\n      HttpClientModule,\n    ),\n  ],\n}"
      },
      {
        "name": "barColor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/pages/usage/demo.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Record<string, string>",
        "defaultValue": "{\r\n  \"GPT-4 Turbo\": setColor(1)[\"GPT-4 Turbo\"],\r\n  \"GPT-4\": setColor(1)[\"GPT-4\"],\r\n  \"GPT-3.5 Turbo\": setColor(1)[\"GPT-3.5 Turbo\"],\r\n  \"Fine-tuning models\": setColor(1)[\"Fine-tuning models\"],\r\n  \"Embedding models\": setColor(1)[\"Embedding models\"],\r\n  \"Base models\": setColor(1)[\"Base models\"],\r\n  \"Image models\": setColor(1)[\"Image models\"],\r\n  \"Audio models\": setColor(1)[\"Audio models\"],\r\n} as const"
      },
      {
        "name": "Button",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [variant]=\"variant\"\n    [size]=\"size\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-button>\n  `,\n  props: args\n})"
      },
      {
        "name": "ChartBarTimeline",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "FunctionComponent<ChartBarTimelineProps>",
        "defaultValue": "(props: ChartBarTimelineProps) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\n      <BarChart\n        data={props.data}\n        margin={{\n          top: 10,\n          right: 15,\n          left: -40,\n          bottom: 10,\n        }}\n      >\n        <Tooltip content={renderTooltip} cursor={false}/>\n        <CartesianGrid vertical={false}/>\n        <XAxis dataKey=\"date\" tick={renderCustomXAxis} axisLine={false} interval={5} domain={['dataMin', 'dataMax']}/>\n        <YAxis tick={renderCustomYAxis} axisLine={false} stroke={'none'} allowDataOverflow={true}/>\n        {models.map((model, i) => (\n          <Bar dataKey={model} key={i} stackId=\"a\" fill={props.isOvering ? lightBarColor[model] : barColor[model]}\n               activeBar={<Rectangle fill={barColor[model]}/>}/>))}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}"
      },
      {
        "name": "Checkbox",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-checkbox>{{ label }}</app-input-checkbox>\n  `,\n  props: {...args}\n})"
      },
      {
        "name": "computeCost",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "(cost: number) => {\n  if (!cost) {\n    return '-';\n  } else if (cost < 0.01) {\n    return `<$${Math.round(cost * 100) / 100}`\n  } else {\n    return `$${Math.round(cost * 100) / 100}`\n  }\n}"
      },
      {
        "name": "containerElementRef",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "\"reactComponentContainer\""
      },
      {
        "name": "containerElementRef",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "\"reactComponentContainer\""
      },
      {
        "name": "fontIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-button-icon\n    [disabled]=\"disabled\"\n    [fontIcon]=\"fontIcon\"\n    >{{ label }}</app-button-icon>\n  `,\n  props: {\n    ...args,\n  }\n})"
      },
      {
        "name": "formatDate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(date?: Date) => {\n  return date?.toLocaleDateString(\"en-US\", {\n    month: 'short',\n    day: 'numeric'\n  });\n}"
      },
      {
        "name": "InputDate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-date.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-date\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [required]=\"required\"\n    />\n  `,\n  props: {...args}\n})"
      },
      {
        "name": "lightBarColor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/pages/usage/demo.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Record<string, string>",
        "defaultValue": "{\r\n  \"GPT-4 Turbo\": setColor(0.5)[\"GPT-4 Turbo\"],\r\n  \"GPT-4\": setColor(0.5)[\"GPT-4\"],\r\n  \"GPT-3.5 Turbo\": setColor(0.5)[\"GPT-3.5 Turbo\"],\r\n  \"Fine-tuning models\": setColor(0.5)[\"Fine-tuning models\"],\r\n  \"Embedding models\": setColor(0.5)[\"Embedding models\"],\r\n  \"Base models\": setColor(0.5)[\"Base models\"],\r\n  \"Image models\": setColor(0.5)[\"Image models\"],\r\n  \"Audio models\": setColor(0.5)[\"Audio models\"],\r\n} as const"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonIconComponent>",
        "defaultValue": "{\n  title: 'Components/buttons/buttonIcon',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonIconComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    disabled: false,\n    fontIcon: 'add',\n    svgIcon: undefined,\n  },\n  argTypes: {\n    svgIcon: {\n      description: 'Custom icon',\n      control: {type: 'text'},\n    },\n    fontIcon: {\n      description: 'Icon from material',\n      control: {type: 'text'},\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonTextComponent>",
        "defaultValue": "{\n  title: 'Components/buttons/buttonText',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonTextComponent\n      ]\n    })\n  ],\n  args: {\n    label:'Button',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n  },\n  argTypes: {\n    size: {\n      description: 'The size to use.',\n      options: ['sm', 'md',],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      control: {type: 'select'}\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n    isLoading: {\n      description: 'Whether the button is loading.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-toggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonToggleComponent>",
        "defaultValue": "{\n  title: 'Components/buttons/toggle',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonToggleComponent,\n        SvgIconModule\n      ]\n    })\n  ],\n  args: {\n    size: 'md',\n    color: 'primary',\n    buttons: [\n      {\n        svgIcon: 'playground',\n      },\n      {\n        fontIcon: 'add',\n      },\n      {\n        text: 'All'\n      },\n    ],\n  },\n  argTypes: {\n    size: {\n      description: 'The size to use.',\n      defaultValue: 'sm',\n      options: ['sm', 'md',],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      defaultValue: 'primary',\n      control: {type: 'select'}\n    },\n    buttons: {\n      description: 'The buttons to use.',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonComponent>",
        "defaultValue": "{\n  title: 'Components/buttons/button',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonComponent\n      ]\n    })\n  ],\n  args: {\n    label: 'Button',\n    variant: 'default',\n    color: 'primary',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n  },\n  argTypes: {\n    variant: {\n      description: 'The variant to use.',\n      options: ['default', 'outline', 'ghost', 'link'],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      control: {type: 'select'}\n    },\n    size: {\n      description: 'The size to use.',\n      options: ['xs', 'sm', 'md',],\n      control: {type: 'select'}\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n    isLoading: {\n      description: 'Whether the button is loading.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputCheckboxComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/checkbox',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        InputCheckboxComponent,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-date.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputDateComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/date',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule,BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputDateComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    required: true,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputTextComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/text',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputTextComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    type: 'text',\n    isLoading: false,\n    required: true,\n    icon: undefined,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    type: {\n      description: 'The type to use.',\n      options: ['text', 'email'],\n      control: {type: 'select'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n    isLoading: {\n      description: 'Whether the input is required.',\n    },\n    icon: {\n      defaultValue: undefined,\n      description: 'The icon to use.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/multi-input-select.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MultiInputSelectComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/multi-select',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        MultiInputSelectComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    type: 'Documents',\n    options: [\n      {\n        value: 'first example',\n        displayValue: '1st example'\n      },\n      {\n        value: 'second example',\n        displayValue: '2nd example'\n      },\n    ],\n  },\n  argTypes: {\n    type: {\n      defaultValue: '',\n      description: 'Label when no value is selected.',\n      control: {type: 'text'}\n    },\n    options: {\n      defaultValue: [],\n      description: 'Document',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/select-dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<SelectDropdownComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/select-dropdown',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        SelectDropdownComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    placeholder: 'Custom placeholder',\n    value: '1st value',\n    options: ['1st value', '2nd value'],\n    size: 'sm',\n  },\n  argTypes: {\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    value: {\n      defaultValue: '',\n      description: 'The value.',\n      control: {type: 'text'}\n    },\n    size: {\n      description: 'The size to use.',\n      options: ['sm', 'md'],\n      control: {type: 'select'}\n    },\n    options: {\n      description: 'The options to use.',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/text-area.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<InputTextComponent>",
        "defaultValue": "{\n  title: 'Components/inputs/text-area',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputTextComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    type: 'text',\n    isLoading: false,\n    required: false,\n    icon: undefined,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    type: {\n      description: 'The type to use.',\n      options: ['text', 'email'],\n      control: {type: 'select'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n    isLoading: {\n      description: 'Whether the input is required.',\n    },\n    icon: {\n      defaultValue: undefined,\n      description: 'The icon to use.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
      },
      {
        "name": "models",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/pages/usage/demo.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string[]",
        "defaultValue": "[\r\n  \"GPT-4 Turbo\",\r\n  \"GPT-4\",\r\n  \"GPT-3.5 Turbo\",\r\n  \"Fine-tuning models\",\r\n  \"Embedding models\",\r\n  \"Base models\",\r\n  \"Image models\",\r\n  \"Audio models\",\r\n]"
      },
      {
        "name": "MultiSelect",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/multi-input-select.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-multi-select\n    [type]=\"type\"\n    [options]=\"options\"\n    />\n  `,\n  props: args\n})"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
      },
      {
        "name": "ReactPieChart",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/pie-chart/pie-chart.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "FunctionComponent<PieChartProps>",
        "defaultValue": "(props: PieChartProps) => {\r\n  const value = props.data\r\n  const fullCircleColor = '#ECECF1';\r\n  const data = [\r\n    {value: 1 - value, color: fullCircleColor},\r\n    {value: value, color: '#15803D'}\r\n  ];\r\n  const textColor = '#727277';\r\n  const outerRadius = props.size / 2;\r\n  const innerRadius = outerRadius - 20;\r\n  const renderActiveShape = () => {\r\n    return <g>\r\n      <text x={outerRadius} y={outerRadius} dy={8} textAnchor=\"middle\" fill={textColor}>\r\n        {Math.round(value * 100)}%\r\n      </text>\r\n      <Sector cx={props.size / 2} cy={props.size / 2} innerRadius={innerRadius} outerRadius={outerRadius}\r\n              startAngle={90} endAngle={480} fill={fullCircleColor}/>\r\n    </g>\r\n  }\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\r\n      <PieChart width={props.size} height={props.size}>\r\n        <Pie activeIndex={0} paddingAngle={0} animationBegin={0} animationDuration={1000} startAngle={90}\r\n             endAngle={480}\r\n             activeShape={renderActiveShape}\r\n             data={data}\r\n             dataKey=\"value\" innerRadius={innerRadius} outerRadius={outerRadius}\r\n             fill=\"#ECECF1\">\r\n          {data.map((datum, i) => (\r\n            <Cell key={`cell-${i}`} fill={datum.color}/>\r\n          ))}\r\n        </Pie>\r\n\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}"
      },
      {
        "name": "renderCustomXAxis",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.payload.coordinate} y={data.y} dy={6} fontSize={10} textAnchor={\"middle\"}>\n      {formatDate(data.payload.value)}\n    </text>\n  );\n}"
      },
      {
        "name": "renderCustomYAxis",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.x} y={data.y} dy={5} fontSize={10} textAnchor={\"end\"}>\n      <tspan>${data.payload.value}</tspan>\n    </text>\n  );\n}"
      },
      {
        "name": "renderTooltip",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(tooltip: any) => {\n  if (tooltip.active) {\n    const total = sum(tooltip.payload.map((pld: { value: any; }) => pld.value));\n    return <div className='shadow border p-2.5 bg-white rounded-lg text-xs flex flex-col'>\n      <div className='flex items-center justify-between font-semibold gap-2'>\n        <span className='min-w-[100px]'>{formatDate(tooltip.label)}</span>\n        <span>{computeCost(total)}</span>\n      </div>\n      {tooltip.payload.filter((pld: any) => pld.value > 0).map((pld: any) => <div key={pld.name}\n                                                                                  className='flex items-center justify-between gap-2 text-gray-500'>\n        <span className='flex items-center gap-2'>\n        <span className='h-2 w-2' style={{background: barColor[pld.name]}}></span>\n          {pld.name}\n        </span>\n        <span className='font-semibold'>{computeCost(pld.value)}</span>\n      </div>)}\n    </div>;\n  }\n  return null;\n}"
      },
      {
        "name": "SelectDropdown",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/select-dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-select-dropdown\n    class=\"w-52\"\n    [value]=\"value\"\n    [size]=\"size\"\n    [options]=\"options\"\n    [placeholder]=\"placeholder\"\n    />\n  `,\n  props: args\n})"
      },
      {
        "name": "setColor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/pages/usage/demo.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Record<string | string>",
        "defaultValue": "(opacity: number) => ({\r\n  \"GPT-4 Turbo\": `rgba(16,163,127,${opacity})`,\r\n  \"GPT-4\": `rgba(22,100,81,${opacity})`,\r\n  \"GPT-3.5 Turbo\": `rgba(54,208,218,${opacity})`,\r\n  \"Fine-tuning models\": `rgba(108,212,104,${opacity})`,\r\n  \"Embedding models\": `rgba(243,197,246,${opacity})`,\r\n  \"Base models\": `rgba(183,110,189,${opacity})`,\r\n  \"Image models\": `rgba(55,126,184,${opacity})`,\r\n  \"Audio models\": `rgba(77,175,74,${opacity})`,\r\n}) as const"
      },
      {
        "name": "SvgIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-button-icon\n    [disabled]=\"disabled\"\n    [fontIcon]=\"fontIcon\"\n    [svgIcon]=\"svgIcon\"\n    >{{ label }}</app-button-icon>\n  `,\n  props: {\n    ...args,\n    svgIcon: 'playground',\n    fontIcon: undefined,\n  },\n})"
      },
      {
        "name": "Text",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [required]=\"required\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-input-text>\n  `,\n  props: args\n})"
      },
      {
        "name": "TextArea",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/text-area.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [required]=\"required\"\n    [isLoading]=\"isLoading\"\n    />\n  `,\n  props: args\n})"
      },
      {
        "name": "TextButton",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-button-text\n    [size]=\"size\"\n    [disabled]=\"disabled\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-button-text>\n  `,\n  props: args\n})"
      },
      {
        "name": "TextWithIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/inputs/input-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [required]=\"required\"\n    [icon]=\"icon\"\n    [isLoading]=\"isLoading\"\n    />\n  `,\n  props: {...args, icon: 'playground'}\n})"
      },
      {
        "name": "Toggle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/buttons/button-toggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\n  template: `\n  <app-button-toggle\n    [size]=\"size\"\n    [color]=\"color\"\n    [buttons]=\"buttons\"\n   />\n  `,\n  props: args\n})"
      }
    ],
    "functions": [
      {
        "name": "getDeviceDimension",
        "file": "src/app/components/navigation/sidenav/size.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "size",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "SIZE",
        "jsdoctags": [
          {
            "name": "size",
            "type": "number",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "getUsageDemo",
        "file": "src/app/pages/usage/demo.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "LineChartDatum[]"
      },
      {
        "name": "randomNumber",
        "file": "src/app/pages/usage/demo.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "number"
      },
      {
        "name": "toBoolean",
        "file": "src/shared/utils.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "value",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "boolean",
        "jsdoctags": [
          {
            "name": "value",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "ButtonColor",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"primary\" | \"neutral\"",
        "file": "src/app/components/elements/buttons/button/button.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "ButtonVariant",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"default\" | \"outline\" | \"ghost\" | \"link\"",
        "file": "src/app/components/elements/buttons/button/button.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "LineChartDatum",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 193
      },
      {
        "name": "Navigation",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/app/components/navigation/sidenav/navigation.type.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "Size",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"xs\" | \"md\" | \"sm\"",
        "file": "src/app/components/elements/buttons/button/button.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<ButtonIconComponent>",
        "file": "src/stories/buttons/button-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<ButtonTextComponent>",
        "file": "src/stories/buttons/button-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<ButtonToggleComponent>",
        "file": "src/stories/buttons/button-toggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<ButtonComponent>",
        "file": "src/stories/buttons/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<InputCheckboxComponent>",
        "file": "src/stories/inputs/input-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<InputDateComponent>",
        "file": "src/stories/inputs/input-date.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<InputTextComponent>",
        "file": "src/stories/inputs/input-text.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<MultiInputSelectComponent>",
        "file": "src/stories/inputs/multi-input-select.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<SelectDropdownComponent>",
        "file": "src/stories/inputs/select-dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryFn<InputTextComponent>",
        "file": "src/stories/inputs/text-area.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [
      {
        "name": "SIZE",
        "childs": [
          {
            "name": "SM",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "MD",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "LG",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "XL",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "XXL",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/components/navigation/sidenav/size.ts"
      }
    ],
    "groupedVariables": {
      "src/app/app.config.ts": [
        {
          "name": "appConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ApplicationConfig",
          "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideAnimations(),\n    importProvidersFrom(\n      SvgIconModule,\n      HttpClientModule,\n    ),\n  ],\n}"
        }
      ],
      "src/app/pages/usage/demo.ts": [
        {
          "name": "barColor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/pages/usage/demo.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string, string>",
          "defaultValue": "{\r\n  \"GPT-4 Turbo\": setColor(1)[\"GPT-4 Turbo\"],\r\n  \"GPT-4\": setColor(1)[\"GPT-4\"],\r\n  \"GPT-3.5 Turbo\": setColor(1)[\"GPT-3.5 Turbo\"],\r\n  \"Fine-tuning models\": setColor(1)[\"Fine-tuning models\"],\r\n  \"Embedding models\": setColor(1)[\"Embedding models\"],\r\n  \"Base models\": setColor(1)[\"Base models\"],\r\n  \"Image models\": setColor(1)[\"Image models\"],\r\n  \"Audio models\": setColor(1)[\"Audio models\"],\r\n} as const"
        },
        {
          "name": "lightBarColor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/pages/usage/demo.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string, string>",
          "defaultValue": "{\r\n  \"GPT-4 Turbo\": setColor(0.5)[\"GPT-4 Turbo\"],\r\n  \"GPT-4\": setColor(0.5)[\"GPT-4\"],\r\n  \"GPT-3.5 Turbo\": setColor(0.5)[\"GPT-3.5 Turbo\"],\r\n  \"Fine-tuning models\": setColor(0.5)[\"Fine-tuning models\"],\r\n  \"Embedding models\": setColor(0.5)[\"Embedding models\"],\r\n  \"Base models\": setColor(0.5)[\"Base models\"],\r\n  \"Image models\": setColor(0.5)[\"Image models\"],\r\n  \"Audio models\": setColor(0.5)[\"Audio models\"],\r\n} as const"
        },
        {
          "name": "models",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/pages/usage/demo.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "defaultValue": "[\r\n  \"GPT-4 Turbo\",\r\n  \"GPT-4\",\r\n  \"GPT-3.5 Turbo\",\r\n  \"Fine-tuning models\",\r\n  \"Embedding models\",\r\n  \"Base models\",\r\n  \"Image models\",\r\n  \"Audio models\",\r\n]"
        },
        {
          "name": "setColor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/pages/usage/demo.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | string>",
          "defaultValue": "(opacity: number) => ({\r\n  \"GPT-4 Turbo\": `rgba(16,163,127,${opacity})`,\r\n  \"GPT-4\": `rgba(22,100,81,${opacity})`,\r\n  \"GPT-3.5 Turbo\": `rgba(54,208,218,${opacity})`,\r\n  \"Fine-tuning models\": `rgba(108,212,104,${opacity})`,\r\n  \"Embedding models\": `rgba(243,197,246,${opacity})`,\r\n  \"Base models\": `rgba(183,110,189,${opacity})`,\r\n  \"Image models\": `rgba(55,126,184,${opacity})`,\r\n  \"Audio models\": `rgba(77,175,74,${opacity})`,\r\n}) as const"
        }
      ],
      "src/stories/buttons/button.stories.ts": [
        {
          "name": "Button",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [variant]=\"variant\"\n    [size]=\"size\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-button>\n  `,\n  props: args\n})"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonComponent>",
          "defaultValue": "{\n  title: 'Components/buttons/button',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonComponent\n      ]\n    })\n  ],\n  args: {\n    label: 'Button',\n    variant: 'default',\n    color: 'primary',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n  },\n  argTypes: {\n    variant: {\n      description: 'The variant to use.',\n      options: ['default', 'outline', 'ghost', 'link'],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      control: {type: 'select'}\n    },\n    size: {\n      description: 'The size to use.',\n      options: ['xs', 'sm', 'md',],\n      control: {type: 'select'}\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n    isLoading: {\n      description: 'Whether the button is loading.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        }
      ],
      "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx": [
        {
          "name": "ChartBarTimeline",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FunctionComponent<ChartBarTimelineProps>",
          "defaultValue": "(props: ChartBarTimelineProps) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\n      <BarChart\n        data={props.data}\n        margin={{\n          top: 10,\n          right: 15,\n          left: -40,\n          bottom: 10,\n        }}\n      >\n        <Tooltip content={renderTooltip} cursor={false}/>\n        <CartesianGrid vertical={false}/>\n        <XAxis dataKey=\"date\" tick={renderCustomXAxis} axisLine={false} interval={5} domain={['dataMin', 'dataMax']}/>\n        <YAxis tick={renderCustomYAxis} axisLine={false} stroke={'none'} allowDataOverflow={true}/>\n        {models.map((model, i) => (\n          <Bar dataKey={model} key={i} stackId=\"a\" fill={props.isOvering ? lightBarColor[model] : barColor[model]}\n               activeBar={<Rectangle fill={barColor[model]}/>}/>))}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}"
        },
        {
          "name": "computeCost",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "(cost: number) => {\n  if (!cost) {\n    return '-';\n  } else if (cost < 0.01) {\n    return `<$${Math.round(cost * 100) / 100}`\n  } else {\n    return `$${Math.round(cost * 100) / 100}`\n  }\n}"
        },
        {
          "name": "formatDate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(date?: Date) => {\n  return date?.toLocaleDateString(\"en-US\", {\n    month: 'short',\n    day: 'numeric'\n  });\n}"
        },
        {
          "name": "renderCustomXAxis",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.payload.coordinate} y={data.y} dy={6} fontSize={10} textAnchor={\"middle\"}>\n      {formatDate(data.payload.value)}\n    </text>\n  );\n}"
        },
        {
          "name": "renderCustomYAxis",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(data: { x: number, y: number, stroke: string, value: string, payload: any }) => {\n  return (\n    <text x={data.x} y={data.y} dy={5} fontSize={10} textAnchor={\"end\"}>\n      <tspan>${data.payload.value}</tspan>\n    </text>\n  );\n}"
        },
        {
          "name": "renderTooltip",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(tooltip: any) => {\n  if (tooltip.active) {\n    const total = sum(tooltip.payload.map((pld: { value: any; }) => pld.value));\n    return <div className='shadow border p-2.5 bg-white rounded-lg text-xs flex flex-col'>\n      <div className='flex items-center justify-between font-semibold gap-2'>\n        <span className='min-w-[100px]'>{formatDate(tooltip.label)}</span>\n        <span>{computeCost(total)}</span>\n      </div>\n      {tooltip.payload.filter((pld: any) => pld.value > 0).map((pld: any) => <div key={pld.name}\n                                                                                  className='flex items-center justify-between gap-2 text-gray-500'>\n        <span className='flex items-center gap-2'>\n        <span className='h-2 w-2' style={{background: barColor[pld.name]}}></span>\n          {pld.name}\n        </span>\n        <span className='font-semibold'>{computeCost(pld.value)}</span>\n      </div>)}\n    </div>;\n  }\n  return null;\n}"
        }
      ],
      "src/stories/inputs/input-checkbox.stories.ts": [
        {
          "name": "Checkbox",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-checkbox>{{ label }}</app-input-checkbox>\n  `,\n  props: {...args}\n})"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputCheckboxComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/checkbox',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        InputCheckboxComponent,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        }
      ],
      "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx": [
        {
          "name": "containerElementRef",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "\"reactComponentContainer\""
        }
      ],
      "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx": [
        {
          "name": "containerElementRef",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "\"reactComponentContainer\""
        }
      ],
      "src/stories/buttons/button-icon.stories.ts": [
        {
          "name": "fontIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-button-icon\n    [disabled]=\"disabled\"\n    [fontIcon]=\"fontIcon\"\n    >{{ label }}</app-button-icon>\n  `,\n  props: {\n    ...args,\n  }\n})"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonIconComponent>",
          "defaultValue": "{\n  title: 'Components/buttons/buttonIcon',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonIconComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    disabled: false,\n    fontIcon: 'add',\n    svgIcon: undefined,\n  },\n  argTypes: {\n    svgIcon: {\n      description: 'Custom icon',\n      control: {type: 'text'},\n    },\n    fontIcon: {\n      description: 'Icon from material',\n      control: {type: 'text'},\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "SvgIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-button-icon\n    [disabled]=\"disabled\"\n    [fontIcon]=\"fontIcon\"\n    [svgIcon]=\"svgIcon\"\n    >{{ label }}</app-button-icon>\n  `,\n  props: {\n    ...args,\n    svgIcon: 'playground',\n    fontIcon: undefined,\n  },\n})"
        }
      ],
      "src/stories/inputs/input-date.stories.ts": [
        {
          "name": "InputDate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-date.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-date\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [required]=\"required\"\n    />\n  `,\n  props: {...args}\n})"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-date.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputDateComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/date',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule,BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputDateComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    required: true,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        }
      ],
      "src/stories/buttons/button-text.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonTextComponent>",
          "defaultValue": "{\n  title: 'Components/buttons/buttonText',\n  decorators: [\n    applicationConfig({\n      providers: []\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonTextComponent\n      ]\n    })\n  ],\n  args: {\n    label:'Button',\n    size: 'md',\n    isLoading: false,\n    disabled: false,\n  },\n  argTypes: {\n    size: {\n      description: 'The size to use.',\n      options: ['sm', 'md',],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      control: {type: 'select'}\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n    isLoading: {\n      description: 'Whether the button is loading.',\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "TextButton",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-button-text\n    [size]=\"size\"\n    [disabled]=\"disabled\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-button-text>\n  `,\n  props: args\n})"
        }
      ],
      "src/stories/buttons/button-toggle.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-toggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonToggleComponent>",
          "defaultValue": "{\n  title: 'Components/buttons/toggle',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        ButtonToggleComponent,\n        SvgIconModule\n      ]\n    })\n  ],\n  args: {\n    size: 'md',\n    color: 'primary',\n    buttons: [\n      {\n        svgIcon: 'playground',\n      },\n      {\n        fontIcon: 'add',\n      },\n      {\n        text: 'All'\n      },\n    ],\n  },\n  argTypes: {\n    size: {\n      description: 'The size to use.',\n      defaultValue: 'sm',\n      options: ['sm', 'md',],\n      control: {type: 'select'}\n    },\n    color: {\n      description: 'Theme color palette for the button.',\n      options: ['primary', 'neutral'],\n      defaultValue: 'primary',\n      control: {type: 'select'}\n    },\n    buttons: {\n      description: 'The buttons to use.',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "Toggle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/buttons/button-toggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-button-toggle\n    [size]=\"size\"\n    [color]=\"color\"\n    [buttons]=\"buttons\"\n   />\n  `,\n  props: args\n})"
        }
      ],
      "src/stories/inputs/input-text.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputTextComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/text',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputTextComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    type: 'text',\n    isLoading: false,\n    required: true,\n    icon: undefined,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    type: {\n      description: 'The type to use.',\n      options: ['text', 'email'],\n      control: {type: 'select'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n    isLoading: {\n      description: 'Whether the input is required.',\n    },\n    icon: {\n      defaultValue: undefined,\n      description: 'The icon to use.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "Text",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [required]=\"required\"\n    [isLoading]=\"isLoading\"\n    >{{ label }}</app-input-text>\n  `,\n  props: args\n})"
        },
        {
          "name": "TextWithIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/input-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [required]=\"required\"\n    [icon]=\"icon\"\n    [isLoading]=\"isLoading\"\n    />\n  `,\n  props: {...args, icon: 'playground'}\n})"
        }
      ],
      "src/stories/inputs/multi-input-select.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/multi-input-select.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MultiInputSelectComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/multi-select',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        MultiInputSelectComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    type: 'Documents',\n    options: [\n      {\n        value: 'first example',\n        displayValue: '1st example'\n      },\n      {\n        value: 'second example',\n        displayValue: '2nd example'\n      },\n    ],\n  },\n  argTypes: {\n    type: {\n      defaultValue: '',\n      description: 'Label when no value is selected.',\n      control: {type: 'text'}\n    },\n    options: {\n      defaultValue: [],\n      description: 'Document',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "MultiSelect",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/multi-input-select.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-multi-select\n    [type]=\"type\"\n    [options]=\"options\"\n    />\n  `,\n  props: args\n})"
        }
      ],
      "src/stories/inputs/select-dropdown.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/select-dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<SelectDropdownComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/select-dropdown',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule, BrowserAnimationsModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        SelectDropdownComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    placeholder: 'Custom placeholder',\n    value: '1st value',\n    options: ['1st value', '2nd value'],\n    size: 'sm',\n  },\n  argTypes: {\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    value: {\n      defaultValue: '',\n      description: 'The value.',\n      control: {type: 'text'}\n    },\n    size: {\n      description: 'The size to use.',\n      options: ['sm', 'md'],\n      control: {type: 'select'}\n    },\n    options: {\n      description: 'The options to use.',\n      control: {type: 'object'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "SelectDropdown",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/select-dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-select-dropdown\n    class=\"w-52\"\n    [value]=\"value\"\n    [size]=\"size\"\n    [options]=\"options\"\n    [placeholder]=\"placeholder\"\n    />\n  `,\n  props: args\n})"
        }
      ],
      "src/stories/inputs/text-area.stories.ts": [
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/text-area.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<InputTextComponent>",
          "defaultValue": "{\n  title: 'Components/inputs/text-area',\n  decorators: [\n    applicationConfig({\n      providers: [importProvidersFrom(HttpClientModule)]\n    }),\n    moduleMetadata({\n      imports: [\n        InputTextComponent,\n        SvgIconModule,\n      ]\n    })\n  ],\n  args: {\n    label: 'Custom Label',\n    description: 'Custom Description',\n    placeholder: 'Custom Placeholder',\n    type: 'text',\n    isLoading: false,\n    required: false,\n    icon: undefined,\n  },\n  argTypes: {\n    label: {\n      defaultValue: '',\n      description: 'The label.',\n      control: {type: 'text'}\n    },\n    description: {\n      defaultValue: '',\n      description: 'The description.',\n      control: {type: 'text'}\n    },\n    placeholder: {\n      defaultValue: '',\n      description: 'The placeholder.',\n      control: {type: 'text'}\n    },\n    type: {\n      description: 'The type to use.',\n      options: ['text', 'email'],\n      control: {type: 'select'}\n    },\n    required: {\n      description: 'Whether the input is required.',\n    },\n    isLoading: {\n      description: 'Whether the input is required.',\n    },\n    icon: {\n      defaultValue: undefined,\n      description: 'The icon to use.',\n      control: {type: 'text'}\n    },\n  },\n  parameters: {\n    controls: {expanded: true}\n  }\n} as Meta"
        },
        {
          "name": "TextArea",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/inputs/text-area.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\n  template: `\n  <app-input-text\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [description]=\"description\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [required]=\"required\"\n    [isLoading]=\"isLoading\"\n    />\n  `,\n  props: args\n})"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
        }
      ],
      "src/app/components/elements/chart/pie-chart/pie-chart.tsx": [
        {
          "name": "ReactPieChart",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/components/elements/chart/pie-chart/pie-chart.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FunctionComponent<PieChartProps>",
          "defaultValue": "(props: PieChartProps) => {\r\n  const value = props.data\r\n  const fullCircleColor = '#ECECF1';\r\n  const data = [\r\n    {value: 1 - value, color: fullCircleColor},\r\n    {value: value, color: '#15803D'}\r\n  ];\r\n  const textColor = '#727277';\r\n  const outerRadius = props.size / 2;\r\n  const innerRadius = outerRadius - 20;\r\n  const renderActiveShape = () => {\r\n    return <g>\r\n      <text x={outerRadius} y={outerRadius} dy={8} textAnchor=\"middle\" fill={textColor}>\r\n        {Math.round(value * 100)}%\r\n      </text>\r\n      <Sector cx={props.size / 2} cy={props.size / 2} innerRadius={innerRadius} outerRadius={outerRadius}\r\n              startAngle={90} endAngle={480} fill={fullCircleColor}/>\r\n    </g>\r\n  }\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"visible\">\r\n      <PieChart width={props.size} height={props.size}>\r\n        <Pie activeIndex={0} paddingAngle={0} animationBegin={0} animationDuration={1000} startAngle={90}\r\n             endAngle={480}\r\n             activeShape={renderActiveShape}\r\n             data={data}\r\n             dataKey=\"value\" innerRadius={innerRadius} outerRadius={outerRadius}\r\n             fill=\"#ECECF1\">\r\n          {data.map((datum, i) => (\r\n            <Cell key={`cell-${i}`} fill={datum.color}/>\r\n          ))}\r\n        </Pie>\r\n\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}"
        }
      ]
    },
    "groupedFunctions": {
      "src/app/components/navigation/sidenav/size.ts": [
        {
          "name": "getDeviceDimension",
          "file": "src/app/components/navigation/sidenav/size.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "size",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "SIZE",
          "jsdoctags": [
            {
              "name": "size",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "src/app/pages/usage/demo.ts": [
        {
          "name": "getUsageDemo",
          "file": "src/app/pages/usage/demo.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "LineChartDatum[]"
        },
        {
          "name": "randomNumber",
          "file": "src/app/pages/usage/demo.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "number"
        }
      ],
      "src/shared/utils.ts": [
        {
          "name": "toBoolean",
          "file": "src/shared/utils.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "value",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "boolean",
          "jsdoctags": [
            {
              "name": "value",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "src/app/components/navigation/sidenav/size.ts": [
        {
          "name": "SIZE",
          "childs": [
            {
              "name": "SM",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "MD",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "LG",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "XL",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "XXL",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/components/navigation/sidenav/size.ts"
        }
      ]
    },
    "groupedTypeAliases": {
      "src/app/components/elements/buttons/button/button.component.ts": [
        {
          "name": "ButtonColor",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"primary\" | \"neutral\"",
          "file": "src/app/components/elements/buttons/button/button.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "ButtonVariant",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"default\" | \"outline\" | \"ghost\" | \"link\"",
          "file": "src/app/components/elements/buttons/button/button.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "Size",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"xs\" | \"md\" | \"sm\"",
          "file": "src/app/components/elements/buttons/button/button.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx": [
        {
          "name": "LineChartDatum",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 193
        }
      ],
      "src/app/components/navigation/sidenav/navigation.type.ts": [
        {
          "name": "Navigation",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/app/components/navigation/sidenav/navigation.type.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        }
      ],
      "src/stories/buttons/button-icon.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<ButtonIconComponent>",
          "file": "src/stories/buttons/button-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/buttons/button-text.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<ButtonTextComponent>",
          "file": "src/stories/buttons/button-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/buttons/button-toggle.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<ButtonToggleComponent>",
          "file": "src/stories/buttons/button-toggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/buttons/button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<ButtonComponent>",
          "file": "src/stories/buttons/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/input-checkbox.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<InputCheckboxComponent>",
          "file": "src/stories/inputs/input-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/input-date.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<InputDateComponent>",
          "file": "src/stories/inputs/input-date.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/input-text.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<InputTextComponent>",
          "file": "src/stories/inputs/input-text.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/multi-input-select.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<MultiInputSelectComponent>",
          "file": "src/stories/inputs/multi-input-select.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/select-dropdown.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<SelectDropdownComponent>",
          "file": "src/stories/inputs/select-dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/inputs/text-area.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryFn<InputTextComponent>",
          "file": "src/stories/inputs/text-area.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/app.config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "appConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/directive/highlight/highlight.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "HighlightDirective",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/components/directive/highlight/tooltip/tooltip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/directive/menu/menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/directive/menu/menu.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "HighlightDirective",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/badge/tag.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TagComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-icon/button-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-navigation/button-navigation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonNavigationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-text/button-text.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonTextComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonToggleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MultiButton",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button-toggle/button-toggle.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "OptionButton",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/buttons/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
        "type": "component",
        "linktype": "component",
        "name": "ChartBarTimelineComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.component.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "containerElementRef",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "interface",
        "linktype": "interface",
        "name": "ChartBarTimelineProps",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ChartBarTimeline",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "computeCost",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "formatDate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderCustomXAxis",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderCustomYAxis",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/chart-bar-timeline/chart-bar-timeline.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderTooltip",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx",
        "type": "component",
        "linktype": "component",
        "name": "PieChartComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/pie-chart/pie-chart.component.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "containerElementRef",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/pie-chart/pie-chart.tsx",
        "type": "interface",
        "linktype": "interface",
        "name": "PieChartProps",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/chart/pie-chart/pie-chart.tsx",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ReactPieChart",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/headers/header-tab/header-tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderTabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/headers/header-with-sub-header/header-with-sub-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderWithSubHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/headers/header/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/icon/icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/input-checkbox/input-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/input-date/input-date.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputDateComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/input-text/input-text.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputTextComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/label/label.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/multi-input-select/multi-input-select.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MultiInputSelectComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/select-dropdown/select-dropdown.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SelectDropdownComponent",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/inputs/text-area/text-area.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TextAreaComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/loaders/skeleton-loader/skeleton-loader.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SkeletonLoaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/loaders/spinner/spinner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/notice/notice.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NoticeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/tag/badge.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BadgeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/elements/user/profil-picture/profile-picture.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProfilePictureComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/sidenav/router-button/router-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RouterButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/sidenav/sidenav.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SidenavComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/sidenav/size.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getDeviceDimension",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/tabs/tab-route/tab-route.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabRouteComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/tabs/tab/tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/vertical-menu/menu-button/menu-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MenuButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/vertical-menu/vertical-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "VerticalMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/components/navigation/vertical-menu/vertical-menu.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Menu",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/account.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AccountComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/billings/billings-history/billings-history.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BillingsHistoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/billings/billings-overview/billings-overview.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BillingsOverviewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/billings/billings-payment-methods/billings-payment-methods.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BillingsPaymentMethodsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/billings/billings-preferences/billings-preferences.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BillingsPreferencesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/billings/page/billings.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BillingsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/limits/limits.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LimitsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/organization/organization.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "OrganizationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/profile/profile.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProfileComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/account/team/team.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TeamComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/api-keys/api-keys.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ApiKeysComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/assistants/assistants.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AssistantsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/docs/docs-api-reference/docs-api-reference.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DocsApiReferenceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/docs/docs-overview/docs-overview.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DocsOverviewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/docs/page/docs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DocsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/files/files.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FilesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/finetune/finetune.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FinetuneComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/playground/playground.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PlaygroundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getUsageDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "randomNumber",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "barColor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "lightBarColor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "models",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "setColor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/pages/usage/usage.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "UsageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/shared/utils.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "toBoolean",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "fontIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SvgIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-text.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-text.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TextButton",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-toggle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button-toggle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Toggle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Button",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/buttons/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Checkbox",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-date.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InputDate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-date.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-text.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-text.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Text",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/input-text.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TextWithIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/multi-input-select.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/multi-input-select.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MultiSelect",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/select-dropdown.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/select-dropdown.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SelectDropdown",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/text-area.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/inputs/text-area.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TextArea",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
